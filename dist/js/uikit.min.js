/* ! UIkit 3.6.19 | https://www.getuikit.com | (c) 2014 - 2021 YOOtheme | MIT License */

!(function (t, e) {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = e())
    : "function" == typeof define && define.amd
    ? define("uikit", e)
    : ((t =
        "undefined" != typeof globalThis ? globalThis : t || self).UIkit = e());
})(this, function () {
  "use strict";
  let t = Object.prototype,
    n = t.hasOwnProperty;
  function c(t, e) {
    return n.call(t, e);
  }
  const e = /\B([A-Z])/g,
    d = rt(function (t) {
      return t.replace(e, "-$1").toLowerCase();
    }),
    i = /-(\w)/g,
    f = rt(function (t) {
      return t.replace(i, r);
    }),
    p = rt(function (t) {
      return t.length ? r(0, t.charAt(0)) + t.slice(1) : "";
    });
  function r(t, e) {
    return e ? e.toUpperCase() : "";
  }
  var o = String.prototype,
    s =
      o.startsWith ||
      function (t) {
        return 0 === this.lastIndexOf(t, 0);
      };
  function g(t, e) {
    return s.call(t, e);
  }
  const a =
    o.endsWith ||
    function (t) {
      return this.substr(-t.length) === t;
    };
  function u(t, e) {
    return a.call(t, e);
  }
  let h = Array.prototype,
    l = function (t, e) {
      return !!~this.indexOf(t, e);
    },
    m = o.includes || l,
    v = h.includes || l;
  function w(t, e) {
    return t && (z(t) ? m : v).call(t, e);
  }
  const b =
    h.findIndex ||
    function (t) {
      for (let e = arguments, n = 0; n < this.length; n++)
        if (t.call(e[1], this[n], n, this)) return n;
      return -1;
    };
  function x(t, e) {
    return b.call(t, e);
  }
  const y = Array.isArray;
  function k(t) {
    return "function" == typeof t;
  }
  function $(t) {
    return null !== t && "object" == typeof t;
  }
  const S = t.toString;
  function I(t) {
    return "[object Object]" === S.call(t);
  }
  function E(t) {
    return $(t) && t === t.window;
  }
  function T(t) {
    return 9 === A(t);
  }
  function C(t) {
    return 1 <= A(t);
  }
  function _(t) {
    return 1 === A(t);
  }
  function A(t) {
    return !E(t) && $(t) && t.nodeType;
  }
  function M(t) {
    return "boolean" == typeof t;
  }
  function z(t) {
    return "string" == typeof t;
  }
  function B(t) {
    return "number" == typeof t;
  }
  function N(t) {
    return B(t) || (z(t) && !isNaN(t - parseFloat(t)));
  }
  function O(t) {
    return !(y(t) ? t.length : $(t) && Object.keys(t).length);
  }
  function D(t) {
    return void 0 === t;
  }
  function P(t) {
    return M(t)
      ? t
      : "true" === t ||
          "1" === t ||
          "" === t ||
          ("false" !== t && "0" !== t && t);
  }
  function H(t) {
    t = Number(t);
    return !isNaN(t) && t;
  }
  function L(t) {
    return parseFloat(t) || 0;
  }
  const j =
    Array.from ||
    function (t) {
      return h.slice.call(t);
    };
  function F(t) {
    return W(t)[0];
  }
  function W(t) {
    return (t && (C(t) ? [t] : j(t).filter(C))) || [];
  }
  function V(t) {
    return E(t)
      ? t
      : (t = F(t))
      ? (T(t) ? t : t.ownerDocument).defaultView
      : window;
  }
  function R(t) {
    return t ? (u(t, "ms") ? L(t) : 1e3 * L(t)) : 0;
  }
  function q(t, n) {
    return (
      t === n ||
      ($(t) &&
        $(n) &&
        Object.keys(t).length === Object.keys(n).length &&
        X(t, function (t, e) {
          return t === n[e];
        }))
    );
  }
  function U(t, e, n) {
    return t.replace(new RegExp(e + "|" + n, "g"), function (t) {
      return t === e ? n : e;
    });
  }
  const Y =
    Object.assign ||
    function (t) {
      for (var e = [], n = arguments.length - 1; 0 < n--; )
        e[n] = arguments[n + 1];
      t = Object(t);
      for (let i = 0; i < e.length; i++) {
        const r = e[i];
        if (null !== r) for (const o in r) c(r, o) && (t[o] = r[o]);
      }
      return t;
    };
  function G(t) {
    return t[t.length - 1];
  }
  function X(t, e) {
    for (const n in t) if (!1 === e(t[n], n)) return !1;
    return !0;
  }
  function K(t, n) {
    return t.slice().sort(function (t, e) {
      t = t[n];
      void 0 === t && (t = 0);
      e = e[n];
      return (e = void 0 === e ? 0 : e) < t ? 1 : t < e ? -1 : 0;
    });
  }
  function J(t, e) {
    const n = new Set();
    return t.filter(function (t) {
      t = t[e];
      return !n.has(t) && (n.add(t) || !0);
    });
  }
  function Z(t, e, n) {
    return (
      void 0 === e && (e = 0),
      void 0 === n && (n = 1),
      Math.min(Math.max(H(t) || 0, e), n)
    );
  }
  function Q() {}
  function tt() {
    for (var i = [], t = arguments.length; t--; ) i[t] = arguments[t];
    return [
      ["bottom", "top"],
      ["right", "left"],
    ].every(function (t) {
      const e = t[0],
        n = t[1];
      return (
        0 <
        Math.min.apply(
          Math,
          i.map(function (t) {
            return t[e];
          })
        ) -
          Math.max.apply(
            Math,
            i.map(function (t) {
              return t[n];
            })
          )
      );
    });
  }
  function et(t, e) {
    return t.x <= e.right && t.x >= e.left && t.y <= e.bottom && t.y >= e.top;
  }
  const nt = {
    ratio(t, e, n) {
      const i = "width" === e ? "height" : "width",
        r = {};
      return (
        (r[i] = t[e] ? Math.round((n * t[i]) / t[e]) : t[i]), (r[e] = n), r
      );
    },
    contain(n, i) {
      const r = this;
      return (
        X((n = Y({}, n)), function (t, e) {
          return (n = n[e] > i[e] ? r.ratio(n, e, i[e]) : n);
        }),
        n
      );
    },
    cover(n, i) {
      const r = this;
      return (
        X((n = this.contain(n, i)), function (t, e) {
          return (n = n[e] < i[e] ? r.ratio(n, e, i[e]) : n);
        }),
        n
      );
    },
  };
  function it(t, e, n, i) {
    void 0 === n && (n = 0), void 0 === i && (i = !1);
    const r = (e = W(e)).length;
    return (
      (t = N(t)
        ? H(t)
        : "next" === t
        ? n + 1
        : "previous" === t
        ? n - 1
        : e.indexOf(F(t))),
      i ? Z(t, 0, r - 1) : (t %= r) < 0 ? t + r : t
    );
  }
  function rt(e) {
    const n = Object.create(null);
    return function (t) {
      return n[t] || (n[t] = e(t));
    };
  }
  function ot(t, e, n) {
    if ($(e)) for (const i in e) ot(t, i, e[i]);
    else {
      if (D(n)) return (t = F(t)) && t.getAttribute(e);
      W(t).forEach(function (t) {
        null === (n = k(n) ? n.call(t, ot(t, e)) : n)
          ? at(t, e)
          : t.setAttribute(e, n);
      });
    }
  }
  function st(t, e) {
    return W(t).some(function (t) {
      return t.hasAttribute(e);
    });
  }
  function at(t, e) {
    (t = W(t)),
      e.split(" ").forEach(function (e) {
        return t.forEach(function (t) {
          return t.hasAttribute(e) && t.removeAttribute(e);
        });
      });
  }
  function ut(t, e) {
    for (let n = 0, i = [e, "data-" + e]; n < i.length; n++)
      if (st(t, i[n])) return ot(t, i[n]);
  }
  var ct = "undefined" != typeof window,
    ht = ct && /msie|trident/i.test(window.navigator.userAgent),
    lt = ct && "rtl" === ot(document.documentElement, "dir"),
    dt = ct && "ontouchstart" in window,
    ft = ct && window.PointerEvent,
    pt =
      ct &&
      (dt ||
        (window.DocumentTouch && document instanceof DocumentTouch) ||
        navigator.maxTouchPoints),
    mt = ft ? "pointerdown" : dt ? "touchstart" : "mousedown",
    gt = ft ? "pointermove" : dt ? "touchmove" : "mousemove",
    vt = ft ? "pointerup" : dt ? "touchend" : "mouseup",
    wt = ft ? "pointerenter" : dt ? "" : "mouseenter",
    bt = ft ? "pointerleave" : dt ? "" : "mouseleave",
    xt = ft ? "pointercancel" : "touchcancel",
    yt = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      menuitem: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0,
    };
  function kt(t) {
    return W(t).some(function (t) {
      return yt[t.tagName.toLowerCase()];
    });
  }
  function $t(t) {
    return W(t).some(function (t) {
      return t.offsetWidth || t.offsetHeight || t.getClientRects().length;
    });
  }
  const St = "input,select,textarea,button";
  function It(t) {
    return W(t).some(function (t) {
      return At(t, St);
    });
  }
  function Et(t) {
    return (t = F(t)) && _(t.parentNode) && t.parentNode;
  }
  function Tt(t, e) {
    return W(t).filter(function (t) {
      return At(t, e);
    });
  }
  var Ct = ct ? Element.prototype : {},
    _t = Ct.matches || Ct.webkitMatchesSelector || Ct.msMatchesSelector || Q;
  function At(t, e) {
    return W(t).some(function (t) {
      return _t.call(t, e);
    });
  }
  const Mt =
    Ct.closest ||
    function (t) {
      let e = this;
      do {
        if (At(e, t)) return e;
      } while ((e = Et(e)));
    };
  function zt(t, e) {
    return (
      g(e, ">") && (e = e.slice(1)),
      _(t)
        ? Mt.call(t, e)
        : W(t)
            .map(function (t) {
              return zt(t, e);
            })
            .filter(Boolean)
    );
  }
  function Bt(t, e) {
    return z(e)
      ? At(t, e) || !!zt(t, e)
      : t === e || (T(e) ? e.documentElement : F(e)).contains(F(t));
  }
  function Nt(t, e) {
    for (var n = []; (t = Et(t)); ) (e && !At(t, e)) || n.push(t);
    return n;
  }
  function Ot(t, e) {
    t = (t = F(t)) ? W(t.children) : [];
    return e ? Tt(t, e) : t;
  }
  function Dt(t, e) {
    return e ? W(t).indexOf(F(e)) : Ot(Et(t)).indexOf(t);
  }
  function Pt(t, e) {
    return F(t) || jt(t, Lt(t, e));
  }
  function Ht(t, e) {
    const n = W(t);
    return (n.length && n) || Ft(t, Lt(t, e));
  }
  function Lt(t, e) {
    return (
      void 0 === e && (e = document),
      (z(t) && qt(t)) || T(e) ? e : e.ownerDocument
    );
  }
  function jt(t, e) {
    return F(Wt(t, e, "querySelector"));
  }
  function Ft(t, e) {
    return W(Wt(t, e, "querySelectorAll"));
  }
  function Wt(t, o, e) {
    if ((void 0 === o && (o = document), !t || !z(t))) return null;
    (t = t.replace(Rt, "$1 *")),
      qt(t) &&
        ((t = Yt(t)
          .map(function (t, e) {
            let n,
              i,
              r = o;
            return (
              "!" === t[0] &&
                ((i = t.substr(1).trim().split(" ")),
                (r = zt(Et(o), i[0])),
                (t = i.slice(1).join(" ").trim())),
              "-" === t[0] &&
                ((n = t.substr(1).trim().split(" ")),
                (r = At((i = (r || o).previousElementSibling), t.substr(1))
                  ? i
                  : null),
                (t = n.slice(1).join(" "))),
              r
                ? (function (t) {
                    const e = [];
                    for (; t.parentNode; ) {
                      if (t.id) {
                        e.unshift("#" + Xt(t.id));
                        break;
                      }
                      let n = t.tagName;
                      "HTML" !== n && (n += ":nth-child(" + (Dt(t) + 1) + ")"),
                        e.unshift(n),
                        (t = t.parentNode);
                    }
                    return e.join(" > ");
                  })(r) +
                  " " +
                  t
                : null
            );
          })
          .filter(Boolean)
          .join(",")),
        (o = document));
    try {
      return o[e](t);
    } catch (t) {
      return null;
    }
  }
  var Vt = /(^|[^\\],)\s*[!>+~-]/,
    Rt = /([!>+~-])(?=\s+[!>+~-]|\s*$)/g,
    qt = rt(function (t) {
      return t.match(Vt);
    }),
    Ut = /.*?[^\\](?:,|$)/g,
    Yt = rt(function (t) {
      return t.match(Ut).map(function (t) {
        return t.replace(/,$/, "").trim();
      });
    });
  const Gt =
    (ct && window.CSS && CSS.escape) ||
    function (t) {
      return t.replace(/([^\x7f-\uFFFF\w-])/g, function (t) {
        return "\\" + t;
      });
    };
  function Xt(t) {
    return z(t) ? Gt.call(null, t) : "";
  }
  function Kt() {
    for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e];
    var n,
      i,
      r = ee(t),
      o = r[0],
      s = r[1],
      a = r[2],
      u = r[3],
      c = r[4],
      o = oe(o);
    return (
      1 < u.length &&
        ((n = u),
        (u = function (t) {
          return y(t.detail) ? n.apply(void 0, [t].concat(t.detail)) : n(t);
        })),
      c &&
        c.self &&
        ((i = u),
        (u = function (t) {
          if (t.target === t.currentTarget || t.target === t.current)
            return i.call(null, t);
        })),
      a &&
        (u = (function (n, i) {
          const r = this;
          return function (e) {
            const t =
              ">" === n[0]
                ? Ft(n, e.currentTarget)
                    .reverse()
                    .filter(function (t) {
                      return Bt(e.target, t);
                    })[0]
                : zt(e.target, n);
            t && ((e.current = t), i.call(r, e));
          };
        })(a, u)),
      (c = ne(c)),
      s.split(" ").forEach(function (e) {
        return o.forEach(function (t) {
          return t.addEventListener(e, u, c);
        });
      }),
      function () {
        return Jt(o, s, u, c);
      }
    );
  }
  function Jt(t, e, n, i) {
    (i = ne((i = void 0 === i ? !1 : i))),
      (t = oe(t)),
      e.split(" ").forEach(function (e) {
        return t.forEach(function (t) {
          return t.removeEventListener(e, n, i);
        });
      });
  }
  function Zt() {
    for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e];
    var n = ee(t),
      i = n[0],
      r = n[1],
      o = n[2],
      s = n[3],
      a = n[4],
      u = n[5],
      c = Kt(
        i,
        r,
        o,
        function (t) {
          const e = !u || u(t);
          e && (c(), s(t, e));
        },
        a
      );
    return c;
  }
  function Qt(t, n, i) {
    return oe(t).reduce(function (t, e) {
      return t && e.dispatchEvent(te(n, !0, !0, i));
    }, !0);
  }
  function te(t, e, n, i) {
    let r;
    return (
      void 0 === e && (e = !0),
      void 0 === n && (n = !1),
      z(t) &&
        ((r = document.createEvent("CustomEvent")).initCustomEvent(t, e, n, i),
        (t = r)),
      t
    );
  }
  function ee(t) {
    return k(t[2]) && t.splice(2, 0, !1), t;
  }
  function ne(t) {
    return t && ht && !M(t) ? !!t.capture : t;
  }
  function ie(t) {
    return t && "addEventListener" in t;
  }
  function re(t) {
    return ie(t) ? t : F(t);
  }
  function oe(t) {
    return y(t) ? t.map(re).filter(Boolean) : z(t) ? Ft(t) : ie(t) ? [t] : W(t);
  }
  function se(t) {
    return "touch" === t.pointerType || !!t.touches;
  }
  function ae(t) {
    var e = t.touches,
      n = t.changedTouches,
      t = (e && e[0]) || (n && n[0]) || t;
    return { x: t.clientX, y: t.clientY };
  }
  function ue() {
    const n = this;
    this.promise = new ce(function (t, e) {
      (n.reject = e), (n.resolve = t);
    });
  }
  var ce = (ct && window.Promise) || de,
    he = 2,
    le = (ct && window.setImmediate) || setTimeout;
  function de(t) {
    (this.state = he), (this.value = void 0), (this.deferred = []);
    const e = this;
    try {
      t(
        function (t) {
          e.resolve(t);
        },
        function (t) {
          e.reject(t);
        }
      );
    } catch (t) {
      e.reject(t);
    }
  }
  (de.reject = function (n) {
    return new de(function (t, e) {
      e(n);
    });
  }),
    (de.resolve = function (n) {
      return new de(function (t, e) {
        t(n);
      });
    }),
    (de.all = function (o) {
      return new de(function (n, t) {
        let i = [],
          r = 0;
        0 === o.length && n(i);
        for (let e = 0; e < o.length; e += 1)
          de.resolve(o[e]).then(
            (function (e) {
              return function (t) {
                (i[e] = t), (r += 1) === o.length && n(i);
              };
            })(e),
            t
          );
      });
    }),
    (de.race = function (i) {
      return new de(function (t, e) {
        for (let n = 0; n < i.length; n += 1) de.resolve(i[n]).then(t, e);
      });
    });
  var fe = de.prototype;
  function pe(t, e) {
    const n = Y(
      {
        data: null,
        method: "GET",
        headers: {},
        xhr: new XMLHttpRequest(),
        beforeSend: Q,
        responseType: "",
      },
      e
    );
    return ce
      .resolve()
      .then(function () {
        return n.beforeSend(n);
      })
      .then(function () {
        return (
          (o = t),
          (s = n),
          new ce(function (t, e) {
            let n,
              i,
              r = s.xhr;
            for (n in s)
              if (n in r)
                try {
                  r[n] = s[n];
                } catch (t) {}
            for (i in (r.open(s.method.toUpperCase(), o), s.headers))
              r.setRequestHeader(i, s.headers[i]);
            Kt(r, "load", function () {
              0 === r.status ||
              (200 <= r.status && r.status < 300) ||
              304 === r.status
                ? ("json" === s.responseType &&
                    z(r.response) &&
                    (r = Y(
                      (function (t) {
                        let e,
                          n = {};
                        for (e in t) n[e] = t[e];
                        return n;
                      })(r),
                      { response: JSON.parse(r.response) }
                    )),
                  t(r))
                : e(Y(Error(r.statusText), { xhr: r, status: r.status }));
            }),
              Kt(r, "error", function () {
                return e(Y(Error("Network Error"), { xhr: r }));
              }),
              Kt(r, "timeout", function () {
                return e(Y(Error("Network Timeout"), { xhr: r }));
              }),
              r.send(s.data);
          })
        );
        let o, s;
      });
  }
  function me(i, r, o) {
    return new ce(function (t, e) {
      const n = new Image();
      (n.onerror = function (t) {
        return e(t);
      }),
        (n.onload = function () {
          return t(n);
        }),
        o && (n.sizes = o),
        r && (n.srcset = r),
        (n.src = i);
    });
  }
  function ge(t) {
    return ((t = _e(t)).innerHTML = ""), t;
  }
  function ve(t, e) {
    return (
      (t = _e(t)), D(e) ? t.innerHTML : we(t.hasChildNodes() ? ge(t) : t, e)
    );
  }
  function we(e, t) {
    return (
      (e = _e(e)),
      ye(t, function (t) {
        return e.appendChild(t);
      })
    );
  }
  function be(e, t) {
    return (
      (e = _e(e)),
      ye(t, function (t) {
        return e.parentNode.insertBefore(t, e);
      })
    );
  }
  function xe(e, t) {
    return (
      (e = _e(e)),
      ye(t, function (t) {
        return e.nextSibling ? be(e.nextSibling, t) : we(e.parentNode, t);
      })
    );
  }
  function ye(t, e) {
    return (t = z(t) ? Te(t) : t) ? ("length" in t ? W(t).map(e) : e(t)) : null;
  }
  function ke(t) {
    W(t).forEach(function (t) {
      return t.parentNode && t.parentNode.removeChild(t);
    });
  }
  function $e(t, e) {
    for (e = F(be(t, e)); e.firstChild; ) e = e.firstChild;
    return we(e, t), e;
  }
  function Se(t) {
    W(t)
      .map(Et)
      .filter(function (t, e, n) {
        return n.indexOf(t) === e;
      })
      .forEach(function (t) {
        be(t, t.childNodes), ke(t);
      });
  }
  (fe.resolve = function (t) {
    const e = this;
    if (e.state === he) {
      if (t === e) throw new TypeError("Promise settled with itself.");
      let n = !1;
      try {
        const i = t && t.then;
        if (null !== t && $(t) && k(i))
          return void i.call(
            t,
            function (t) {
              n || e.resolve(t), (n = !0);
            },
            function (t) {
              n || e.reject(t), (n = !0);
            }
          );
      } catch (t) {
        return void (n || e.reject(t));
      }
      (e.state = 0), (e.value = t), e.notify();
    }
  }),
    (fe.reject = function (t) {
      const e = this;
      if (e.state === he) {
        if (t === e) throw new TypeError("Promise settled with itself.");
        (e.state = 1), (e.value = t), e.notify();
      }
    }),
    (fe.notify = function () {
      const o = this;
      le(function () {
        if (o.state !== he)
          for (; o.deferred.length; ) {
            const t = o.deferred.shift(),
              e = t[0],
              n = t[1],
              i = t[2],
              r = t[3];
            try {
              0 === o.state
                ? k(e)
                  ? i(e.call(void 0, o.value))
                  : i(o.value)
                : 1 === o.state &&
                  (k(n) ? i(n.call(void 0, o.value)) : r(o.value));
            } catch (t) {
              r(t);
            }
          }
      });
    }),
    (fe.then = function (n, i) {
      const r = this;
      return new de(function (t, e) {
        r.deferred.push([n, i, t, e]), r.notify();
      });
    }),
    (fe.catch = function (t) {
      return this.then(void 0, t);
    });
  const Ie = /^\s*<(\w+|!)[^>]*>/,
    Ee = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
  function Te(t) {
    let e = Ee.exec(t);
    if (e) return document.createElement(e[1]);
    e = document.createElement("div");
    return (
      Ie.test(t)
        ? e.insertAdjacentHTML("beforeend", t.trim())
        : (e.textContent = t),
      1 < e.childNodes.length ? W(e.childNodes) : e.firstChild
    );
  }
  function Ce(t, e) {
    if (_(t))
      for (e(t), t = t.firstElementChild; t; ) {
        const n = t.nextElementSibling;
        Ce(t, e), (t = n);
      }
  }
  function _e(t, e) {
    return z(t) ? (Me(t) ? F(Te(t)) : jt(t, e)) : F(t);
  }
  function Ae(t, e) {
    return z(t) ? (Me(t) ? W(Te(t)) : Ft(t, e)) : W(t);
  }
  function Me(t) {
    return "<" === t[0] || t.match(/^\s*</);
  }
  function ze(t) {
    for (var e = [], n = arguments.length - 1; 0 < n--; )
      e[n] = arguments[n + 1];
    He(t, e, "add");
  }
  function Be(t) {
    for (var e = [], n = arguments.length - 1; 0 < n--; )
      e[n] = arguments[n + 1];
    He(t, e, "remove");
  }
  function Ne(t, e) {
    ot(t, "class", function (t) {
      return (t || "").replace(new RegExp("\\b" + e + "\\b", "g"), "");
    });
  }
  function Oe(t) {
    for (var e = [], n = arguments.length - 1; 0 < n--; )
      e[n] = arguments[n + 1];
    e[0] && Be(t, e[0]), e[1] && ze(t, e[1]);
  }
  function De(t, e) {
    e = Le(e)[0];
    for (let n = W(t), i = 0; i < n.length; i++)
      if (e && n[i].classList.contains(e)) return !0;
    return !1;
  }
  function Pe(t, e, n) {
    e = Le(e);
    for (let i = W(t), r = 0; r < i.length; r++)
      for (let o = i[r].classList, s = 0; s < e.length; s++)
        D(n)
          ? o.toggle(e[s])
          : je.Force
          ? o.toggle(e[s], !!n)
          : o[n ? "add" : "remove"](e[s]);
  }
  function He(t, n, i) {
    let r;
    n = n.reduce(function (t, e) {
      return t.concat(Le(e));
    }, []);
    for (var o = W(t), e = 0; e < o.length; e++)
      !(function (e) {
        je.Multiple
          ? (r = o[e].classList)[i].apply(r, n)
          : n.forEach(function (t) {
              return o[e].classList[i](t);
            });
      })(e);
  }
  function Le(t) {
    return (~(t = String(t)).indexOf(" ") ? t.split(" ") : [t]).filter(Boolean);
  }
  var je = {
      get Multiple() {
        return this.get("Multiple");
      },
      get Force() {
        return this.get("Force");
      },
      get(t) {
        const e = document.createElement("_").classList;
        return (
          e.add("a", "b"),
          e.toggle("c", !1),
          (je = { Multiple: e.contains("b"), Force: !e.contains("c") })[t]
        );
      },
    },
    Fe = {
      "animation-iteration-count": !0,
      "column-count": !0,
      "fill-opacity": !0,
      "flex-grow": !0,
      "flex-shrink": !0,
      "font-weight": !0,
      "line-height": !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      "stroke-dasharray": !0,
      "stroke-dashoffset": !0,
      widows: !0,
      "z-index": !0,
      zoom: !0,
    };
  function We(t, e, r, o) {
    return (
      void 0 === o && (o = ""),
      W(t).map(function (n) {
        if (z(e)) {
          if (((e = Ye(e)), D(r))) return Re(n, e);
          r || B(r)
            ? n.style.setProperty(e, N(r) && !Fe[e] ? r + "px" : r, o)
            : n.style.removeProperty(e);
        } else {
          if (y(e)) {
            const i = Ve(n);
            return e.reduce(function (t, e) {
              return (t[e] = i[Ye(e)]), t;
            }, {});
          }
          $(e) &&
            ((o = r),
            X(e, function (t, e) {
              return We(n, e, t, o);
            }));
        }
        return n;
      })[0]
    );
  }
  function Ve(t, e) {
    return V(t).getComputedStyle(t, e);
  }
  function Re(t, e, n) {
    return Ve(t, n)[e];
  }
  const qe = rt(function (t) {
    const e = we(document.documentElement, document.createElement("div"));
    return (
      ze(e, "mod-" + t),
      (t = Re(e, "content", ":before").replace(/^["'](.*)["']$/, "$1")),
      ke(e),
      t
    );
  });
  function Ue(t) {
    return ht
      ? qe(t)
      : Ve(document.documentElement).getPropertyValue("--mod-" + t);
  }
  var Ye = rt(function (t) {
      t = d(t);
      const e = document.documentElement.style;
      if (t in e) return t;
      let n,
        i = Ge.length;
      for (; i--; ) if ((n = "-" + Ge[i] + "-" + t) in e) return n;
    }),
    Ge = ["webkit", "moz", "ms"];
  function Xe(t, s, a, u) {
    return (
      void 0 === a && (a = 400),
      void 0 === u && (u = "linear"),
      ce.all(
        W(t).map(function (o) {
          return new ce(function (e, n) {
            for (const t in s) {
              const i = We(o, t);
              "" === i && We(o, t, i);
            }
            const r = setTimeout(function () {
              return Qt(o, "transitionend");
            }, a);
            Zt(
              o,
              "transitionend transitioncanceled",
              function (t) {
                t = t.type;
                clearTimeout(r),
                  Be(o, "mod-transition"),
                  We(o, {
                    transitionProperty: "",
                    transitionDuration: "",
                    transitionTimingFunction: "",
                  }),
                  "transitioncanceled" === t ? n() : e(o);
              },
              { self: !0 }
            ),
              ze(o, "mod-transition"),
              We(
                o,
                Y(
                  {
                    transitionProperty: Object.keys(s).map(Ye).join(","),
                    transitionDuration: a + "ms",
                    transitionTimingFunction: u,
                  },
                  s
                )
              );
          });
        })
      )
    );
  }
  const Ke = {
      start: Xe,
      stop(t) {
        return Qt(t, "transitionend"), ce.resolve();
      },
      cancel(t) {
        Qt(t, "transitioncanceled");
      },
      inProgress(t) {
        return De(t, "mod-transition");
      },
    },
    Je = "mod-animation-";
  function Ze(t, o, s, a, u) {
    return (
      void 0 === s && (s = 200),
      ce.all(
        W(t).map(function (r) {
          return new ce(function (e, n) {
            Qt(r, "animationcanceled");
            const i = setTimeout(function () {
              return Qt(r, "animationend");
            }, s);
            Zt(
              r,
              "animationend animationcanceled",
              function (t) {
                t = t.type;
                clearTimeout(i),
                  "animationcanceled" === t ? n() : e(r),
                  We(r, "animationDuration", ""),
                  Ne(r, Je + "\\S*");
              },
              { self: !0 }
            ),
              We(r, "animationDuration", s + "ms"),
              ze(r, o, Je + (u ? "leave" : "enter")),
              g(o, Je) &&
                (a && ze(r, "mod-transform-origin-" + a),
                u && ze(r, Je + "reverse"));
          });
        })
      )
    );
  }
  const Qe = new RegExp(Je + "(enter|leave)"),
    tn = {
      in: Ze,
      out(t, e, n, i) {
        return Ze(t, e, n, i, !0);
      },
      inProgress(t) {
        return Qe.test(ot(t, "class"));
      },
      cancel(t) {
        Qt(t, "animationcanceled");
      },
    },
    en = { width: ["left", "right"], height: ["top", "bottom"] };
  function nn(t) {
    t = _(t)
      ? F(t).getBoundingClientRect()
      : { height: an(t), width: un(t), top: 0, left: 0 };
    return {
      height: t.height,
      width: t.width,
      top: t.top,
      left: t.left,
      bottom: t.top + t.height,
      right: t.left + t.width,
    };
  }
  function rn(n, i) {
    let t,
      r = nn(n),
      e = V(n),
      o = { height: e.pageYOffset, width: e.pageXOffset };
    for (t in en) for (const s in en[t]) r[en[t][s]] += o[t];
    if (!i) return r;
    const a = We(n, "position");
    X(We(n, ["left", "top"]), function (t, e) {
      return We(
        n,
        e,
        i[e] - r[e] + L("absolute" === a && "auto" === t ? on(n)[e] : t)
      );
    });
  }
  function on(t) {
    for (
      var e = rn(t),
        n = e.top,
        i = e.left,
        r = F(t),
        e = r.ownerDocument,
        o = e.body,
        s = e.documentElement,
        a = r.offsetParent || s;
      a && (a === o || a === s) && "static" === We(a, "position");

    )
      a = a.parentNode;
    return (
      _(a) &&
        ((n -= (r = rn(a)).top + L(We(a, "borderTopWidth"))),
        (i -= r.left + L(We(a, "borderLeftWidth")))),
      { top: n - L(We(t, "marginTop")), left: i - L(We(t, "marginLeft")) }
    );
  }
  function sn(t) {
    const e = [0, 0];
    t = F(t);
    do {
      if (
        ((e[0] += t.offsetTop),
        (e[1] += t.offsetLeft),
        "fixed" === We(t, "position"))
      ) {
        const n = V(t);
        return (e[0] += n.pageYOffset), (e[1] += n.pageXOffset), e;
      }
    } while ((t = t.offsetParent));
    return e;
  }
  var an = cn("height"),
    un = cn("width");
  function cn(i) {
    const r = p(i);
    return function (t, e) {
      if (D(e)) {
        if (E(t)) return t["inner" + r];
        if (T(t)) {
          const n = t.documentElement;
          return Math.max(n["offset" + r], n["scroll" + r]);
        }
        return (
          (e =
            "auto" === (e = We((t = F(t)), i)) ? t["offset" + r] : L(e) || 0) -
          hn(t, i)
        );
      }
      return We(t, i, e || 0 === e ? +e + hn(t, i) + "px" : "");
    };
  }
  function hn(n, t, e) {
    return (
      void 0 === e && (e = "border-box"),
      We(n, "boxSizing") === e
        ? en[t].map(p).reduce(function (t, e) {
            return (
              t + L(We(n, "padding" + e)) + L(We(n, "border" + e + "Width"))
            );
          }, 0)
        : 0
    );
  }
  function ln(t) {
    for (const e in en)
      for (const n in en[e]) if (en[e][n] === t) return en[e][1 - n];
    return t;
  }
  function dn(t, e, n) {
    return (
      void 0 === e && (e = "width"),
      void 0 === n && (n = window),
      N(t)
        ? +t
        : u(t, "vh")
        ? fn(an(V(n)), t)
        : u(t, "vw")
        ? fn(un(V(n)), t)
        : u(t, "%")
        ? fn(nn(n)[e], t)
        : L(t)
    );
  }
  function fn(t, e) {
    return (t * L(e)) / 100;
  }
  const pn = {
    reads: [],
    writes: [],
    read(t) {
      return this.reads.push(t), vn(), t;
    },
    write(t) {
      return this.writes.push(t), vn(), t;
    },
    clear(t) {
      bn(this.reads, t), bn(this.writes, t);
    },
    flush: mn,
  };
  function mn(t) {
    void 0 === t && (t = 1),
      wn(pn.reads),
      wn(pn.writes.splice(0)),
      (pn.scheduled = !1),
      (pn.reads.length || pn.writes.length) && vn(t + 1);
  }
  const gn = 4;
  function vn(t) {
    pn.scheduled ||
      ((pn.scheduled = !0),
      t && t < gn
        ? ce.resolve().then(function () {
            return mn(t);
          })
        : requestAnimationFrame(function () {
            return mn();
          }));
  }
  function wn(t) {
    for (var e; (e = t.shift()); )
      try {
        e();
      } catch (t) {
        console.error(t);
      }
  }
  function bn(t, e) {
    e = t.indexOf(e);
    return ~e && t.splice(e, 1);
  }
  function xn() {}
  xn.prototype = {
    positions: [],
    init() {
      let e,
        t = this;
      (this.positions = []),
        (this.unbind = Kt(document, "mousemove", function (t) {
          return (e = ae(t));
        })),
        (this.interval = setInterval(function () {
          e &&
            (t.positions.push(e),
            5 < t.positions.length && t.positions.shift());
        }, 50));
    },
    cancel() {
      this.unbind && this.unbind(),
        this.interval && clearInterval(this.interval);
    },
    movesTo(t) {
      if (this.positions.length < 2) return !1;
      var e = t.getBoundingClientRect(),
        n = e.left,
        i = e.right,
        r = e.top,
        o = e.bottom,
        s = this.positions[0],
        t = G(this.positions),
        a = [s, t];
      return (
        !et(t, e) &&
        [
          [
            { x: n, y: r },
            { x: i, y: o },
          ],
          [
            { x: n, y: o },
            { x: i, y: r },
          ],
        ].some(function (t) {
          t = (function (t, e) {
            var n = t[0],
              i = n.x,
              r = n.y,
              o = t[1],
              s = o.x,
              a = o.y,
              u = e[0],
              n = u.x,
              t = u.y,
              o = e[1],
              u = o.x,
              e = o.y,
              o = (e - t) * (s - i) - (u - n) * (a - r);
            if (0 == o) return !1;
            o = ((u - n) * (r - t) - (e - t) * (i - n)) / o;
            if (o < 0) return !1;
            return { x: i + o * (s - i), y: r + o * (a - r) };
          })(a, t);
          return t && et(t, e);
        })
      );
    },
  };
  const yn = {};
  function kn(t, e, n) {
    return yn.computed(k(t) ? t.call(n, n) : t, k(e) ? e.call(n, n) : e);
  }
  function $n(t, e) {
    return (
      (t = t && !y(t) ? [t] : t), e ? (t ? t.concat(e) : y(e) ? e : [e]) : t
    );
  }
  function Sn(e, n, i) {
    let t,
      r,
      o = {};
    if (
      ((n = k(n) ? n.options : n).extends && (e = Sn(e, n.extends, i)),
      n.mixins)
    )
      for (let s = 0, a = n.mixins.length; s < a; s++)
        e = Sn(e, n.mixins[s], i);
    for (t in e) u(t);
    for (r in n) c(e, r) || u(r);
    function u(t) {
      o[t] = (
        yn[t] ||
        function (t, e) {
          return D(e) ? t : e;
        }
      )(e[t], n[t], i);
    }
    return o;
  }
  function In(t, e) {
    let n;
    void 0 === e && (e = []);
    try {
      return t
        ? g(t, "{")
          ? JSON.parse(t)
          : e.length && !w(t, ":")
          ? (((n = {})[e[0]] = t), n)
          : t.split(";").reduce(function (t, e) {
              var n = e.split(/:(.*)/),
                e = n[0],
                n = n[1];
              return e && !D(n) && (t[e.trim()] = n.trim()), t;
            }, {})
        : {};
    } catch (t) {
      return {};
    }
  }
  function En(t) {
    if ((An(t) && Bn(t, { func: "playVideo", method: "play" }), _n(t)))
      try {
        t.play().catch(Q);
      } catch (t) {}
  }
  function Tn(t) {
    An(t) && Bn(t, { func: "pauseVideo", method: "pause" }), _n(t) && t.pause();
  }
  function Cn(t) {
    An(t) && Bn(t, { func: "mute", method: "setVolume", value: 0 }),
      _n(t) && (t.muted = !0);
  }
  function _n(t) {
    return t && "VIDEO" === t.tagName;
  }
  function An(t) {
    return t && "IFRAME" === t.tagName && (Mn(t) || zn(t));
  }
  function Mn(t) {
    return !!t.src.match(
      /\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/
    );
  }
  function zn(t) {
    return !!t.src.match(/vimeo\.com\/video\/.*/);
  }
  function Bn(t, e) {
    (function (e) {
      if (e[On]) return e[On];
      let n,
        i = Mn(e),
        r = zn(e),
        o = ++Dn;
      return (e[On] = new ce(function (t) {
        i &&
          Zt(e, "load", function () {
            function t() {
              return Nn(e, { event: "listening", id: o });
            }
            (n = setInterval(t, 100)), t();
          }),
          Zt(window, "message", t, !1, function (t) {
            let e = t.data;
            try {
              return (
                (e = JSON.parse(e)) &&
                ((i && e.id === o && "onReady" === e.event) ||
                  (r && Number(e.player_id) === o))
              );
            } catch (t) {}
          }),
          (e.src =
            e.src +
            (w(e.src, "?") ? "&" : "?") +
            (i ? "enablejsapi=1" : "api=1&player_id=" + o));
      }).then(function () {
        return clearInterval(n);
      }));
    })(t).then(function () {
      return Nn(t, e);
    });
  }
  function Nn(t, e) {
    try {
      t.contentWindow.postMessage(
        JSON.stringify(Y({ event: "command" }, e)),
        "*"
      );
    } catch (t) {}
  }
  (yn.events = yn.created = yn.beforeConnect = yn.connected = yn.beforeDisconnect = yn.disconnected = yn.destroy = $n),
    (yn.args = function (t, e) {
      return !1 !== e && $n(e || t);
    }),
    (yn.update = function (t, e) {
      return K($n(t, k(e) ? { read: e } : e), "order");
    }),
    (yn.props = function (t, e) {
      return (
        y(e) &&
          (e = e.reduce(function (t, e) {
            return (t[e] = String), t;
          }, {})),
        yn.methods(t, e)
      );
    }),
    (yn.computed = yn.methods = function (t, e) {
      return e ? (t ? Y({}, t, e) : e) : t;
    }),
    (yn.data = function (e, n, t) {
      return t
        ? kn(e, n, t)
        : n
        ? e
          ? function (t) {
              return kn(e, n, t);
            }
          : n
        : e;
    });
  var On = "_ukPlayer",
    Dn = 0;
  function Pn(t, r, o) {
    return (
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      !!$t(t) &&
        tt.apply(
          void 0,
          Fn(t)
            .map(function (t) {
              var e = rn(Wn(t)),
                n = e.top,
                i = e.left,
                t = e.bottom,
                e = e.right;
              return { top: n - r, left: i - o, bottom: t + r, right: e + o };
            })
            .concat(rn(t))
        )
    );
  }
  function Hn(t, e) {
    (t = (E(t) || T(t) ? Rn : F)(t)).scrollTop = e;
  }
  function Ln(s, t) {
    let a = (t = void 0 === t ? {} : t).offset;
    if ((void 0 === a && (a = 0), $t(s))) {
      let u = Fn(s),
        c = 0;
      return u.reduce(
        function (t, e, n) {
          let i = e.scrollTop,
            r = e.scrollHeight - Vn(e),
            o = Math.ceil(rn(u[n - 1] || s).top - rn(Wn(e)).top - a + c + i);
          return (
            r < o ? ((c = o - r), (o = r)) : (c = 0),
            function () {
              return (
                (s = e),
                (a = o - i),
                new ce(function (n) {
                  let t,
                    i = s.scrollTop,
                    r = ((t = Math.abs(a)), 40 * Math.pow(t, 0.375)),
                    o = Date.now();
                  !(function t() {
                    var e,
                      e =
                        ((e = Z((Date.now() - o) / r)),
                        0.5 * (1 - Math.cos(Math.PI * e)));
                    Hn(s, i + a * e), 1 != e ? requestAnimationFrame(t) : n();
                  })();
                }).then(t)
              );
              let s, a;
            }
          );
        },
        function () {
          return ce.resolve();
        }
      )();
    }
  }
  function jn(t, e) {
    if ((void 0 === e && (e = 0), !$t(t))) return 0;
    var n = Fn(t, /auto|scroll/, !0)[0],
      i = n.scrollHeight,
      r = n.scrollTop,
      o = Vn(n),
      s = sn(t)[0] - r - sn(n)[0],
      n = Math.min(o, s + r);
    return Z(
      (-1 * (s - n)) / Math.min(t.offsetHeight + e + n, i - (s + r), i - o)
    );
  }
  function Fn(t, e, n) {
    void 0 === e && (e = /auto|scroll|hidden/), void 0 === n && (n = !1);
    var i = Rn(t),
      r = Nt(t).reverse(),
      t = x((r = r.slice(r.indexOf(i) + 1)), function (t) {
        return "fixed" === We(t, "position");
      });
    return (
      ~t && (r = r.slice(t)),
      [i]
        .concat(
          r.filter(function (t) {
            return e.test(We(t, "overflow")) && (!n || t.scrollHeight > Vn(t));
          })
        )
        .reverse()
    );
  }
  function Wn(t) {
    return t === Rn(t) ? window : t;
  }
  function Vn(t) {
    return (t === Rn(t) ? document.documentElement : t).clientHeight;
  }
  function Rn(t) {
    t = V(t).document;
    return t.scrollingElement || t.documentElement;
  }
  const qn = { width: ["x", "left", "right"], height: ["y", "top", "bottom"] };
  function Un(t, e, h, l, d, n, i, r) {
    (h = Gn(h)), (l = Gn(l));
    const f = { element: h, target: l };
    if (!t || !e) return f;
    let o,
      p = rn(t),
      m = rn(e),
      g = m;
    return (
      Yn(g, h, p, -1),
      Yn(g, l, m, 1),
      (d = Xn(d, p.width, p.height)),
      (n = Xn(n, m.width, m.height)),
      (d.x += n.x),
      (d.y += n.y),
      (g.left += d.x),
      (g.top += d.y),
      i &&
        ((o = Fn(t).map(Wn)),
        r && w(o, r) && o.unshift(r),
        (o = o.map(function (t) {
          return rn(t);
        })),
        X(qn, function (t, s) {
          const a = t[0],
            u = t[1],
            c = t[2];
          (!0 !== i && !w(i, a)) ||
            o.some(function (n) {
              const t = h[a] === u ? -p[s] : h[a] === c ? p[s] : 0,
                e = l[a] === u ? m[s] : l[a] === c ? -m[s] : 0;
              if (g[u] < n[u] || g[u] + p[s] > n[c]) {
                const i = p[s] / 2,
                  r = "center" === l[a] ? -m[s] / 2 : 0;
                return ("center" === h[a] && (o(i, r) || o(-i, -r))) || o(t, e);
              }
              function o(e, t) {
                t = L((g[u] + e + t - 2 * d[a]).toFixed(4));
                if (t >= n[u] && t + p[s] <= n[c])
                  return (
                    (g[u] = t),
                    ["element", "target"].forEach(function (t) {
                      f[t][a] = e
                        ? f[t][a] === qn[s][1]
                          ? qn[s][2]
                          : qn[s][1]
                        : f[t][a];
                    }),
                    !0
                  );
              }
            });
        })),
      rn(t, g),
      f
    );
  }
  function Yn(r, o, s, a) {
    X(qn, function (t, e) {
      var n = t[0],
        i = t[1],
        t = t[2];
      o[n] === t
        ? (r[i] += s[e] * a)
        : "center" === o[n] && (r[i] += (s[e] * a) / 2);
    });
  }
  function Gn(t) {
    const e = /left|center|right/,
      n = /top|center|bottom/;
    return (
      1 === (t = (t || "").split(" ")).length &&
        (t = e.test(t[0])
          ? t.concat("center")
          : n.test(t[0])
          ? ["center"].concat(t)
          : ["center", "center"]),
      { x: e.test(t[0]) ? t[0] : "center", y: n.test(t[1]) ? t[1] : "center" }
    );
  }
  function Xn(t, e, n) {
    var i = (t || "").split(" "),
      t = i[0],
      i = i[1];
    return {
      x: t ? L(t) * (u(t, "%") ? e / 100 : 1) : 0,
      y: i ? L(i) * (u(i, "%") ? n / 100 : 1) : 0,
    };
  }
  var Kn = Object.freeze({
    __proto__: null,
    ajax: pe,
    getImage: me,
    transition: Xe,
    Transition: Ke,
    animate: Ze,
    Animation: tn,
    attr: ot,
    hasAttr: st,
    removeAttr: at,
    data: ut,
    addClass: ze,
    removeClass: Be,
    removeClasses: Ne,
    replaceClass: Oe,
    hasClass: De,
    toggleClass: Pe,
    dimensions: nn,
    offset: rn,
    position: on,
    offsetPosition: sn,
    height: an,
    width: un,
    boxModelAdjust: hn,
    flipPosition: ln,
    toPx: dn,
    ready(t) {
      let e;
      "loading" === document.readyState
        ? (e = Kt(document, "DOMContentLoaded", function () {
            e(), t();
          }))
        : t();
    },
    empty: ge,
    html: ve,
    prepend(e, t) {
      return (e = _e(e)).hasChildNodes()
        ? ye(t, function (t) {
            return e.insertBefore(t, e.firstChild);
          })
        : we(e, t);
    },
    append: we,
    before: be,
    after: xe,
    remove: ke,
    wrapAll: $e,
    wrapInner(t, e) {
      return W(
        W(t).map(function (t) {
          return t.hasChildNodes ? $e(W(t.childNodes), e) : we(t, e);
        })
      );
    },
    unwrap: Se,
    fragment: Te,
    apply: Ce,
    $: _e,
    $$: Ae,
    inBrowser: ct,
    isIE: ht,
    isRtl: lt,
    hasTouch: pt,
    pointerDown: mt,
    pointerMove: gt,
    pointerUp: vt,
    pointerEnter: wt,
    pointerLeave: bt,
    pointerCancel: xt,
    on: Kt,
    off: Jt,
    once: Zt,
    trigger: Qt,
    createEvent: te,
    toEventTargets: oe,
    isTouch: se,
    getEventPos: ae,
    fastdom: pn,
    isVoidElement: kt,
    isVisible: $t,
    selInput: St,
    isInput: It,
    parent: Et,
    filter: Tt,
    matches: At,
    closest: zt,
    within: Bt,
    parents: Nt,
    children: Ot,
    index: Dt,
    hasOwn: c,
    hyphenate: d,
    camelize: f,
    ucfirst: p,
    startsWith: g,
    endsWith: u,
    includes: w,
    findIndex: x,
    isArray: y,
    isFunction: k,
    isObject: $,
    isPlainObject: I,
    isWindow: E,
    isDocument: T,
    isNode: C,
    isElement: _,
    isBoolean: M,
    isString: z,
    isNumber: B,
    isNumeric: N,
    isEmpty: O,
    isUndefined: D,
    toBoolean: P,
    toNumber: H,
    toFloat: L,
    toArray: j,
    toNode: F,
    toNodes: W,
    toWindow: V,
    toMs: R,
    isEqual: q,
    swap: U,
    assign: Y,
    last: G,
    each: X,
    sortBy: K,
    uniqueBy: J,
    clamp: Z,
    noop: Q,
    intersectRect: tt,
    pointInRect: et,
    Dimensions: nt,
    getIndex: it,
    memoize: rt,
    MouseTracker: xn,
    mergeOptions: Sn,
    parseOptions: In,
    play: En,
    pause: Tn,
    mute: Cn,
    positionAt: Un,
    Promise: ce,
    Deferred: ue,
    query: Pt,
    queryAll: Ht,
    find: jt,
    findAll: Ft,
    escape: Xt,
    css: We,
    getCssVar: Ue,
    propName: Ye,
    isInView: Pn,
    scrollTop: Hn,
    scrollIntoView: Ln,
    scrolledOver: jn,
    scrollParents: Fn,
    getViewport: Wn,
    getViewportClientHeight: Vn,
  });
  function Jn(t) {
    this._init(t);
  }
  let Zn,
    Qn,
    ti,
    ei,
    ni,
    ii,
    ri,
    oi,
    si,
    ai = rt(function (t) {
      return (
        !(!g(t, "mod-") && !g(t, "data-mod-")) &&
        f(t.replace("data-mod-", "").replace("mod-", ""))
      );
    });
  function ui(t, e) {
    if (t) for (const n in t) t[n]._connected && t[n]._callUpdate(e);
  }
  function ci(t, e) {
    let n = {},
      i = t.args;
    void 0 === i && (i = []);
    let r = t.props;
    void 0 === r && (r = {});
    let o,
      s = t.el;
    if (!r) return n;
    for (o in r) {
      let a = d(o),
        u = ut(s, a);
      D(u) ||
        ((u = (r[o] === Boolean && "" === u) || li(r[o], u)),
        ("target" !== a || (u && !g(u, "_"))) && (n[o] = u));
    }
    let c,
      h = In(ut(s, e), i);
    for (c in h) {
      const l = f(c);
      void 0 !== r[l] && (n[l] = li(r[l], h[c]));
    }
    return n;
  }
  function hi(e, n, i) {
    var t = (n = !I(n) ? { name: i, handler: n } : n).name,
      r = n.el,
      o = n.handler,
      s = n.capture,
      a = n.passive,
      u = n.delegate,
      c = n.filter,
      h = n.self,
      r = k(r) ? r.call(e) : r || e.$el;
    y(r)
      ? r.forEach(function (t) {
          return hi(e, Y({}, n, { el: t }), i);
        })
      : !r ||
        (c && !c.call(e)) ||
        e._events.push(
          Kt(r, t, u ? (z(u) ? u : u.call(e)) : null, z(o) ? e[o] : o.bind(e), {
            passive: a,
            capture: s,
            self: h,
          })
        );
  }
  function li(t, e) {
    return t === Boolean
      ? P(e)
      : t === Number
      ? H(e)
      : "list" === t
      ? y((n = e))
        ? n
        : z(n)
        ? n.split(/,(?![^(]*\))/).map(function (t) {
            return N(t) ? H(t) : P(t.trim());
          })
        : [n]
      : t
      ? t(e)
      : e;
    let n;
  }
  (Jn.util = Kn),
    (Jn.data = "__uikit__"),
    (Jn.prefix = "mod-"),
    (Jn.options = {}),
    (Jn.version = "3.6.19"),
    (ti = (Zn = Jn).data),
    (Zn.use = function (t) {
      if (!t.installed) return t.call(null, this), (t.installed = !0), this;
    }),
    (Zn.mixin = function (t, e) {
      (e = (z(e) ? Zn.component(e) : e) || this).options = Sn(e.options, t);
    }),
    (Zn.extend = function (t) {
      t = t || {};
      function e(t) {
        this._init(t);
      }
      return (
        (((e.prototype = Object.create(
          this.prototype
        )).constructor = e).options = Sn(this.options, t)),
        (e.super = this),
        (e.extend = this.extend),
        e
      );
    }),
    (Zn.update = function (t, e) {
      Nt((t = t ? F(t) : document.body))
        .reverse()
        .forEach(function (t) {
          return ui(t[ti], e);
        }),
        Ce(t, function (t) {
          return ui(t[ti], e);
        });
    }),
    Object.defineProperty(Zn, "container", {
      get() {
        return Qn || document.body;
      },
      set(t) {
        Qn = _e(t);
      },
    }),
    ((ei = Jn).prototype._callHook = function (t) {
      var e = this,
        t = this.$options[t];
      t &&
        t.forEach(function (t) {
          return t.call(e);
        });
    }),
    (ei.prototype._callConnected = function () {
      this._connected ||
        ((this._data = {}),
        (this._computeds = {}),
        this._initProps(),
        this._callHook("beforeConnect"),
        (this._connected = !0),
        this._initEvents(),
        this._initObservers(),
        this._callHook("connected"),
        this._callUpdate());
    }),
    (ei.prototype._callDisconnected = function () {
      this._connected &&
        (this._callHook("beforeDisconnect"),
        this._disconnectObservers(),
        this._unbindEvents(),
        this._callHook("disconnected"),
        (this._connected = !1),
        delete this._watch);
    }),
    (ei.prototype._callUpdate = function (t) {
      const e = this;
      void 0 === t && (t = "update"),
        this._connected &&
          (("update" !== t && "resize" !== t) || this._callWatches(),
          this.$options.update &&
            (this._updates ||
              ((this._updates = new Set()),
              pn.read(function () {
                (function (i) {
                  for (
                    var r = this, o = this.$options.update, t = 0;
                    t < o.length;
                    t++
                  )
                    !(function (t) {
                      var t = (n = o[t]).read,
                        e = n.write,
                        n = n.events;
                      (i.has("update") ||
                        (n &&
                          n.some(function (t) {
                            return i.has(t);
                          }))) &&
                        ((n = void 0),
                        t &&
                          (n = t.call(r, r._data, i)) &&
                          I(n) &&
                          Y(r._data, n),
                        e &&
                          !1 !== n &&
                          pn.write(function () {
                            return e.call(r, r._data, i);
                          }));
                    })(t);
                }.call(e, e._updates),
                  delete e._updates);
              })),
            this._updates.add(t.type || t)));
    }),
    (ei.prototype._callWatches = function () {
      let a,
        u = this;
      this._watch ||
        ((a = !c(this, "_watch")),
        (this._watch = pn.read(function () {
          let t,
            e = u.$options.computed,
            n = u._computeds;
          for (t in e) {
            const i = c(n, t),
              r = n[t];
            delete n[t];
            var o = e[t],
              s = o.watch,
              o = o.immediate;
            s && ((a && o) || (i && !q(r, u[t]))) && s.call(u, u[t], r);
          }
          u._watch = null;
        })));
    }),
    (ii = 0),
    ((ni = Jn).prototype._init = function (t) {
      ((t = t || {}).data = (function (t, e) {
        let n = t.data,
          i = e.args,
          r = e.props;
        void 0 === r && (r = {});
        if (
          (n = y(n)
            ? O(i)
              ? void 0
              : n.slice(0, i.length).reduce(function (t, e, n) {
                  return I(e) ? Y(t, e) : (t[i[n]] = e), t;
                }, {})
            : n)
        )
          for (const o in n)
            D(n[o]) ? delete n[o] : (n[o] = r[o] ? li(r[o], n[o]) : n[o]);
        return n;
      })(t, this.constructor.options)),
        (this.$options = Sn(this.constructor.options, t, this)),
        (this.$el = null),
        (this.$props = {}),
        (this._uid = ii++),
        this._initData(),
        this._initMethods(),
        this._initComputeds(),
        this._callHook("created"),
        t.el && this.$mount(t.el);
    }),
    (ni.prototype._initData = function () {
      let t,
        e = this.$options.data;
      for (t in (e = void 0 === e ? {} : e)) this.$props[t] = this[t] = e[t];
    }),
    (ni.prototype._initMethods = function () {
      const t = this.$options.methods;
      if (t) for (const e in t) this[e] = t[e].bind(this);
    }),
    (ni.prototype._initComputeds = function () {
      const t = this.$options.computed;
      if (((this._computeds = {}), t))
        for (const e in t)
          !(function (i, r, o) {
            Object.defineProperty(i, r, {
              enumerable: !0,
              get() {
                const t = i._computeds,
                  e = i.$props,
                  n = i.$el;
                return c(t, r) || (t[r] = (o.get || o).call(i, e, n)), t[r];
              },
              set(t) {
                const e = i._computeds;
                (e[r] = o.set ? o.set.call(i, t) : t), D(e[r]) && delete e[r];
              },
            });
          })(this, e, t[e]);
    }),
    (ni.prototype._initProps = function (t) {
      for (var e in (t = t || ci(this.$options, this.$name)))
        D(t[e]) || (this.$props[e] = t[e]);
      const n = [this.$options.computed, this.$options.methods];
      for (e in this.$props)
        e in t &&
          (function (t, e) {
            return t.every(function (t) {
              return !t || !c(t, e);
            });
          })(n, e) &&
          (this[e] = this.$props[e]);
    }),
    (ni.prototype._initEvents = function () {
      const n = this;
      this._events = [];
      const t = this.$options.events;
      t &&
        t.forEach(function (t) {
          if (c(t, "handler")) hi(n, t);
          else for (const e in t) hi(n, t[e], e);
        });
    }),
    (ni.prototype._unbindEvents = function () {
      this._events.forEach(function (t) {
        return t();
      }),
        delete this._events;
    }),
    (ni.prototype._initObservers = function () {
      let t, e, n;
      this._observers = [
        ((e = (t = this).$options.el),
        (n = new MutationObserver(function () {
          return t.$emit();
        })).observe(e, { childList: !0, subtree: !0 }),
        n),
        (function (e) {
          var i = e.$name,
            r = e.$options,
            o = e.$props,
            t = r.attrs,
            n = r.props,
            s = r.el;
          if (!n || !1 === t) return;
          var a = y(t) ? t : Object.keys(n),
            t = a
              .map(function (t) {
                return d(t);
              })
              .concat(i),
            n = new MutationObserver(function (t) {
              const n = ci(r, i);
              t.some(function (t) {
                var e = t.attributeName,
                  t = e.replace("data-", "");
                return (t === i ? a : [f(t), f(e)]).some(function (t) {
                  return !D(n[t]) && n[t] !== o[t];
                });
              }) && e.$reset();
            });
          return (
            n.observe(s, {
              attributes: !0,
              attributeFilter: t.concat(
                t.map(function (t) {
                  return "data-" + t;
                })
              ),
            }),
            n
          );
        })(this),
      ];
    }),
    (ni.prototype._disconnectObservers = function () {
      this._observers.forEach(function (t) {
        return t && t.disconnect();
      });
    }),
    (oi = (ri = Jn).data),
    (si = {}),
    (ri.component = function (s, t) {
      const e = d(s);
      if (((s = f(e)), !t))
        return I(si[s]) && (si[s] = ri.extend(si[s])), si[s];
      ri[s] = function (t, n) {
        for (var e = arguments.length, i = Array(e); e--; ) i[e] = arguments[e];
        const r = ri.component(s);
        return r.options.functional
          ? new r({ data: I(t) ? t : [].concat(i) })
          : t
          ? Ae(t).map(o)[0]
          : o(t);
        function o(t) {
          const e = ri.getComponent(t, s);
          if (e) {
            if (!n) return e;
            e.$destroy();
          }
          return new r({ el: t, data: n });
        }
      };
      const n = I(t) ? Y({}, t) : t.options;
      return (
        (n.name = s),
        n.install && n.install(ri, n, s),
        ri._initialized &&
          !n.functional &&
          pn.read(function () {
            return ri[s]("[mod-" + e + "],[data-mod-" + e + "]");
          }),
        (si[s] = I(t) ? n : t)
      );
    }),
    (ri.getComponents = function (t) {
      return (t && t[oi]) || {};
    }),
    (ri.getComponent = function (t, e) {
      return ri.getComponents(t)[e];
    }),
    (ri.connect = function (t) {
      if (t[oi]) for (const e in t[oi]) t[oi][e]._callConnected();
      for (let n = 0; n < t.attributes.length; n++) {
        const i = ai(t.attributes[n].name);
        i && i in si && ri[i](t);
      }
    }),
    (ri.disconnect = function (t) {
      for (const e in t[oi]) t[oi][e]._callDisconnected();
    }),
    (function (i) {
      const r = i.data;
      (i.prototype.$create = function (t, e, n) {
        return i[t](e, n);
      }),
        (i.prototype.$mount = function (t) {
          const e = this.$options.name;
          t[r] || (t[r] = {}),
            t[r][e] ||
              (((t[r][e] = this).$el = this.$options.el =
                this.$options.el || t),
              Bt(t, document) && this._callConnected());
        }),
        (i.prototype.$reset = function () {
          this._callDisconnected(), this._callConnected();
        }),
        (i.prototype.$destroy = function (t) {
          void 0 === t && (t = !1);
          var e = this.$options,
            n = e.el,
            e = e.name;
          n && this._callDisconnected(),
            this._callHook("destroy"),
            n &&
              n[r] &&
              (delete n[r][e], O(n[r]) || delete n[r], t && ke(this.$el));
        }),
        (i.prototype.$emit = function (t) {
          this._callUpdate(t);
        }),
        (i.prototype.$update = function (t, e) {
          void 0 === t && (t = this.$el), i.update(t, e);
        }),
        (i.prototype.$getComponent = i.getComponent);
      const t = rt(function (t) {
        return i.prefix + d(t);
      });
      Object.defineProperties(i.prototype, {
        $container: Object.getOwnPropertyDescriptor(i, "container"),
        $name: {
          get() {
            return t(this.$options.name);
          },
        },
      });
    })(Jn);
  const di = {
      connected() {
        De(this.$el, this.$name) || ze(this.$el, this.$name);
      },
    },
    fi = {
      props: {
        cls: Boolean,
        animation: "list",
        duration: Number,
        origin: String,
        transition: String,
      },
      data: {
        cls: !1,
        animation: [!1],
        duration: 200,
        origin: !1,
        transition: "linear",
        clsEnter: "mod-togglabe-enter",
        clsLeave: "mod-togglabe-leave",
        initProps: {
          overflow: "",
          height: "",
          paddingTop: "",
          paddingBottom: "",
          marginTop: "",
          marginBottom: "",
        },
        hideProps: {
          overflow: "hidden",
          height: 0,
          paddingTop: 0,
          paddingBottom: 0,
          marginTop: 0,
          marginBottom: 0,
        },
      },
      computed: {
        hasAnimation(t) {
          return !!t.animation[0];
        },
        hasTransition(t) {
          t = t.animation;
          return this.hasAnimation && !0 === t[0];
        },
      },
      methods: {
        toggleElement(e, s, a) {
          const u = this;
          return new ce(function (t) {
            return ce
              .all(
                W(e).map(function (t) {
                  const e = M(s) ? s : !u.isToggled(t);
                  if (!Qt(t, "before" + (e ? "show" : "hide"), [u]))
                    return ce.reject();
                  let o,
                    n = (k(a)
                      ? a
                      : !1 !== a && u.hasAnimation
                      ? u.hasTransition
                        ? pi(u)
                        : ((o = u),
                          function (t, e) {
                            tn.cancel(t);
                            const n = o.animation,
                              i = o.duration,
                              r = o._toggle;
                            return e
                              ? (r(t, !0), tn.in(t, n[0], i, o.origin))
                              : tn
                                  .out(t, n[1] || n[0], i, o.origin)
                                  .then(function () {
                                    return r(t, !1);
                                  });
                          })
                      : u._toggle)(t, e),
                    i = e ? u.clsEnter : u.clsLeave;
                  ze(t, i), Qt(t, e ? "show" : "hide", [u]);
                  function r() {
                    Be(t, i), Qt(t, e ? "shown" : "hidden", [u]), u.$update(t);
                  }
                  return n
                    ? n.then(r, function () {
                        return Be(t, i), ce.reject();
                      })
                    : r();
                })
              )
              .then(t, Q);
          });
        },
        isToggled(t) {
          return (
            !!De((t = void 0 === t ? this.$el : t), this.clsEnter) ||
            (!De(t, this.clsLeave) &&
              (this.cls ? De(t, this.cls.split(" ")[0]) : !st(t, "hidden")))
          );
        },
        _toggle(t, e) {
          let n;
          t &&
            ((e = Boolean(e)),
            this.cls
              ? (n = w(this.cls, " ") || e !== De(t, this.cls)) &&
                Pe(t, this.cls, w(this.cls, " ") ? void 0 : e)
              : (n = e === t.hidden) && (t.hidden = !e),
            Ae("[autofocus]", t).some(function (t) {
              return $t(t) ? t.focus() || !0 : t.blur();
            }),
            n && (Qt(t, "toggled", [e, this]), this.$update(t)));
        },
      },
    };
  function pi(t) {
    const o = t.isToggled,
      s = t.duration,
      a = t.initProps,
      u = t.hideProps,
      c = t.transition,
      h = t._toggle;
    return function (t, e) {
      let n = Ke.inProgress(t),
        i = t.hasChildNodes
          ? L(We(t.firstElementChild, "marginTop")) +
            L(We(t.lastElementChild, "marginBottom"))
          : 0,
        r = $t(t) ? an(t) + (n ? 0 : i) : 0;
      Ke.cancel(t), o(t) || h(t, !0), an(t, ""), pn.flush();
      i = an(t) + (n ? 0 : i);
      return (
        an(t, r),
        (e
          ? Ke.start(
              t,
              Y({}, a, { overflow: "hidden", height: i }),
              Math.round(s * (1 - r / i)),
              c
            )
          : Ke.start(t, u, Math.round(s * (r / i)), c).then(function () {
              return h(t, !1);
            })
        ).then(function () {
          return We(t, a);
        })
      );
    };
  }
  const mi = {
    mixins: [di, fi],
    props: {
      targets: String,
      active: null,
      collapsible: Boolean,
      multiple: Boolean,
      toggle: String,
      content: String,
      transition: String,
      offset: Number,
    },
    data: {
      targets: "> *",
      active: !1,
      animation: [!0],
      collapsible: !0,
      multiple: !1,
      clsOpen: "mod-open",
      toggle: "> .mod-accordion-title",
      content: "> .mod-accordion-content",
      transition: "ease",
      offset: 0,
    },
    computed: {
      items: {
        get(t, e) {
          return Ae(t.targets, e);
        },
        watch(t, e) {
          const n = this;
          t.forEach(function (t) {
            return gi(_e(n.content, t), !De(t, n.clsOpen));
          }),
            e ||
              De(t, this.clsOpen) ||
              ((t =
                (!1 !== this.active && t[Number(this.active)]) ||
                (!this.collapsible && t[0])) &&
                this.toggle(t, !1));
        },
        immediate: !0,
      },
      toggles(t) {
        const e = t.toggle;
        return this.items.map(function (t) {
          return _e(e, t);
        });
      },
    },
    events: [
      {
        name: "click",
        delegate() {
          return this.targets + " " + this.$props.toggle;
        },
        handler(t) {
          t.preventDefault(), this.toggle(Dt(this.toggles, t.current));
        },
      },
    ],
    methods: {
      toggle(t, r) {
        var o = this,
          e = [this.items[it(t, this.items)]],
          t = Tt(this.items, "." + this.clsOpen);
        this.multiple || w(t, e[0]) || (e = e.concat(t)),
          (!this.collapsible &&
            t.length < 2 &&
            !Tt(e, ":not(." + this.clsOpen + ")").length) ||
            e.forEach(function (t) {
              return o.toggleElement(t, !De(t, o.clsOpen), function (e, n) {
                Pe(e, o.clsOpen, n),
                  ot(_e(o.$props.toggle, e), "aria-expanded", n);
                const i = _e((e._wrapper ? "> * " : "") + o.content, e);
                if (!1 !== r && o.hasTransition)
                  return (
                    e._wrapper ||
                      (e._wrapper = $e(i, "<div" + (n ? " hidden" : "") + ">")),
                    gi(i, !1),
                    pi(o)(e._wrapper, n).then(function () {
                      let t;
                      gi(i, !n),
                        delete e._wrapper,
                        Se(i),
                        n &&
                          (Pn((t = _e(o.$props.toggle, e))) ||
                            Ln(t, { offset: o.offset }));
                    })
                  );
                gi(i, !n);
              });
            });
      },
    },
  };
  function gi(t, e) {
    t && (t.hidden = e);
  }
  let vi = {
      mixins: [di, fi],
      args: "animation",
      props: { close: String },
      data: {
        animation: [!0],
        selClose: ".mod-alert-close",
        duration: 150,
        hideProps: Y({ opacity: 0 }, fi.data.hideProps),
      },
      events: [
        {
          name: "click",
          delegate() {
            return this.selClose;
          },
          handler(t) {
            t.preventDefault(), this.close();
          },
        },
      ],
      methods: {
        close() {
          const t = this;
          this.toggleElement(this.$el).then(function () {
            return t.$destroy(!0);
          });
        },
      },
    },
    wi = {
      args: "autoplay",
      props: { automute: Boolean, autoplay: Boolean },
      data: { automute: !1, autoplay: !0 },
      computed: {
        inView(t) {
          return "inview" === t.autoplay;
        },
      },
      connected() {
        this.inView && !st(this.$el, "preload") && (this.$el.preload = "none"),
          this.automute && Cn(this.$el);
      },
      update: {
        read() {
          return {
            visible: $t(this.$el) && "hidden" !== We(this.$el, "visibility"),
            inView: this.inView && Pn(this.$el),
          };
        },
        write(t) {
          var e = t.visible,
            t = t.inView;
          !e || (this.inView && !t)
            ? Tn(this.$el)
            : (!0 === this.autoplay || (this.inView && t)) && En(this.$el);
        },
        events: ["resize", "scroll"],
      },
    },
    bi = {
      mixins: [di, wi],
      props: { width: Number, height: Number },
      data: { automute: !0 },
      update: {
        read() {
          var t = this.$el,
            e =
              (function (t) {
                for (; (t = Et(t)); )
                  if ("static" !== We(t, "position")) return t;
              })(t) || Et(t),
            n = e.offsetHeight,
            e = e.offsetWidth,
            n = nt.cover(
              {
                width:
                  this.width || t.naturalWidth || t.videoWidth || t.clientWidth,
                height:
                  this.height ||
                  t.naturalHeight ||
                  t.videoHeight ||
                  t.clientHeight,
              },
              { width: e + (e % 2 ? 1 : 0), height: n + (n % 2 ? 1 : 0) }
            );
          return !(!n.width || !n.height) && n;
        },
        write(t) {
          var e = t.height,
            t = t.width;
          We(this.$el, { height: e, width: t });
        },
        events: ["resize"],
      },
    };
  let xi,
    yi = {
      props: { pos: String, offset: null, flip: Boolean, clsPos: String },
      data: {
        pos: "bottom-" + (lt ? "right" : "left"),
        flip: !0,
        offset: !1,
        clsPos: "",
      },
      computed: {
        pos(t) {
          t = t.pos;
          return (t + (w(t, "-") ? "" : "-center")).split("-");
        },
        dir() {
          return this.pos[0];
        },
        align() {
          return this.pos[1];
        },
      },
      methods: {
        positionAt(t, e, n) {
          Ne(t, this.clsPos + "-(top|bottom|left|right)(-[a-z]+)?");
          let i,
            r = this.offset,
            o = this.getAxis();
          N(r) ||
            (r = (i = _e(r))
              ? rn(i)["x" === o ? "left" : "top"] -
                rn(e)["x" === o ? "right" : "bottom"]
              : 0);
          (r = Un(
            t,
            e,
            "x" === o
              ? ln(this.dir) + " " + this.align
              : this.align + " " + ln(this.dir),
            "x" === o
              ? this.dir + " " + this.align
              : this.align + " " + this.dir,
            "x" === o
              ? "" + ("left" === this.dir ? -r : r)
              : " " + ("top" === this.dir ? -r : r),
            null,
            this.flip,
            n
          ).target),
            (n = r.x),
            (r = r.y);
          (this.dir = "x" === o ? n : r),
            (this.align = "x" === o ? r : n),
            Pe(
              t,
              this.clsPos + "-" + this.dir + "-" + this.align,
              !1 === this.offset
            );
        },
        getAxis() {
          return "top" === this.dir || "bottom" === this.dir ? "y" : "x";
        },
      },
    },
    ki = {
      mixins: [yi, fi],
      args: "pos",
      props: {
        mode: "list",
        toggle: Boolean,
        boundary: Boolean,
        boundaryAlign: Boolean,
        delayShow: Number,
        delayHide: Number,
        clsDrop: String,
      },
      data: {
        mode: ["click", "hover"],
        toggle: "- *",
        boundary: !0,
        boundaryAlign: !1,
        delayShow: 0,
        delayHide: 800,
        clsDrop: !1,
        animation: ["mod-animation-fade"],
        cls: "mod-open",
      },
      computed: {
        boundary(t, e) {
          t = t.boundary;
          return !0 === t ? window : Pt(t, e);
        },
        clsDrop(t) {
          return t.clsDrop || "mod-" + this.$options.name;
        },
        clsPos() {
          return this.clsDrop;
        },
      },
      created() {
        this.tracker = new xn();
      },
      connected() {
        ze(this.$el, this.clsDrop);
        const t = this.$props.toggle;
        this.toggle =
          t &&
          this.$create("toggle", Pt(t, this.$el), {
            target: this.$el,
            mode: this.mode,
          });
      },
      disconnected() {
        this.isActive() && (xi = null);
      },
      events: [
        {
          name: "click",
          delegate() {
            return "." + this.clsDrop + "-close";
          },
          handler(t) {
            t.preventDefault(), this.hide(!1);
          },
        },
        {
          name: "click",
          delegate() {
            return 'a[href^="#"]';
          },
          handler(t) {
            var e = t.defaultPrevented,
              t = t.current.hash;
            e || !t || Bt(t, this.$el) || this.hide(!1);
          },
        },
        {
          name: "beforescroll",
          handler() {
            this.hide(!1);
          },
        },
        {
          name: "toggle",
          self: !0,
          handler(t, e) {
            t.preventDefault(),
              this.isToggled() ? this.hide(!1) : this.show(e, !1);
          },
        },
        {
          name: "toggleshow",
          self: !0,
          handler(t, e) {
            t.preventDefault(), this.show(e);
          },
        },
        {
          name: "togglehide",
          self: !0,
          handler(t) {
            t.preventDefault(), this.hide();
          },
        },
        {
          name: wt,
          filter() {
            return w(this.mode, "hover");
          },
          handler(t) {
            se(t) || this.clearTimers();
          },
        },
        {
          name: bt,
          filter() {
            return w(this.mode, "hover");
          },
          handler(t) {
            !se(t) && t.relatedTarget && this.hide();
          },
        },
        {
          name: "toggled",
          self: !0,
          handler(t, e) {
            e && (this.clearTimers(), this.position());
          },
        },
        {
          name: "show",
          self: !0,
          handler() {
            const r = this;
            (xi = this).tracker.init(),
              Zt(
                this.$el,
                "hide",
                Kt(document, mt, function (t) {
                  const i = t.target;
                  return (
                    !Bt(i, r.$el) &&
                    Zt(
                      document,
                      vt + " " + xt + " scroll",
                      function (t) {
                        var e = t.defaultPrevented,
                          n = t.type,
                          t = t.target;
                        e ||
                          n !== vt ||
                          i !== t ||
                          (r.toggle && Bt(i, r.toggle.$el)) ||
                          r.hide(!1);
                      },
                      !0
                    )
                  );
                }),
                { self: !0 }
              ),
              Zt(
                this.$el,
                "hide",
                Kt(document, "keydown", function (t) {
                  27 === t.keyCode && r.hide(!1);
                }),
                { self: !0 }
              );
          },
        },
        {
          name: "beforehide",
          self: !0,
          handler() {
            this.clearTimers();
          },
        },
        {
          name: "hide",
          handler(t) {
            t = t.target;
            this.$el === t
              ? ((xi = this.isActive() ? null : xi), this.tracker.cancel())
              : (xi =
                  null === xi && Bt(t, this.$el) && this.isToggled()
                    ? this
                    : xi);
          },
        },
      ],
      update: {
        write() {
          this.isToggled() && !De(this.$el, this.clsEnter) && this.position();
        },
        events: ["resize"],
      },
      methods: {
        show(t, e) {
          let n,
            i = this;
          if (
            (void 0 === t && (t = this.toggle),
            void 0 === e && (e = !0),
            this.isToggled() &&
              t &&
              this.toggle &&
              t.$el !== this.toggle.$el &&
              this.hide(!1),
            (this.toggle = t),
            this.clearTimers(),
            !this.isActive())
          ) {
            if (xi) {
              if (e && xi.isDelaying)
                return void (this.showTimer = setTimeout(this.show, 10));
              for (; xi && n !== xi && !Bt(this.$el, xi.$el); )
                (n = xi).hide(!1);
            }
            this.showTimer = setTimeout(function () {
              return !i.isToggled() && i.toggleElement(i.$el, !0);
            }, (e && this.delayShow) || 0);
          }
        },
        hide(t) {
          const e = this;
          void 0 === t && (t = !0);
          function n() {
            return e.toggleElement(e.$el, !1, !1);
          }
          let i, r;
          this.clearTimers(),
            (this.isDelaying =
              ((i = this.$el),
              (r = []),
              Ce(i, function (t) {
                return "static" !== We(t, "position") && r.push(t);
              }),
              r.some(function (t) {
                return e.tracker.movesTo(t);
              }))),
            t && this.isDelaying
              ? (this.hideTimer = setTimeout(this.hide, 50))
              : t && this.delayHide
              ? (this.hideTimer = setTimeout(n, this.delayHide))
              : n();
        },
        clearTimers() {
          clearTimeout(this.showTimer),
            clearTimeout(this.hideTimer),
            (this.showTimer = null),
            (this.hideTimer = null),
            (this.isDelaying = !1);
        },
        isActive() {
          return xi === this;
        },
        position() {
          Be(this.$el, this.clsDrop + "-stack"),
            Pe(this.$el, this.clsDrop + "-boundary", this.boundaryAlign);
          let t,
            e = rn(this.boundary),
            n = this.boundaryAlign ? e : rn(this.toggle.$el);
          "justify" === this.align
            ? ((t = "y" === this.getAxis() ? "width" : "height"),
              We(this.$el, t, n[t]))
            : this.boundary &&
              this.$el.offsetWidth >
                Math.max(e.right - n.left, n.right - e.left) &&
              ze(this.$el, this.clsDrop + "-stack"),
            this.positionAt(
              this.$el,
              this.boundaryAlign ? this.boundary : this.toggle.$el,
              this.boundary
            );
        },
      },
    };
  const $i = {
      mixins: [di],
      args: "target",
      props: { target: Boolean },
      data: { target: !1 },
      computed: {
        input(t, e) {
          return _e(St, e);
        },
        state() {
          return this.input.nextElementSibling;
        },
        target(t, e) {
          t = t.target;
          return (
            t &&
            ((!0 === t &&
              Et(this.input) === e &&
              this.input.nextElementSibling) ||
              Pt(t, e))
          );
        },
      },
      update() {
        let t,
          e,
          n = this.target,
          i = this.input;
        !n ||
          (n[(e = It(n) ? "value" : "textContent")] !==
            (i =
              i.files && i.files[0]
                ? i.files[0].name
                : At(i, "select") &&
                  (t = Ae("option", i).filter(function (t) {
                    return t.selected;
                  })[0])
                ? t.textContent
                : i.value) &&
            (n[e] = i));
      },
      events: [
        {
          name: "change",
          handler() {
            this.$update();
          },
        },
        {
          name: "reset",
          el() {
            return zt(this.$el, "form");
          },
          handler() {
            this.$update();
          },
        },
      ],
    },
    Si = {
      update: {
        read(t) {
          const e = Pn(this.$el);
          if (!e || t.isInView === e) return !1;
          t.isInView = e;
        },
        write() {
          this.$el.src = "" + this.$el.src;
        },
        events: ["scroll", "resize"],
      },
    },
    Ii = {
      props: { margin: String, firstColumn: Boolean },
      data: { margin: "mod-margin-small-top", firstColumn: "mod-first-column" },
      update: {
        read() {
          const t = Ei(this.$el.children);
          return {
            rows: t,
            columns: (function (t) {
              for (var e = [], n = 0; n < t.length; n++)
                for (
                  let i = Ti(t[n], "left", "right"), r = 0;
                  r < i.length;
                  r++
                )
                  e[r] = e[r] ? e[r].concat(i[r]) : i[r];
              return lt ? e.reverse() : e;
            })(t),
          };
        },
        write(t) {
          for (let e = t.columns, n = t.rows, i = 0; i < n.length; i++)
            for (let r = 0; r < n[i].length; r++)
              Pe(n[i][r], this.margin, 0 !== i),
                Pe(n[i][r], this.firstColumn, !!~e[0].indexOf(n[i][r]));
        },
        events: ["resize"],
      },
    };
  function Ei(t) {
    return Ti(t, "top", "bottom");
  }
  function Ti(t, e, n) {
    for (var i = [[]], r = 0; r < t.length; r++) {
      const o = t[r];
      if ($t(o))
        for (let s = Ci(o), a = i.length - 1; 0 <= a; a--) {
          const u = i[a];
          if (!u[0]) {
            u.push(o);
            break;
          }
          var c = void 0,
            c =
              u[0].offsetParent === o.offsetParent
                ? Ci(u[0])
                : ((s = Ci(o, !0)), Ci(u[0], !0));
          if (s[e] >= c[n] - 1 && s[e] !== c[e]) {
            i.push([o]);
            break;
          }
          if (s[n] - 1 > c[e] || s[e] === c[e]) {
            u.push(o);
            break;
          }
          if (0 === a) {
            i.unshift([o]);
            break;
          }
        }
    }
    return i;
  }
  function Ci(t, e) {
    void 0 === e && (e = !1);
    let n = t.offsetTop,
      i = t.offsetLeft,
      r = t.offsetHeight,
      o = t.offsetWidth;
    return (
      e && ((n = (t = sn(t))[0]), (i = t[1])),
      { top: n, left: i, bottom: n + r, right: i + o }
    );
  }
  const _i = {
    extends: Ii,
    mixins: [di],
    name: "grid",
    props: { masonry: Boolean, parallax: Number },
    data: {
      margin: "mod-grid-margin",
      clsStack: "mod-grid-stack",
      masonry: !1,
      parallax: 0,
    },
    connected() {
      this.masonry && ze(this.$el, "mod-flex-top mod-flex-wrap-top");
    },
    update: [
      {
        write(t) {
          t = t.columns;
          Pe(this.$el, this.clsStack, t.length < 2);
        },
        events: ["resize"],
      },
      {
        read(t) {
          let e = t.columns,
            n = t.rows;
          if (!e.length || (!this.masonry && !this.parallax) || Ai(this.$el))
            return (t.translates = !1);
          let i,
            r,
            o = !1,
            s = Ot(this.$el),
            a = e.map(function (t) {
              return t.reduce(function (t, e) {
                return t + e.offsetHeight;
              }, 0);
            }),
            u =
              ((t = s),
              (i = this.margin),
              L(
                (s = t.filter(function (t) {
                  return De(t, i);
                })[0])
                  ? We(s, "marginTop")
                  : We(t[0], "paddingLeft")
              ) *
                (n.length - 1)),
            c = Math.max.apply(Math, a) + u;
          this.masonry &&
            ((e = e.map(function (t) {
              return K(t, "offsetTop");
            })),
            (t = e),
            (r = n.map(function (t) {
              return Math.max.apply(
                Math,
                t.map(function (t) {
                  return t.offsetHeight;
                })
              );
            })),
            (o = t.map(function (n) {
              let i = 0;
              return n.map(function (t, e) {
                return (i += e ? r[e - 1] - n[e - 1].offsetHeight : 0);
              });
            })));
          let h = Math.abs(this.parallax);
          return {
            padding: (h =
              h &&
              a.reduce(function (t, e, n) {
                return Math.max(t, e + u + (n % 2 ? h : h / 8) - c);
              }, 0)),
            columns: e,
            translates: o,
            height: o ? c : "",
          };
        },
        write(t) {
          var e = t.height,
            t = t.padding;
          We(this.$el, "paddingBottom", t || ""),
            !1 !== e && We(this.$el, "height", e);
        },
        events: ["resize"],
      },
      {
        read(t) {
          t = t.height;
          return (
            !Ai(this.$el) && {
              scrolled:
                !!this.parallax &&
                jn(this.$el, t ? t - an(this.$el) : 0) *
                  Math.abs(this.parallax),
            }
          );
        },
        write(t) {
          const e = t.columns,
            i = t.scrolled,
            r = t.translates;
          (!1 === i && !r) ||
            e.forEach(function (t, n) {
              return t.forEach(function (t, e) {
                return We(
                  t,
                  "transform",
                  i || r
                    ? "translateY(" +
                        ((r && -r[n][e]) + (i ? (n % 2 ? i : i / 8) : 0)) +
                        "px)"
                    : ""
                );
              });
            });
        },
        events: ["scroll", "resize"],
      },
    ],
  };
  function Ai(t) {
    return Ot(t).some(function (t) {
      return "absolute" === We(t, "position");
    });
  }
  var Mi = ht
      ? {
          props: { selMinHeight: String },
          data: { selMinHeight: !1, forceHeight: !1 },
          computed: {
            elements(t, e) {
              t = t.selMinHeight;
              return t ? Ae(t, e) : [e];
            },
          },
          update: [
            {
              read() {
                We(this.elements, "height", "");
              },
              order: -5,
              events: ["resize"],
            },
            {
              write() {
                const n = this;
                this.elements.forEach(function (t) {
                  const e = L(We(t, "minHeight"));
                  e &&
                    (n.forceHeight ||
                      Math.round(e + hn(t, "height", "content-box")) >=
                        t.offsetHeight) &&
                    We(t, "height", e);
                });
              },
              order: 5,
              events: ["resize"],
            },
          ],
        }
      : {},
    zi = {
      mixins: [Mi],
      args: "target",
      props: { target: String, row: Boolean },
      data: { target: "> *", row: !0, forceHeight: !0 },
      computed: {
        elements(t, e) {
          return Ae(t.target, e);
        },
      },
      update: {
        read() {
          return {
            rows: (this.row ? Ei(this.elements) : [this.elements]).map(Bi),
          };
        },
        write(t) {
          t.rows.forEach(function (t) {
            const n = t.heights;
            return t.elements.forEach(function (t, e) {
              return We(t, "minHeight", n[e]);
            });
          });
        },
        events: ["resize"],
      },
    };
  function Bi(t) {
    if (t.length < 2) return { heights: [""], elements: t };
    let n = t.map(Ni),
      i = Math.max.apply(Math, n),
      e = t.some(function (t) {
        return t.style.minHeight;
      }),
      r = t.some(function (t, e) {
        return !t.style.minHeight && n[e] < i;
      });
    return (
      e &&
        r &&
        (We(t, "minHeight", ""),
        (n = t.map(Ni)),
        (i = Math.max.apply(Math, n))),
      {
        heights: (n = t.map(function (t, e) {
          return n[e] === i && L(t.style.minHeight).toFixed(2) !== i.toFixed(2)
            ? ""
            : i;
        })),
        elements: t,
      }
    );
  }
  function Ni(t) {
    let e = !1;
    $t(t) || ((e = t.style.display), We(t, "display", "block", "important"));
    const n = nn(t).height - hn(t, "height", "content-box");
    return !1 !== e && We(t, "display", e), n;
  }
  const Oi = {
      mixins: [Mi],
      props: {
        expand: Boolean,
        offsetTop: Boolean,
        offsetBottom: Boolean,
        minHeight: Number,
      },
      data: { expand: !1, offsetTop: !1, offsetBottom: !1, minHeight: 0 },
      update: {
        read(t) {
          const e = t.minHeight;
          if (!$t(this.$el)) return !1;
          let n = "",
            i = hn(this.$el, "height", "content-box");
          return (
            this.expand
              ? (n =
                  an(window) -
                    (nn(document.documentElement).height -
                      nn(this.$el).height) -
                    i || "")
              : ((n = "calc(100vh"),
                this.offsetTop &&
                  (n +=
                    0 < (t = rn(this.$el).top) && t < an(window) / 2
                      ? " - " + t + "px"
                      : ""),
                !0 === this.offsetBottom
                  ? (n += " - " + nn(this.$el.nextElementSibling).height + "px")
                  : N(this.offsetBottom)
                  ? (n += " - " + this.offsetBottom + "vh")
                  : this.offsetBottom && u(this.offsetBottom, "px")
                  ? (n += " - " + L(this.offsetBottom) + "px")
                  : z(this.offsetBottom) &&
                    (n +=
                      " - " +
                      nn(Pt(this.offsetBottom, this.$el)).height +
                      "px"),
                (n += (i ? " - " + i + "px" : "") + ")")),
            { minHeight: n, prev: e }
          );
        },
        write(t) {
          var e = t.minHeight,
            t = t.prev;
          We(this.$el, { minHeight: e }),
            e !== t && this.$update(this.$el, "resize"),
            this.minHeight &&
              L(We(this.$el, "minHeight")) < this.minHeight &&
              We(this.$el, "minHeight", this.minHeight);
        },
        events: ["resize"],
      },
    },
    Di = {
      args: "dataSrc",
      props: {
        dataSrc: String,
        dataSrcset: Boolean,
        sizes: String,
        width: Number,
        height: Number,
        offsetTop: String,
        offsetLeft: String,
        target: String,
      },
      data: {
        dataSrc: "",
        dataSrcset: !1,
        sizes: !1,
        width: !1,
        height: !1,
        offsetTop: "50vh",
        offsetLeft: "50vw",
        target: !1,
      },
      computed: {
        cacheKey(t) {
          t = t.dataSrc;
          return this.$name + "." + t;
        },
        width(t) {
          var e = t.width,
            t = t.dataWidth;
          return e || t;
        },
        height(t) {
          var e = t.height,
            t = t.dataHeight;
          return e || t;
        },
        sizes(t) {
          var e = t.sizes,
            t = t.dataSizes;
          return e || t;
        },
        isImg(t, e) {
          return Vi(e);
        },
        target: {
          get(t) {
            t = t.target;
            return [this.$el].concat(Ht(t, this.$el));
          },
          watch() {
            this.observe();
          },
        },
        offsetTop(t) {
          return dn(t.offsetTop, "height");
        },
        offsetLeft(t) {
          return dn(t.offsetLeft, "width");
        },
      },
      connected() {
        window.IntersectionObserver
          ? (qi[this.cacheKey]
              ? Pi(this.$el, qi[this.cacheKey], this.dataSrcset, this.sizes)
              : this.isImg &&
                this.width &&
                this.height &&
                Pi(
                  this.$el,
                  (function (t, e, n) {
                    n &&
                      ((n = nt.ratio(
                        { width: t, height: e },
                        "width",
                        dn(Li(n))
                      )),
                      (t = n.width),
                      (e = n.height));
                    return (
                      'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="' +
                      t +
                      '" height="' +
                      e +
                      '"></svg>'
                    );
                  })(this.width, this.height, this.sizes)
                ),
            (this.observer = new IntersectionObserver(this.load, {
              rootMargin: this.offsetTop + "px " + this.offsetLeft + "px",
            })),
            requestAnimationFrame(this.observe))
          : Pi(this.$el, this.dataSrc, this.dataSrcset, this.sizes);
      },
      disconnected() {
        this.observer && this.observer.disconnect();
      },
      update: {
        read(t) {
          var e = this,
            t = t.image;
          return (
            !!this.observer &&
            (t ||
              "complete" !== document.readyState ||
              this.load(this.observer.takeRecords()),
            !this.isImg &&
              void (
                t &&
                t.then(function (t) {
                  return t && "" !== t.currentSrc && Pi(e.$el, Ri(t));
                })
              ))
          );
        },
        write(t) {
          let e, n, i;
          this.dataSrcset &&
            1 !== window.devicePixelRatio &&
            ((!(n = We(this.$el, "backgroundSize")).match(/^(auto\s?)+$/) &&
              L(n) !== t.bgSize) ||
              ((t.bgSize =
                ((e = this.dataSrcset),
                (n = this.sizes),
                (i = dn(Li(n))),
                (e = (e.match(Wi) || []).map(L).sort(function (t, e) {
                  return t - e;
                })).filter(function (t) {
                  return i <= t;
                })[0] ||
                  e.pop() ||
                  "")),
              We(this.$el, "backgroundSize", t.bgSize + "px")));
        },
        events: ["resize"],
      },
      methods: {
        load(t) {
          const e = this;
          t.some(function (t) {
            return D(t.isIntersecting) || t.isIntersecting;
          }) &&
            ((this._data.image = me(
              this.dataSrc,
              this.dataSrcset,
              this.sizes
            ).then(
              function (t) {
                return (
                  Pi(e.$el, Ri(t), t.srcset, t.sizes),
                  (qi[e.cacheKey] = Ri(t)),
                  t
                );
              },
              function (t) {
                return Qt(e.$el, new t.constructor(t.type, t));
              }
            )),
            this.observer.disconnect());
        },
        observe() {
          const e = this;
          this._connected &&
            !this._data.image &&
            this.target.forEach(function (t) {
              return e.observer.observe(t);
            });
        },
      },
    };
  function Pi(t, e, n, i) {
    Vi(t)
      ? (i && (t.sizes = i), n && (t.srcset = n), e && (t.src = e))
      : e &&
        !w(t.style.backgroundImage, e) &&
        (We(t, "backgroundImage", "url(" + Xt(e) + ")"), Qt(t, te("load", !1)));
  }
  const Hi = /\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g;
  function Li(t) {
    let e, n;
    for (Hi.lastIndex = 0; (e = Hi.exec(t)); )
      if (!e[1] || window.matchMedia(e[1]).matches) {
        e = g((n = e[2]), "calc")
          ? n
              .slice(5, -1)
              .replace(ji, function (t) {
                return dn(t);
              })
              .replace(/ /g, "")
              .match(Fi)
              .reduce(function (t, e) {
                return t + +e;
              }, 0)
          : n;
        break;
      }
    return e || "100vw";
  }
  var ji = /\d+(?:\w+|%)/g,
    Fi = /[+-]?(\d+)/g;
  var Wi = /\s+\d+w\s*(?:,|$)/g;
  function Vi(t) {
    return "IMG" === t.tagName;
  }
  function Ri(t) {
    return t.currentSrc || t.src;
  }
  let qi,
    Ui = "__test__";
  try {
    ((qi = window.sessionStorage || {})[Ui] = 1), delete qi[Ui];
  } catch (t) {
    qi = {};
  }
  let Yi = {
      props: { container: Boolean },
      data: { container: !0 },
      computed: {
        container(t) {
          t = t.container;
          return (!0 === t && this.$container) || (t && _e(t));
        },
      },
    },
    Gi = [],
    Xi = {
      mixins: [di, Yi, fi],
      props: {
        selPanel: String,
        selClose: String,
        escClose: Boolean,
        bgClose: Boolean,
        stack: Boolean,
      },
      data: {
        cls: "mod-open",
        escClose: !0,
        bgClose: !0,
        overlay: !0,
        stack: !1,
      },
      computed: {
        panel(t, e) {
          return _e(t.selPanel, e);
        },
        transitionElement() {
          return this.panel;
        },
        bgClose(t) {
          return t.bgClose && this.panel;
        },
      },
      beforeDisconnect() {
        this.isToggled() && this.toggleElement(this.$el, !1, !1);
      },
      events: [
        {
          name: "click",
          delegate() {
            return this.selClose;
          },
          handler(t) {
            t.preventDefault(), this.hide();
          },
        },
        {
          name: "toggle",
          self: !0,
          handler(t) {
            t.defaultPrevented ||
              (t.preventDefault(),
              this.isToggled() === w(Gi, this) && this.toggle());
          },
        },
        {
          name: "beforeshow",
          self: !0,
          handler(t) {
            if (w(Gi, this)) return !1;
            !this.stack && Gi.length
              ? (ce
                  .all(
                    Gi.map(function (t) {
                      return t.hide();
                    })
                  )
                  .then(this.show),
                t.preventDefault())
              : Gi.push(this);
          },
        },
        {
          name: "show",
          self: !0,
          handler() {
            const r = this,
              t = document.documentElement;
            un(window) > t.clientWidth &&
              this.overlay &&
              We(document.body, "overflowY", "scroll"),
              this.stack &&
                We(this.$el, "zIndex", L(We(this.$el, "zIndex")) + Gi.length),
              ze(t, this.clsPage),
              this.bgClose &&
                Zt(
                  this.$el,
                  "hide",
                  Kt(document, mt, function (t) {
                    const i = t.target;
                    G(Gi) !== r ||
                      (r.overlay && !Bt(i, r.$el)) ||
                      Bt(i, r.panel) ||
                      Zt(
                        document,
                        vt + " " + xt + " scroll",
                        function (t) {
                          var e = t.defaultPrevented,
                            n = t.type,
                            t = t.target;
                          e || n !== vt || i !== t || r.hide();
                        },
                        !0
                      );
                  }),
                  { self: !0 }
                ),
              this.escClose &&
                Zt(
                  this.$el,
                  "hide",
                  Kt(document, "keydown", function (t) {
                    27 === t.keyCode && G(Gi) === r && r.hide();
                  }),
                  { self: !0 }
                );
          },
        },
        {
          name: "hidden",
          self: !0,
          handler() {
            const e = this;
            w(Gi, this) && Gi.splice(Gi.indexOf(this), 1),
              Gi.length || We(document.body, "overflowY", ""),
              We(this.$el, "zIndex", ""),
              Gi.some(function (t) {
                return t.clsPage === e.clsPage;
              }) || Be(document.documentElement, this.clsPage);
          },
        },
      ],
      methods: {
        toggle() {
          return this.isToggled() ? this.hide() : this.show();
        },
        show() {
          const e = this;
          return this.container && Et(this.$el) !== this.container
            ? (we(this.container, this.$el),
              new ce(function (t) {
                return requestAnimationFrame(function () {
                  return e.show().then(t);
                });
              }))
            : this.toggleElement(this.$el, !0, Ki(this));
        },
        hide() {
          return this.toggleElement(this.$el, !1, Ki(this));
        },
      },
    };
  function Ki(t) {
    const s = t.transitionElement,
      a = t._toggle;
    return function (r, o) {
      return new ce(function (n, i) {
        return Zt(r, "show hide", function () {
          r._reject && r._reject(), (r._reject = i), a(r, o);
          var t = Zt(
              s,
              "transitionstart",
              function () {
                Zt(s, "transitionend transitioncancel", n, { self: !0 }),
                  clearTimeout(e);
              },
              { self: !0 }
            ),
            e = setTimeout(function () {
              t(), n();
            }, R(We(s, "transitionDuration")));
        });
      }).then(function () {
        return delete r._reject;
      });
    };
  }
  const Ji = {
    install(t) {
      const a = t.modal;
      function i(t, e, n, i) {
        e = Y({ bgClose: !1, escClose: !0, labels: a.labels }, e);
        let r = a.dialog(t(e), e),
          o = new ue(),
          s = !1;
        return (
          Kt(r.$el, "submit", "form", function (t) {
            t.preventDefault(), o.resolve(i && i(r)), (s = !0), r.hide();
          }),
          Kt(r.$el, "hide", function () {
            return !s && n(o);
          }),
          (o.promise.dialog = r),
          o.promise
        );
      }
      (a.dialog = function (t, e) {
        const n = a(
          '<div class="mod-modal"> <div class="mod-modal-dialog">' +
            t +
            "</div> </div>",
          e
        );
        return (
          n.show(),
          Kt(
            n.$el,
            "hidden",
            function () {
              return ce.resolve().then(function () {
                return n.$destroy(!0);
              });
            },
            { self: !0 }
          ),
          n
        );
      }),
        (a.alert = function (e, t) {
          return i(
            function (t) {
              t = t.labels;
              return (
                '<div class="mod-modal-body">' +
                (z(e) ? e : ve(e)) +
                '</div> <div class="mod-modal-footer mod-text-right"> <button class="mod-button mod-button-primary mod-modal-close" autofocus>' +
                t.ok +
                "</button> </div>"
              );
            },
            t,
            function (t) {
              return t.resolve();
            }
          );
        }),
        (a.confirm = function (e, t) {
          return i(
            function (t) {
              t = t.labels;
              return (
                '<form> <div class="mod-modal-body">' +
                (z(e) ? e : ve(e)) +
                '</div> <div class="mod-modal-footer mod-text-right"> <button class="mod-button mod-button-default mod-modal-close" type="button">' +
                t.cancel +
                '</button> <button class="mod-button mod-button-primary" autofocus>' +
                t.ok +
                "</button> </div> </form>"
              );
            },
            t,
            function (t) {
              return t.reject();
            }
          );
        }),
        (a.prompt = function (e, n, t) {
          return i(
            function (t) {
              t = t.labels;
              return (
                '<form class="mod-form-stacked"> <div class="mod-modal-body"> <label>' +
                (z(e) ? e : ve(e)) +
                '</label> <input class="mod-input" value="' +
                (n || "") +
                '" autofocus> </div> <div class="mod-modal-footer mod-text-right"> <button class="mod-button mod-button-default mod-modal-close" type="button">' +
                t.cancel +
                '</button> <button class="mod-button mod-button-primary">' +
                t.ok +
                "</button> </div> </form>"
              );
            },
            t,
            function (t) {
              return t.resolve(null);
            },
            function (t) {
              return _e("input", t.$el).value;
            }
          );
        }),
        (a.labels = { ok: "Ok", cancel: "Cancel" });
    },
    mixins: [Xi],
    data: {
      clsPage: "mod-modal-page",
      selPanel: ".mod-modal-dialog",
      selClose:
        ".mod-modal-close, .mod-modal-close-default, .mod-modal-close-outside, .mod-modal-close-full",
    },
    events: [
      {
        name: "show",
        self: !0,
        handler() {
          De(this.panel, "mod-margin-auto-vertical")
            ? ze(this.$el, "mod-flex")
            : We(this.$el, "display", "block"),
            an(this.$el);
        },
      },
      {
        name: "hidden",
        self: !0,
        handler() {
          We(this.$el, "display", ""), Be(this.$el, "mod-flex");
        },
      },
    ],
  };
  const Zi = {
    mixins: [Xi],
    args: "mode",
    props: { mode: String, flip: Boolean, overlay: Boolean },
    data: {
      mode: "slide",
      flip: !1,
      overlay: !1,
      clsPage: "mod-offcanvas-page",
      clsContainer: "mod-offcanvas-container",
      selPanel: ".mod-offcanvas-bar",
      clsFlip: "mod-offcanvas-flip",
      clsContainerAnimation: "mod-offcanvas-container-animation",
      clsSidebarAnimation: "mod-offcanvas-bar-animation",
      clsMode: "mod-offcanvas",
      clsOverlay: "mod-offcanvas-overlay",
      selClose: ".mod-offcanvas-close",
      container: !1,
    },
    computed: {
      clsFlip(t) {
        var e = t.flip,
          t = t.clsFlip;
        return e ? t : "";
      },
      clsOverlay(t) {
        var e = t.overlay,
          t = t.clsOverlay;
        return e ? t : "";
      },
      clsMode(t) {
        const e = t.mode;
        return t.clsMode + "-" + e;
      },
      clsSidebarAnimation(t) {
        var e = t.mode,
          t = t.clsSidebarAnimation;
        return "none" === e || "reveal" === e ? "" : t;
      },
      clsContainerAnimation(t) {
        var e = t.mode,
          t = t.clsContainerAnimation;
        return "push" !== e && "reveal" !== e ? "" : t;
      },
      transitionElement(t) {
        return "reveal" === t.mode ? Et(this.panel) : this.panel;
      },
    },
    update: {
      read() {
        this.isToggled() && !$t(this.$el) && this.hide();
      },
      events: ["resize"],
    },
    events: [
      {
        name: "click",
        delegate() {
          return 'a[href^="#"]';
        },
        handler(t) {
          const e = t.current.hash;
          !t.defaultPrevented && e && _e(e, document.body) && this.hide();
        },
      },
      {
        name: "touchstart",
        passive: !0,
        el() {
          return this.panel;
        },
        handler(t) {
          t = t.targetTouches;
          1 === t.length && (this.clientY = t[0].clientY);
        },
      },
      {
        name: "touchmove",
        self: !0,
        passive: !1,
        filter() {
          return this.overlay;
        },
        handler(t) {
          t.cancelable && t.preventDefault();
        },
      },
      {
        name: "touchmove",
        passive: !1,
        el() {
          return this.panel;
        },
        handler(t) {
          let e, n, i, r;
          1 === t.targetTouches.length &&
            ((e = event.targetTouches[0].clientY - this.clientY),
            (n = (r = this.panel).scrollTop),
            ((i = r.scrollHeight) <= (r = r.clientHeight) ||
              (0 === n && 0 < e) ||
              (i - n <= r && e < 0)) &&
              t.cancelable &&
              t.preventDefault());
        },
      },
      {
        name: "show",
        self: !0,
        handler() {
          "reveal" !== this.mode ||
            De(Et(this.panel), this.clsMode) ||
            ($e(this.panel, "<div>"), ze(Et(this.panel), this.clsMode)),
            We(
              document.documentElement,
              "overflowY",
              this.overlay ? "hidden" : ""
            ),
            ze(document.body, this.clsContainer, this.clsFlip),
            We(document.body, "touch-action", "pan-y pinch-zoom"),
            We(this.$el, "display", "block"),
            ze(this.$el, this.clsOverlay),
            ze(
              this.panel,
              this.clsSidebarAnimation,
              "reveal" !== this.mode ? this.clsMode : ""
            ),
            an(document.body),
            ze(document.body, this.clsContainerAnimation),
            this.clsContainerAnimation && (Qi().content += ",user-scalable=0");
        },
      },
      {
        name: "hide",
        self: !0,
        handler() {
          Be(document.body, this.clsContainerAnimation),
            We(document.body, "touch-action", "");
        },
      },
      {
        name: "hidden",
        self: !0,
        handler() {
          let t;
          this.clsContainerAnimation &&
            ((t = Qi()).content = t.content.replace(/,user-scalable=0$/, "")),
            "reveal" === this.mode && Se(this.panel),
            Be(this.panel, this.clsSidebarAnimation, this.clsMode),
            Be(this.$el, this.clsOverlay),
            We(this.$el, "display", ""),
            Be(document.body, this.clsContainer, this.clsFlip),
            We(document.documentElement, "overflowY", "");
        },
      },
      {
        name: "swipeLeft swipeRight",
        handler(t) {
          this.isToggled() && u(t.type, "Left") ^ this.flip && this.hide();
        },
      },
    ],
  };
  function Qi() {
    return (
      _e('meta[name="viewport"]', document.head) ||
      we(document.head, '<meta name="viewport">')
    );
  }
  let tr = {
      mixins: [di],
      props: { selContainer: String, selContent: String },
      data: { selContainer: ".mod-modal", selContent: ".mod-modal-dialog" },
      computed: {
        container(t, e) {
          return zt(e, t.selContainer);
        },
        content(t, e) {
          return zt(e, t.selContent);
        },
      },
      connected() {
        We(this.$el, "minHeight", 150);
      },
      update: {
        read() {
          return (
            !!(this.content && this.container && $t(this.$el)) && {
              current: L(We(this.$el, "maxHeight")),
              max: Math.max(
                150,
                an(this.container) - (nn(this.content).height - an(this.$el))
              ),
            }
          );
        },
        write(t) {
          var e = t.current,
            t = t.max;
          We(this.$el, "maxHeight", t),
            Math.round(e) !== Math.round(t) && Qt(this.$el, "resize");
        },
        events: ["resize"],
      },
    },
    er = {
      props: ["width", "height"],
      connected() {
        ze(this.$el, "mod-responsive-width");
      },
      update: {
        read() {
          return (
            !!($t(this.$el) && this.width && this.height) && {
              width: un(Et(this.$el)),
              height: this.height,
            }
          );
        },
        write(t) {
          an(
            this.$el,
            nt.contain({ height: this.height, width: this.width }, t).height
          );
        },
        events: ["resize"],
      },
    },
    nr = {
      props: { offset: Number },
      data: { offset: 0 },
      methods: {
        scrollTo(t) {
          const e = this;
          (t = (t && _e(t)) || document.body),
            Qt(this.$el, "beforescroll", [this, t]) &&
              Ln(t, { offset: this.offset }).then(function () {
                return Qt(e.$el, "scrolled", [e, t]);
              });
        },
      },
      events: {
        click(t) {
          t.defaultPrevented ||
            (t.preventDefault(),
            this.scrollTo(
              "#" + Xt(decodeURIComponent((this.$el.hash || "").substr(1)))
            ));
        },
      },
    },
    ir = "_ukScrollspy",
    rr = {
      args: "cls",
      props: {
        cls: String,
        target: String,
        hidden: Boolean,
        offsetTop: Number,
        offsetLeft: Number,
        repeat: Boolean,
        delay: Number,
      },
      data() {
        return {
          cls: !1,
          target: !1,
          hidden: !0,
          offsetTop: 0,
          offsetLeft: 0,
          repeat: !1,
          delay: 0,
          inViewClass: "mod-scrollspy-inview",
        };
      },
      computed: {
        elements: {
          get(t, e) {
            t = t.target;
            return t ? Ae(t, e) : [e];
          },
          watch(t) {
            this.hidden &&
              We(
                Tt(t, ":not(." + this.inViewClass + ")"),
                "visibility",
                "hidden"
              );
          },
          immediate: !0,
        },
      },
      disconnected() {
        const e = this;
        this.elements.forEach(function (t) {
          Be(t, e.inViewClass, t[ir] ? t[ir].cls : ""), delete t[ir];
        });
      },
      update: [
        {
          read(t) {
            const e = this;
            t.update &&
              this.elements.forEach(function (t) {
                t[ir] ||
                  (t[ir] = { cls: ut(t, "mod-scrollspy-class") || e.cls }),
                  (t[ir].show = Pn(t, e.offsetTop, e.offsetLeft));
              });
          },
          write(i) {
            const r = this;
            if (!i.update) return this.$emit(), (i.update = !0);
            this.elements.forEach(function (e) {
              function t(t) {
                We(e, "visibility", !t && r.hidden ? "hidden" : ""),
                  Pe(e, r.inViewClass, t),
                  Pe(e, n.cls),
                  Qt(e, t ? "inview" : "outview"),
                  (n.inview = t),
                  r.$update(e);
              }
              var n = e[ir];
              !n.show || n.inview || n.queued
                ? !n.show && n.inview && !n.queued && r.repeat && t(!1)
                : ((n.queued = !0),
                  (i.promise = (i.promise || ce.resolve())
                    .then(function () {
                      return new ce(function (t) {
                        return setTimeout(t, r.delay);
                      });
                    })
                    .then(function () {
                      t(!0),
                        setTimeout(function () {
                          (n.queued = !1), r.$emit();
                        }, 300);
                    })));
            });
          },
          events: ["scroll", "resize"],
        },
      ],
    },
    or = {
      props: {
        cls: String,
        closest: String,
        scroll: Boolean,
        overflow: Boolean,
        offset: Number,
      },
      data: {
        cls: "mod-active",
        closest: !1,
        scroll: !1,
        overflow: !0,
        offset: 0,
      },
      computed: {
        links: {
          get(t, e) {
            return Ae('a[href^="#"]', e).filter(function (t) {
              return t.hash;
            });
          },
          watch(t) {
            this.scroll &&
              this.$create("scroll", t, { offset: this.offset || 0 });
          },
          immediate: !0,
        },
        targets() {
          return Ae(
            this.links
              .map(function (t) {
                return Xt(t.hash).substr(1);
              })
              .join(",")
          );
        },
        elements(t) {
          t = t.closest;
          return zt(this.links, t || "*");
        },
      },
      update: [
        {
          read() {
            const n = this,
              t = this.targets.length;
            if (!t || !$t(this.$el)) return !1;
            let i = Fn(this.targets, /auto|scroll/, !0)[0],
              e = i.scrollTop,
              r = i.scrollHeight - Vn(i),
              o = !1;
            return (
              e === r
                ? (o = t - 1)
                : (this.targets.every(function (t, e) {
                    if (rn(t).top - rn(Wn(i)).top - n.offset <= 0)
                      return (o = e), !0;
                  }),
                  !1 === o && this.overflow && (o = 0)),
              { active: o }
            );
          },
          write(t) {
            t = t.active;
            this.links.forEach(function (t) {
              return t.blur();
            }),
              Be(this.elements, this.cls),
              !1 !== t &&
                Qt(this.$el, "active", [t, ze(this.elements[t], this.cls)]);
          },
          events: ["scroll", "resize"],
        },
      ],
    },
    sr = {
      props: { media: Boolean },
      data: { media: !1 },
      computed: {
        matchMedia() {
          const t = (function (t) {
            if (z(t))
              if ("@" === t[0]) t = L(Ue("breakpoint-" + t.substr(1)));
              else if (isNaN(t)) return t;
            return !(!t || isNaN(t)) && "(min-width: " + t + "px)";
          })(this.media);
          return !t || window.matchMedia(t).matches;
        },
      },
    };
  const ar = {
    mixins: [di, sr],
    props: {
      top: null,
      bottom: Boolean,
      offset: String,
      animation: String,
      clsActive: String,
      clsInactive: String,
      clsFixed: String,
      clsBelow: String,
      selTarget: String,
      widthElement: Boolean,
      showOnUp: Boolean,
      targetOffset: Number,
    },
    data: {
      top: 0,
      bottom: !1,
      offset: 0,
      animation: "",
      clsActive: "mod-active",
      clsInactive: "",
      clsFixed: "mod-sticky-fixed",
      clsBelow: "mod-sticky-below",
      selTarget: "",
      widthElement: !1,
      showOnUp: !1,
      targetOffset: !1,
    },
    computed: {
      offset(t) {
        return dn(t.offset);
      },
      selTarget(t, e) {
        t = t.selTarget;
        return (t && _e(t, e)) || e;
      },
      widthElement(t, e) {
        return Pt(t.widthElement, e) || this.placeholder;
      },
      isActive: {
        get() {
          return De(this.selTarget, this.clsActive);
        },
        set(t) {
          t && !this.isActive
            ? (Oe(this.selTarget, this.clsInactive, this.clsActive),
              Qt(this.$el, "active"))
            : t ||
              De(this.selTarget, this.clsInactive) ||
              (Oe(this.selTarget, this.clsActive, this.clsInactive),
              Qt(this.$el, "inactive"));
        },
      },
    },
    connected() {
      (this.placeholder =
        _e("+ .mod-sticky-placeholder", this.$el) ||
        _e('<div class="mod-sticky-placeholder"></div>')),
        (this.isFixed = !1),
        (this.isActive = !1);
    },
    disconnected() {
      this.isFixed && (this.hide(), Be(this.selTarget, this.clsInactive)),
        ke(this.placeholder),
        (this.placeholder = null),
        (this.widthElement = null);
    },
    events: [
      {
        name: "load hashchange popstate",
        el() {
          return window;
        },
        handler() {
          let i,
            r = this;
          !1 !== this.targetOffset &&
            location.hash &&
            0 < window.pageYOffset &&
            (i = _e(location.hash)) &&
            pn.read(function () {
              const t = rn(i).top,
                e = rn(r.$el).top,
                n = r.$el.offsetHeight;
              r.isFixed &&
                t <= e + n &&
                e <= t + i.offsetHeight &&
                Hn(
                  window,
                  t - n - (N(r.targetOffset) ? r.targetOffset : 0) - r.offset
                );
            });
        },
      },
    ],
    update: [
      {
        read(t, e) {
          t = t.height;
          if (
            ((this.inactive = !this.matchMedia || !$t(this.$el)), this.inactive)
          )
            return !1;
          this.isActive &&
            e.has("resize") &&
            (this.hide(), (t = this.$el.offsetHeight), this.show()),
            (t = this.isActive ? t : this.$el.offsetHeight),
            (this.topOffset = rn(
              this.isFixed ? this.placeholder : this.$el
            ).top),
            (this.bottomOffset = this.topOffset + t);
          e = ur("bottom", this);
          return (
            (this.top =
              Math.max(L(ur("top", this)), this.topOffset) - this.offset),
            (this.bottom = e && e - this.$el.offsetHeight),
            (this.width = nn(
              $t(this.widthElement) ? this.widthElement : this.$el
            ).width),
            {
              height: t,
              top: sn(this.placeholder)[0],
              margins: We(this.$el, [
                "marginTop",
                "marginBottom",
                "marginLeft",
                "marginRight",
              ]),
            }
          );
        },
        write(t) {
          var e = t.height,
            n = t.margins,
            t = this.placeholder;
          We(t, Y({ height: e }, n)),
            Bt(t, document) || (xe(this.$el, t), (t.hidden = !0)),
            (this.isActive = !!this.isActive);
        },
        events: ["resize"],
      },
      {
        read(t) {
          t = t.scroll;
          return (
            void 0 === t && (t = 0),
            (this.scroll = window.pageYOffset),
            { dir: t <= this.scroll ? "down" : "up", scroll: this.scroll }
          );
        },
        write(t, e) {
          let n = this,
            i = Date.now(),
            r = e.has("scroll"),
            o = t.initTimestamp;
          void 0 === o && (o = 0);
          var s = t.dir,
            a = t.lastDir,
            u = t.lastScroll,
            c = t.scroll,
            e = t.top;
          (t.lastScroll = c) < 0 ||
            (c === u && r) ||
            (this.showOnUp && !r && !this.isFixed) ||
            ((300 < i - o || s !== a) &&
              ((t.initScroll = c), (t.initTimestamp = i)),
            (t.lastDir = s),
            (this.showOnUp &&
              !this.isFixed &&
              Math.abs(t.initScroll - c) <= 30 &&
              Math.abs(u - c) <= 10) ||
              (this.inactive ||
              c < this.top ||
              (this.showOnUp &&
                (c <= this.top ||
                  ("down" === s && r) ||
                  ("up" === s && !this.isFixed && c <= this.bottomOffset)))
                ? this.isFixed
                  ? ((this.isFixed = !1),
                    this.animation && c > this.topOffset
                      ? (tn.cancel(this.$el),
                        tn.out(this.$el, this.animation).then(function () {
                          return n.hide();
                        }, Q))
                      : this.hide())
                  : tn.inProgress(this.$el) &&
                    c < e &&
                    (tn.cancel(this.$el), this.hide())
                : this.isFixed
                ? this.update()
                : this.animation
                ? (tn.cancel(this.$el),
                  this.show(),
                  tn.in(this.$el, this.animation).catch(Q))
                : this.show()));
        },
        events: ["resize", "scroll"],
      },
    ],
    methods: {
      show() {
        (this.isFixed = !0), this.update(), (this.placeholder.hidden = !1);
      },
      hide() {
        (this.isActive = !1),
          Be(this.$el, this.clsFixed, this.clsBelow),
          We(this.$el, { position: "", top: "", width: "" }),
          (this.placeholder.hidden = !0);
      },
      update() {
        let t = 0 !== this.top || this.scroll > this.top,
          e = Math.max(0, this.offset);
        N(this.bottom) &&
          this.scroll > this.bottom - this.offset &&
          (e = this.bottom - this.scroll),
          We(this.$el, { position: "fixed", top: e + "px", width: this.width }),
          (this.isActive = t),
          Pe(this.$el, this.clsBelow, this.scroll > this.bottomOffset),
          ze(this.$el, this.clsFixed);
      },
    },
  };
  function ur(t, e) {
    var n = e.$props,
      i = e.$el,
      e = e[t + "Offset"],
      t = n[t];
    if (t)
      return z(t) && t.match(/^-?\d/)
        ? e + dn(t)
        : rn(!0 === t ? Et(i) : Pt(t, i)).bottom;
  }
  var o = {
      args: "src",
      props: {
        id: Boolean,
        icon: String,
        src: String,
        style: String,
        width: Number,
        height: Number,
        ratio: Number,
        class: String,
        strokeAnimation: Boolean,
        focusable: Boolean,
        attributes: "list",
      },
      data: {
        ratio: 1,
        include: ["style", "class", "focusable"],
        class: "",
        strokeAnimation: !1,
      },
      beforeConnect() {
        this.class += " mod-svg";
      },
      connected() {
        let t,
          n = this;
        !this.icon &&
          w(this.src, "#") &&
          ((t = this.src.split("#")), (this.src = t[0]), (this.icon = t[1])),
          (this.svg = this.getSvg().then(function (t) {
            if (n._connected) {
              const e = (function (t, e) {
                if (kt(e) || "CANVAS" === e.tagName) {
                  e.hidden = !0;
                  var n = e.nextElementSibling;
                  return fr(t, n) ? n : xe(e, t);
                }
                n = e.lastElementChild;
                return fr(t, n) ? n : we(e, t);
              })(t, n.$el);
              return (
                n.svgEl && e !== n.svgEl && ke(n.svgEl),
                n.applyAttributes(e, t),
                n.$emit(),
                (n.svgEl = e)
              );
            }
          }, Q));
      },
      disconnected() {
        const e = this;
        this.svg.then(function (t) {
          e._connected ||
            (kt(e.$el) && (e.$el.hidden = !1), ke(t), (e.svgEl = null));
        }),
          (this.svg = null);
      },
      update: {
        read() {
          return !!(this.strokeAnimation && this.svgEl && $t(this.svgEl));
        },
        write() {
          let t, e;
          (t = this.svgEl),
            (e = dr(t)) && t.style.setProperty("--mod-animation-stroke", e);
        },
        type: ["resize"],
      },
      methods: {
        getSvg() {
          const e = this;
          return cr(this.src).then(function (t) {
            return (
              (function (t, e) {
                e &&
                  w(t, "<symbol") &&
                  (t =
                    (function (t, e) {
                      if (!lr[t]) {
                        let n;
                        for (lr[t] = {}, hr.lastIndex = 0; (n = hr.exec(t)); )
                          lr[t][n[3]] =
                            '<svg xmlns="http://www.w3.org/2000/svg"' +
                            n[1] +
                            "svg>";
                      }
                      return lr[t][e];
                    })(t, e) || t);
                return (
                  (t = _e(t.substr(t.indexOf("<svg")))) &&
                  t.hasChildNodes() &&
                  t
                );
              })(t, e.icon) || ce.reject("SVG not found.")
            );
          });
        },
        applyAttributes(n, e) {
          let t,
            i,
            r = this;
          for (t in this.$options.props)
            w(this.include, t) && t in this && ot(n, t, this[t]);
          for (i in this.attributes) {
            var o = this.attributes[i].split(":", 2),
              s = o[0],
              o = o[1];
            ot(n, s, o);
          }
          this.id || at(n, "id");
          let a = ["width", "height"],
            u = a.map(function (t) {
              return r[t];
            });
          u.some(function (t) {
            return t;
          }) ||
            (u = a.map(function (t) {
              return ot(e, t);
            }));
          const c = ot(e, "viewBox");
          (u =
            c &&
            !u.some(function (t) {
              return t;
            })
              ? c.split(" ").slice(2)
              : u).forEach(function (t, e) {
            return ot(n, a[e], L(t) * r.ratio || null);
          });
        },
      },
    },
    cr = rt(function (n) {
      return new ce(function (e, t) {
        n
          ? g(n, "data:")
            ? e(decodeURIComponent(n.split(",")[1]))
            : pe(n).then(
                function (t) {
                  return e(t.response);
                },
                function () {
                  return t("SVG not found.");
                }
              )
          : t();
      });
    });
  var hr = /<symbol([^]*?id=(['"])(.+?)\2[^]*?<\/)symbol>/g,
    lr = {};
  function dr(t) {
    return Math.ceil(
      Math.max.apply(
        Math,
        [0].concat(
          Ae("[stroke]", t).map(function (t) {
            try {
              return t.getTotalLength();
            } catch (t) {
              return 0;
            }
          })
        )
      )
    );
  }
  function fr(t, e) {
    return pr(t) && pr(e) && mr(t) === mr(e);
  }
  function pr(t) {
    return t && "svg" === t.tagName;
  }
  function mr(t) {
    return (
      t.innerHTML ||
      new XMLSerializer()
        .serializeToString(t)
        .replace(/<svg.*?>(.*?)<\/svg>/g, "$1")
    ).replace(/\s/g, "");
  }
  (l = {
    mixins: [fi],
    args: "connect",
    props: {
      connect: String,
      toggle: String,
      active: Number,
      swiping: Boolean,
    },
    data: {
      connect: "~.mod-switcher",
      toggle: "> * > :first-child",
      active: 0,
      swiping: !0,
      cls: "mod-active",
      attrItem: "mod-switcher-item",
    },
    computed: {
      connects: {
        get(t, e) {
          return Ht(t.connect, e);
        },
        watch(t) {
          const n = this;
          this.swiping && We(t, "touch-action", "pan-y pinch-zoom");
          const i = this.index();
          this.connects.forEach(function (t) {
            return Ot(t).forEach(function (t, e) {
              return Pe(t, n.cls, e === i);
            });
          });
        },
        immediate: !0,
      },
      toggles: {
        get(t, e) {
          return Ae(t.toggle, e).filter(function (t) {
            return !At(t, ".mod-disabled *, .mod-disabled, [disabled]");
          });
        },
        watch(t) {
          const e = this.index();
          this.show(~e ? e : t[this.active] || t[0]);
        },
        immediate: !0,
      },
      children() {
        const t = this;
        return Ot(this.$el).filter(function (e) {
          return t.toggles.some(function (t) {
            return Bt(t, e);
          });
        });
      },
    },
    events: [
      {
        name: "click",
        delegate() {
          return this.toggle;
        },
        handler(t) {
          t.preventDefault(), this.show(t.current);
        },
      },
      {
        name: "click",
        el() {
          return this.connects;
        },
        delegate() {
          return "[" + this.attrItem + "],[data-" + this.attrItem + "]";
        },
        handler(t) {
          t.preventDefault(), this.show(ut(t.current, this.attrItem));
        },
      },
      {
        name: "swipeRight swipeLeft",
        filter() {
          return this.swiping;
        },
        el() {
          return this.connects;
        },
        handler(t) {
          t = t.type;
          this.show(u(t, "Left") ? "next" : "previous");
        },
      },
    ],
    methods: {
      index() {
        const e = this;
        return x(this.children, function (t) {
          return De(t, e.cls);
        });
      },
      show(t) {
        const n = this,
          i = this.index(),
          r = it(this.children[it(t, this.toggles, i)], Ot(this.$el));
        i !== r &&
          (this.children.forEach(function (t, e) {
            Pe(t, n.cls, r === e), ot(n.toggles[e], "aria-expanded", r === e);
          }),
          this.connects.forEach(function (t) {
            const e = t.children;
            return n
              .toggleElement(
                W(e).filter(function (t) {
                  return De(t, n.cls);
                }),
                !1,
                0 <= i
              )
              .then(function () {
                return n.toggleElement(e[r], !0, 0 <= i);
              });
          }));
      },
    },
  }),
    (t = {
      mixins: [di],
      extends: l,
      props: { media: Boolean },
      data: { media: 960, attrItem: "mod-tab-item" },
      connected() {
        const t = De(this.$el, "mod-tab-left")
          ? "mod-tab-left"
          : !!De(this.$el, "mod-tab-right") && "mod-tab-right";
        t &&
          this.$create("toggle", this.$el, {
            cls: t,
            mode: "media",
            media: this.media,
          });
      },
    }),
    (dt = {
      mixins: [sr, fi],
      args: "target",
      props: { href: String, target: null, mode: "list", queued: Boolean },
      data: { href: !1, target: !1, mode: "click", queued: !0 },
      computed: {
        target: {
          get(t, e) {
            var n = t.href,
              t = t.target;
            return ((t = Ht(t || n, e)).length && t) || [e];
          },
          watch() {
            this.updateAria();
          },
          immediate: !0,
        },
      },
      events: [
        {
          name: wt + " " + bt,
          filter() {
            return w(this.mode, "hover");
          },
          handler(t) {
            se(t) || this.toggle("toggle" + (t.type === wt ? "show" : "hide"));
          },
        },
        {
          name: "click",
          filter() {
            return w(this.mode, "click") || (pt && w(this.mode, "hover"));
          },
          handler(t) {
            let e;
            (zt(t.target, 'a[href="#"], a[href=""]') ||
              ((e = zt(t.target, "a[href]")) &&
                (!gr(this.target, this.cls) ||
                  (e.hash && At(this.target, e.hash))))) &&
              t.preventDefault(),
              this.toggle();
          },
        },
        {
          name: "toggled",
          self: !0,
          el() {
            return this.target;
          },
          handler(t, e) {
            this.updateAria(e);
          },
        },
      ],
      update: {
        read() {
          return (
            !(!w(this.mode, "media") || !this.media) && {
              match: this.matchMedia,
            }
          );
        },
        write(t) {
          var e = t.match,
            t = this.isToggled(this.target);
          (e ? !t : t) && this.toggle();
        },
        events: ["resize"],
      },
      methods: {
        toggle(t) {
          const n = this;
          if (Qt(this.target, t || "toggle", [this])) {
            if (!this.queued) return this.toggleElement(this.target);
            let e,
              i = this.target.filter(function (t) {
                return De(t, n.clsLeave);
              });
            i.length
              ? this.target.forEach(function (t) {
                  const e = w(i, t);
                  n.toggleElement(t, e, e);
                })
              : ((e = this.target.filter(this.isToggled)),
                this.toggleElement(e, !1).then(function () {
                  return n.toggleElement(
                    n.target.filter(function (t) {
                      return !w(e, t);
                    }),
                    !0
                  );
                }));
          }
        },
        updateAria(t) {
          ot(this.$el, "aria-expanded", M(t) ? t : gr(this.target, this.cls));
        },
      },
    });
  function gr(t, e) {
    return e ? De(t, e.split(" ")[0]) : $t(t);
  }
  var vr,
    wr,
    br,
    xr = {
      spinner:
        '<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"/></svg>',
      totop:
        '<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "/></svg>',
      marker:
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"/><rect x="4" y="9" width="11" height="1"/></svg>',
      "close-icon":
        '<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"/></svg>',
      "close-large":
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"/><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"/></svg>',
      "navbar-toggle-icon":
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"/><rect y="3" width="20" height="2"/><rect y="15" width="20" height="2"/></svg>',
      "overlay-icon":
        '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"/><rect x="0" y="19" width="40" height="1"/></svg>',
      "pagination-next":
        '<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"/></svg>',
      "pagination-previous":
        '<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"/></svg>',
      "search-icon":
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',
      "search-large":
        '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"/><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"/></svg>',
      "search-navbar":
        '<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',
      "slidenav-next":
        '<svg width="14" height="24" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "/></svg>',
      "slidenav-next-large":
        '<svg width="25" height="40" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "/></svg>',
      "slidenav-previous":
        '<svg width="14" height="24" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "/></svg>',
      "slidenav-previous-large":
        '<svg width="25" height="40" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "/></svg>',
    },
    ft = {
      args: !1,
      extends: {
        install(r) {
          r.icon.add = function (t, e) {
            let n,
              i = z(t) ? (((n = {})[t] = e), n) : t;
            X(i, function (t, e) {
              (xr[e] = t), delete yr[e];
            }),
              r._initialized &&
                Ce(document.body, function (t) {
                  return X(r.getComponents(t), function (t) {
                    t.$options.isIcon && t.icon in i && t.$reset();
                  });
                });
          };
        },
        extends: o,
        args: "icon",
        props: ["icon"],
        data: { include: ["focusable"] },
        isIcon: !0,
        beforeConnect() {
          ze(this.$el, "mod-icon");
        },
        methods: {
          getSvg() {
            const t = (function (t) {
              if (!xr[t]) return null;
              yr[t] ||
                (yr[t] = _e(
                  (
                    xr[
                      (function (t) {
                        return lt
                          ? U(U(t, "left", "right"), "previous", "next")
                          : t;
                      })(t)
                    ] || xr[t]
                  ).trim()
                ));
              return yr[t].cloneNode(!0);
            })(this.icon);
            return t ? ce.resolve(t) : ce.reject("Icon not found.");
          },
        },
      },
      data(t) {
        return { icon: d(t.constructor.options.name) };
      },
      beforeConnect() {
        ze(this.$el, this.$name);
      },
    },
    Ct = {
      extends: ft,
      beforeConnect() {
        ze(this.$el, "mod-slidenav");
      },
      computed: {
        icon(t, e) {
          t = t.icon;
          return De(e, "mod-slidenav-large") ? t + "-large" : t;
        },
      },
    },
    fe = {
      extends: ft,
      computed: {
        icon(t, e) {
          t = t.icon;
          return De(e, "mod-search-icon") && Nt(e, ".mod-search-large").length
            ? "search-large"
            : Nt(e, ".mod-search-navbar").length
            ? "search-navbar"
            : t;
        },
      },
    },
    Kn = {
      extends: ft,
      computed: {
        icon() {
          return (
            "close-" + (De(this.$el, "mod-close-large") ? "large" : "icon")
          );
        },
      },
    },
    Mi = {
      extends: ft,
      connected() {
        const e = this;
        this.svg.then(function (t) {
          return (
            t &&
            1 !== e.ratio &&
            We(_e("circle", t), "strokeWidth", 1 / e.ratio)
          );
        });
      },
    },
    yr = {};
  function kr(t) {
    for (var e = t.addedNodes, n = t.removedNodes, i = 0; i < e.length; i++)
      Ce(e[i], wr);
    for (let r = 0; r < n.length; r++) Ce(n[r], br);
  }
  function $r(t) {
    var e = t.target,
      n = t.attributeName,
      t = ai(n);
    t &&
      t in vr &&
      (st(e, n) ? vr[t](e) : (t = vr.getComponent(e, t)) && t.$destroy());
  }
  X(
    Object.freeze({
      __proto__: null,
      Accordion: mi,
      Alert: vi,
      Cover: bi,
      Drop: ki,
      Dropdown: ki,
      FormCustom: $i,
      Gif: Si,
      Grid: _i,
      HeightMatch: zi,
      HeightViewport: Oi,
      Img: Di,
      Margin: Ii,
      Modal: Ji,
      Offcanvas: Zi,
      OverflowAuto: tr,
      Responsive: er,
      Scroll: nr,
      Scrollspy: rr,
      ScrollspyNav: or,
      Sticky: ar,
      Svg: o,
      Switcher: l,
      Tab: t,
      Toggle: dt,
      Video: wi,
      Close: Kn,
      Spinner: Mi,
      SlidenavNext: Ct,
      SlidenavPrevious: Ct,
      SearchIcon: fe,
      Marker: ft,
      NavbarToggleIcon: ft,
      OverlayIcon: ft,
      PaginationNext: ft,
      PaginationPrevious: ft,
      Totop: ft,
    }),
    function (t, e) {
      return Jn.component(e, t);
    }
  ),
    (wr = (vr = Jn).connect),
    (br = vr.disconnect),
    ct &&
      window.MutationObserver &&
      pn.read(function () {
        document.body && Ce(document.body, wr),
          new MutationObserver(function (t) {
            return t.forEach(kr);
          }).observe(document, { childList: !0, subtree: !0 }),
          new MutationObserver(function (t) {
            return t.forEach($r);
          }).observe(document, { attributes: !0, subtree: !0 }),
          (vr._initialized = !0);
      });
  t = {
    mixins: [di],
    props: { date: String, clsWrapper: String },
    data: { date: "", clsWrapper: ".mod-countdown-%unit%" },
    computed: {
      date(t) {
        t = t.date;
        return Date.parse(t);
      },
      days(t, e) {
        return _e(t.clsWrapper.replace("%unit%", "days"), e);
      },
      hours(t, e) {
        return _e(t.clsWrapper.replace("%unit%", "hours"), e);
      },
      minutes(t, e) {
        return _e(t.clsWrapper.replace("%unit%", "minutes"), e);
      },
      seconds(t, e) {
        return _e(t.clsWrapper.replace("%unit%", "seconds"), e);
      },
      units() {
        const e = this;
        return ["days", "hours", "minutes", "seconds"].filter(function (t) {
          return e[t];
        });
      },
    },
    connected() {
      this.start();
    },
    disconnected() {
      const e = this;
      this.stop(),
        this.units.forEach(function (t) {
          return ge(e[t]);
        });
    },
    events: [
      {
        name: "visibilitychange",
        el() {
          return document;
        },
        handler() {
          document.hidden ? this.stop() : this.start();
        },
      },
    ],
    update: {
      write() {
        const i = this,
          r = (function (t) {
            t -= Date.now();
            return {
              total: t,
              seconds: (t / 1e3) % 60,
              minutes: (t / 1e3 / 60) % 60,
              hours: (t / 1e3 / 60 / 60) % 24,
              days: t / 1e3 / 60 / 60 / 24,
            };
          })(this.date);
        r.total <= 0 &&
          (this.stop(), (r.days = r.hours = r.minutes = r.seconds = 0)),
          this.units.forEach(function (t) {
            var e = (e = String(Math.floor(r[t]))).length < 2 ? "0" + e : e,
              n = i[t];
            n.textContent !== e &&
              ((e = e.split("")).length !== n.children.length &&
                ve(
                  n,
                  e
                    .map(function () {
                      return "<span></span>";
                    })
                    .join("")
                ),
              e.forEach(function (t, e) {
                return (n.children[e].textContent = t);
              }));
          });
      },
    },
    methods: {
      start() {
        this.stop(),
          this.date &&
            this.units.length &&
            (this.$update(), (this.timer = setInterval(this.$update, 1e3)));
      },
      stop() {
        this.timer && (clearInterval(this.timer), (this.timer = null));
      },
    },
  };
  const Sr = "mod-transition-leave",
    Ir = "mod-transition-enter";
  function Er(t, s, a, u) {
    void 0 === u && (u = 0);
    var c = Tr(s, !0),
      h = { opacity: 1 },
      l = { opacity: 0 },
      e = function (t) {
        return function () {
          return c === Tr(s) ? t() : ce.reject();
        };
      },
      n = e(function () {
        return (
          ze(s, Sr),
          ce
            .all(
              _r(s).map(function (e, n) {
                return new ce(function (t) {
                  return setTimeout(function () {
                    return Ke.start(e, l, a / 2, "ease").then(t);
                  }, n * u);
                });
              })
            )
            .then(function () {
              return Be(s, Sr);
            })
        );
      }),
      e = e(function () {
        const o = an(s);
        return (
          ze(s, Ir),
          t(),
          We(Ot(s), { opacity: 0 }),
          new ce(function (r) {
            return requestAnimationFrame(function () {
              const t = Ot(s),
                e = an(s);
              We(s, "alignContent", "flex-start"), an(s, o);
              const n = _r(s);
              We(t, l);
              const i = n.map(function (e, n) {
                return new ce(function (t) {
                  return setTimeout(function () {
                    return Ke.start(e, h, a / 2, "ease").then(t);
                  }, n * u);
                });
              });
              o !== e &&
                i.push(
                  Ke.start(s, { height: e }, a / 2 + n.length * u, "ease")
                ),
                ce.all(i).then(function () {
                  Be(s, Ir),
                    c === Tr(s) &&
                      (We(s, { height: "", alignContent: "" }),
                      We(t, { opacity: "" }),
                      delete s.dataset.transition),
                    r();
                });
            });
          })
        );
      });
    return (De(s, Sr) ? Cr(s) : De(s, Ir) ? Cr(s).then(n) : n()).then(e);
  }
  function Tr(t, e) {
    return (
      e && (t.dataset.transition = 1 + Tr(t)), H(t.dataset.transition) || 0
    );
  }
  function Cr(t) {
    return ce.all(
      Ot(t)
        .filter(Ke.inProgress)
        .map(function (e) {
          return new ce(function (t) {
            return Zt(e, "transitionend transitioncanceled", t);
          });
        })
    );
  }
  function _r(t) {
    return Ei(Ot(t)).reduce(function (t, e) {
      return t.concat(
        K(
          e.filter(function (t) {
            return Pn(t);
          }),
          "offsetLeft"
        )
      );
    }, []);
  }
  function Ar(t, d, f) {
    return new ce(function (l) {
      return requestAnimationFrame(function () {
        let u = Ot(d),
          c = u.map(function (t) {
            return Mr(t, !0);
          }),
          h = We(d, ["height", "padding"]);
        Ke.cancel(d),
          u.forEach(Ke.cancel),
          zr(d),
          t(),
          (u = u.concat(
            Ot(d).filter(function (t) {
              return !w(u, t);
            })
          )),
          ce.resolve().then(function () {
            pn.flush();
            var n,
              i,
              r,
              t,
              e,
              o = We(d, ["height", "padding"]),
              e =
                ((n = d),
                (r = c),
                (t = (i = u).map(function (t, e) {
                  return (
                    !!(Et(t) && e in r) &&
                    (r[e]
                      ? $t(t)
                        ? Br(t)
                        : { opacity: 0 }
                      : { opacity: $t(t) ? 1 : 0 })
                  );
                })),
                (e = t.map(function (t, e) {
                  e = Et(i[e]) === n && (r[e] || Mr(i[e]));
                  return (
                    !!e &&
                    (t
                      ? "opacity" in t ||
                        (e.opacity % 1 ? (t.opacity = 1) : delete e.opacity)
                      : delete e.opacity,
                    e)
                  );
                })),
                [t, e]),
              s = e[0],
              a = e[1];
            u.forEach(function (t, e) {
              return a[e] && We(t, a[e]);
            }),
              We(d, Y({ display: "block" }, h)),
              requestAnimationFrame(function () {
                const t = u
                  .map(function (t, e) {
                    return Et(t) === d && Ke.start(t, s[e], f, "ease");
                  })
                  .concat(Ke.start(d, o, f, "ease"));
                ce.all(t)
                  .then(function () {
                    u.forEach(function (t, e) {
                      return (
                        Et(t) === d &&
                        We(t, "display", 0 === s[e].opacity ? "none" : "")
                      );
                    }),
                      zr(d);
                  }, Q)
                  .then(l);
              });
          });
      });
    });
  }
  function Mr(t, e) {
    const n = We(t, "zIndex");
    return (
      !!$t(t) &&
      Y(
        {
          display: "",
          opacity: e ? We(t, "opacity") : "0",
          pointerEvents: "none",
          position: "absolute",
          zIndex: "auto" === n ? Dt(t) : n,
        },
        Br(t)
      )
    );
  }
  function zr(t) {
    We(t.children, {
      height: "",
      left: "",
      opacity: "",
      pointerEvents: "",
      position: "",
      top: "",
      marginTop: "",
      marginLeft: "",
      transform: "",
      width: "",
      zIndex: "",
    }),
      We(t, { height: "", display: "", padding: "" });
  }
  function Br(t) {
    var e = rn(t),
      n = e.height,
      i = e.width,
      r = on(t),
      e = r.top,
      r = r.left,
      t = We(t, ["marginTop", "marginLeft"]);
    return {
      top: e,
      left: r,
      height: n,
      width: i,
      marginLeft: t.marginLeft,
      marginTop: t.marginTop,
      transform: "",
    };
  }
  (dt = {
    props: { duration: Number, animation: Boolean },
    data: { duration: 150, animation: "slide" },
    methods: {
      animate(t, e) {
        const n = this;
        void 0 === e && (e = this.$el);
        const i = this.animation;
        return ("fade" === i
          ? Er
          : "delayed-fade" === i
          ? function () {
              for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e];
              return Er.apply(void 0, t.concat([40]));
            }
          : Ar)(t, e, this.duration).then(function () {
          return n.$update(e, "resize");
        }, Q);
      },
    },
  }),
    (wi = {
      mixins: [dt],
      args: "target",
      props: { target: Boolean, selActive: Boolean },
      data: {
        target: null,
        selActive: !1,
        attrItem: "mod-filter-control",
        cls: "mod-active",
        duration: 250,
      },
      computed: {
        toggles: {
          get(t, e) {
            t = t.attrItem;
            return Ae("[" + t + "],[data-" + t + "]", e);
          },
          watch() {
            let e,
              n = this;
            this.updateState(),
              !1 !== this.selActive &&
                ((e = Ae(this.selActive, this.$el)),
                this.toggles.forEach(function (t) {
                  return Pe(t, n.cls, w(e, t));
                }));
          },
          immediate: !0,
        },
        children: {
          get(t, e) {
            return Ae(t.target + " > *", e);
          },
          watch(t, e) {
            let n;
            e &&
              ((n = e),
              (t = t).length !== n.length ||
                !t.every(function (t) {
                  return ~n.indexOf(t);
                })) &&
              this.updateState();
          },
          immediate: !0,
        },
      },
      events: [
        {
          name: "click",
          delegate() {
            return "[" + this.attrItem + "],[data-" + this.attrItem + "]";
          },
          handler(t) {
            t.preventDefault(), this.apply(t.current);
          },
        },
      ],
      methods: {
        apply(t) {
          var e,
            n,
            i = this.getState(),
            t = Or(t, this.attrItem, this.getState());
          (e = i),
            (n = t),
            ["filter", "sort"].every(function (t) {
              return q(e[t], n[t]);
            }) || this.setState(t);
        },
        getState() {
          const n = this;
          return this.toggles
            .filter(function (t) {
              return De(t, n.cls);
            })
            .reduce(
              function (t, e) {
                return Or(e, n.attrItem, t);
              },
              { filter: { "": "" }, sort: [] }
            );
        },
        setState(n, i) {
          const r = this;
          void 0 === i && (i = !0),
            (n = Y({ filter: { "": "" }, sort: [] }, n)),
            Qt(this.$el, "beforeFilter", [this, n]),
            this.toggles.forEach(function (t) {
              return Pe(
                t,
                r.cls,
                !!(function (t, e, n) {
                  let i = n.filter;
                  void 0 === i && (i = { "": "" });
                  var r = n.sort,
                    o = r[0],
                    s = r[1],
                    n = Nr(t, e),
                    r = n.filter;
                  void 0 === r && (r = "");
                  t = n.group;
                  void 0 === t && (t = "");
                  (e = n.sort), (n = n.order);
                  void 0 === n && (n = "asc");
                  return D(e)
                    ? (t in i && r === i[t]) || (!r && t && !(t in i) && !i[""])
                    : o === e && s === n;
                })(t, r.attrItem, n)
              );
            }),
            ce
              .all(
                Ae(this.target, this.$el).map(function (t) {
                  function e() {
                    !(function (t, e, n) {
                      const i = (function (t) {
                        var t = t.filter,
                          e = "";
                        return (
                          X(t, function (t) {
                            return (e += t || "");
                          }),
                          e
                        );
                      })(t);
                      n.forEach(function (t) {
                        return We(t, "display", i && !At(t, i) ? "none" : "");
                      });
                      var t = (r = t.sort)[0],
                        r = r[1];
                      t &&
                        (q(
                          (r = (function (t, n, i) {
                            return Y([], t).sort(function (t, e) {
                              return (
                                ut(t, n).localeCompare(ut(e, n), void 0, {
                                  numeric: !0,
                                }) * ("asc" === i || -1)
                              );
                            });
                          })(n, t, r)),
                          n
                        ) ||
                          we(e, r));
                    })(n, t, Ot(t)),
                      r.$update(r.$el);
                  }
                  return i ? r.animate(e, t) : e();
                })
              )
              .then(function () {
                return Qt(r.$el, "afterFilter", [r]);
              });
        },
        updateState() {
          const t = this;
          pn.write(function () {
            return t.setState(t.getState(), !1);
          });
        },
      },
    });
  function Nr(t, e) {
    return In(ut(t, e), ["filter"]);
  }
  function Or(t, e, n) {
    var i = Nr(t, e),
      r = i.filter,
      t = i.group,
      e = i.sort,
      i = i.order;
    return (
      void 0 === i && (i = "asc"),
      (r || D(e)) &&
        (t
          ? r
            ? (delete n.filter[""], (n.filter[t] = r))
            : (delete n.filter[t],
              (O(n.filter) || "" in n.filter) && (n.filter = { "": r || "" }))
          : (n.filter = { "": r || "" })),
      D(e) || (n.sort = [e, i]),
      n
    );
  }
  Kn = {
    slide: {
      show(t) {
        return [{ transform: Pr(-100 * t) }, { transform: Pr() }];
      },
      percent: Dr,
      translate(t, e) {
        return [
          { transform: Pr(-100 * e * t) },
          { transform: Pr(100 * e * (1 - t)) },
        ];
      },
    },
  };
  function Dr(t) {
    return Math.abs(We(t, "transform").split(",")[4] / t.offsetWidth) || 0;
  }
  function Pr(t, e) {
    return (
      void 0 === t && (t = 0),
      void 0 === e && (e = "%"),
      (t += t ? e : ""),
      ht ? "translateX(" + t + ")" : "translate3d(" + t + ", 0, 0)"
    );
  }
  function Hr(t) {
    return "scale3d(" + t + ", " + t + ", 1)";
  }
  const Lr = Y({}, Kn, {
    fade: {
      show() {
        return [{ opacity: 0 }, { opacity: 1 }];
      },
      percent(t) {
        return 1 - We(t, "opacity");
      },
      translate(t) {
        return [{ opacity: 1 - t }, { opacity: t }];
      },
    },
    scale: {
      show() {
        return [
          { opacity: 0, transform: Hr(0.8) },
          { opacity: 1, transform: Hr(1) },
        ];
      },
      percent(t) {
        return 1 - We(t, "opacity");
      },
      translate(t) {
        return [
          { opacity: 1 - t, transform: Hr(1 - 0.2 * t) },
          { opacity: t, transform: Hr(0.8 + 0.2 * t) },
        ];
      },
    },
  });
  function jr(t, e, n) {
    Qt(t, te(e, !1, !1, n));
  }
  Mi = {
    mixins: [
      {
        props: {
          autoplay: Boolean,
          autoplayInterval: Number,
          pauseOnHover: Boolean,
        },
        data: { autoplay: !1, autoplayInterval: 7e3, pauseOnHover: !0 },
        connected() {
          this.autoplay && this.startAutoplay();
        },
        disconnected() {
          this.stopAutoplay();
        },
        update() {
          ot(this.slides, "tabindex", "-1");
        },
        events: [
          {
            name: "visibilitychange",
            el() {
              return document;
            },
            filter() {
              return this.autoplay;
            },
            handler() {
              document.hidden ? this.stopAutoplay() : this.startAutoplay();
            },
          },
        ],
        methods: {
          startAutoplay() {
            const t = this;
            this.stopAutoplay(),
              (this.interval = setInterval(function () {
                return (
                  (!t.draggable || !_e(":focus", t.$el)) &&
                  (!t.pauseOnHover || !At(t.$el, ":hover")) &&
                  !t.stack.length &&
                  t.show("next")
                );
              }, this.autoplayInterval));
          },
          stopAutoplay() {
            this.interval && clearInterval(this.interval);
          },
        },
      },
      {
        props: { draggable: Boolean },
        data: { draggable: !0, threshold: 10 },
        created() {
          const i = this;
          ["start", "move", "end"].forEach(function (t) {
            const n = i[t];
            i[t] = function (t) {
              const e = ae(t).x * (lt ? -1 : 1);
              (i.prevPos = e !== i.pos ? i.pos : i.prevPos), (i.pos = e), n(t);
            };
          });
        },
        events: [
          {
            name: mt,
            delegate() {
              return this.selSlides;
            },
            handler(t) {
              let e;
              !this.draggable ||
                (!se(t) &&
                  !(e = t.target).children.length &&
                  e.childNodes.length) ||
                zt(t.target, St) ||
                0 < t.button ||
                this.length < 2 ||
                this.start(t);
            },
          },
          {
            name: "dragstart",
            handler(t) {
              t.preventDefault();
            },
          },
        ],
        methods: {
          start() {
            (this.drag = this.pos),
              this._transitioner
                ? ((this.percent = this._transitioner.percent()),
                  (this.drag +=
                    this._transitioner.getDistance() * this.percent * this.dir),
                  this._transitioner.cancel(),
                  this._transitioner.translate(this.percent),
                  (this.dragging = !0),
                  (this.stack = []))
                : (this.prevIndex = this.index),
              Kt(document, gt, this.move, { passive: !1 }),
              Kt(document, vt + " " + xt + " input", this.end, !0),
              We(this.list, "userSelect", "none");
          },
          move(t) {
            var e = this,
              n = this.pos - this.drag;
            if (
              !(
                0 == n ||
                this.prevPos === this.pos ||
                (!this.dragging && Math.abs(n) < this.threshold)
              )
            ) {
              We(this.list, "pointerEvents", "none"),
                t.cancelable && t.preventDefault(),
                (this.dragging = !0),
                (this.dir = n < 0 ? 1 : -1);
              for (
                var i = this.slides,
                  r = this.prevIndex,
                  o = Math.abs(n),
                  s = this.getIndex(r + this.dir, r),
                  a = this._getDistance(r, s) || i[r].offsetWidth;
                s !== r && a < o;

              )
                (this.drag -= a * this.dir),
                  (r = s),
                  (o -= a),
                  (s = this.getIndex(r + this.dir, r)),
                  (a = this._getDistance(r, s) || i[r].offsetWidth);
              this.percent = o / a;
              var u,
                c = i[r],
                t = i[s],
                n = this.index !== s,
                h = r === s;
              [this.index, this.prevIndex]
                .filter(function (t) {
                  return !w([s, r], t);
                })
                .forEach(function (t) {
                  Qt(i[t], "itemhidden", [e]),
                    h && ((u = !0), (e.prevIndex = r));
                }),
                ((this.index === r && this.prevIndex !== r) || u) &&
                  Qt(i[this.index], "itemshown", [this]),
                n &&
                  ((this.prevIndex = r),
                  (this.index = s),
                  h || Qt(c, "beforeitemhide", [this]),
                  Qt(t, "beforeitemshow", [this])),
                (this._transitioner = this._translate(
                  Math.abs(this.percent),
                  c,
                  !h && t
                )),
                n &&
                  (h || Qt(c, "itemhide", [this]), Qt(t, "itemshow", [this]));
            }
          },
          end() {
            let t;
            Jt(document, gt, this.move, { passive: !1 }),
              Jt(document, vt + " " + xt + " input", this.end, !0),
              this.dragging &&
                ((this.dragging = null),
                this.index === this.prevIndex
                  ? ((this.percent = 1 - this.percent),
                    (this.dir *= -1),
                    this._show(!1, this.index, !0),
                    (this._transitioner = null))
                  : ((t =
                      (lt ? this.dir * (lt ? 1 : -1) : this.dir) < 0 ==
                      this.prevPos > this.pos),
                    (this.index = t ? this.index : this.prevIndex),
                    t && (this.percent = 1 - this.percent),
                    this.show(
                      (0 < this.dir && !t) || (this.dir < 0 && t)
                        ? "next"
                        : "previous",
                      !0
                    ))),
              We(this.list, { userSelect: "", pointerEvents: "" }),
              (this.drag = this.percent = null);
          },
        },
      },
      {
        data: { selNav: !1 },
        computed: {
          nav(t, e) {
            return _e(t.selNav, e);
          },
          selNavItem(t) {
            t = t.attrItem;
            return "[" + t + "],[data-" + t + "]";
          },
          navItems(t, e) {
            return Ae(this.selNavItem, e);
          },
        },
        update: {
          write() {
            const n = this;
            this.nav &&
              this.length !== this.nav.children.length &&
              ve(
                this.nav,
                this.slides
                  .map(function (t, e) {
                    return (
                      "<li " + n.attrItem + '="' + e + '"><a href></a></li>'
                    );
                  })
                  .join("")
              ),
              this.navItems.concat(this.nav).forEach(function (t) {
                return t && (t.hidden = !n.maxIndex);
              }),
              this.updateNav();
          },
          events: ["resize"],
        },
        events: [
          {
            name: "click",
            delegate() {
              return this.selNavItem;
            },
            handler(t) {
              t.preventDefault(), this.show(ut(t.current, this.attrItem));
            },
          },
          { name: "itemshow", handler: "updateNav" },
        ],
        methods: {
          updateNav() {
            const n = this,
              i = this.getValidIndex();
            this.navItems.forEach(function (t) {
              const e = ut(t, n.attrItem);
              Pe(t, n.clsActive, H(e) === i),
                Pe(
                  t,
                  "mod-invisible",
                  n.finite &&
                    (("previous" === e && 0 === i) ||
                      ("next" === e && i >= n.maxIndex))
                );
            });
          },
        },
      },
    ],
    props: {
      clsActivated: Boolean,
      easing: String,
      index: Number,
      finite: Boolean,
      velocity: Number,
      selSlides: String,
    },
    data() {
      return {
        easing: "ease",
        finite: !1,
        velocity: 1,
        index: 0,
        prevIndex: -1,
        stack: [],
        percent: 0,
        clsActive: "mod-active",
        clsActivated: !1,
        Transitioner: !1,
        transitionOptions: {},
      };
    },
    connected() {
      (this.prevIndex = -1),
        (this.index = this.getValidIndex(this.$props.index)),
        (this.stack = []);
    },
    disconnected() {
      Be(this.slides, this.clsActive);
    },
    computed: {
      duration(t, e) {
        t = t.velocity;
        return Fr(e.offsetWidth / t);
      },
      list(t, e) {
        return _e(t.selList, e);
      },
      maxIndex() {
        return this.length - 1;
      },
      selSlides(t) {
        return t.selList + " " + (t.selSlides || "> *");
      },
      slides: {
        get() {
          return Ae(this.selSlides, this.$el);
        },
        watch() {
          this.$reset();
        },
      },
      length() {
        return this.slides.length;
      },
    },
    events: {
      itemshown() {
        this.$update(this.list);
      },
    },
    methods: {
      show(t, e) {
        const n = this;
        if ((void 0 === e && (e = !1), !this.dragging && this.length)) {
          const i = this.stack,
            r = e ? 0 : i.length,
            o = function () {
              i.splice(r, 1), i.length && n.show(i.shift(), !0);
            };
          if ((i[e ? "unshift" : "push"](t), !e && 1 < i.length))
            2 === i.length &&
              this._transitioner.forward(Math.min(this.duration, 200));
          else {
            let s,
              a = this.getIndex(this.index),
              u = De(this.slides, this.clsActive) && this.slides[a],
              c = this.getIndex(t, this.index),
              h = this.slides[c];
            if (u !== h) {
              if (
                ((this.dir =
                  ((s = a),
                  "next" !== (t = t) && ("previous" === t || t < s) ? -1 : 1)),
                (this.prevIndex = a),
                (this.index = c),
                (u && !Qt(u, "beforeitemhide", [this])) ||
                  !Qt(h, "beforeitemshow", [this, u]))
              )
                return (this.index = this.prevIndex), void o();
              e = this._show(u, h, e).then(function () {
                return (
                  u && Qt(u, "itemhidden", [n]),
                  Qt(h, "itemshown", [n]),
                  new ce(function (t) {
                    pn.write(function () {
                      i.shift(),
                        i.length
                          ? n.show(i.shift(), !0)
                          : (n._transitioner = null),
                        t();
                    });
                  })
                );
              });
              return (
                u && Qt(u, "itemhide", [this]), Qt(h, "itemshow", [this]), e
              );
            }
            o();
          }
        }
      },
      getIndex(t, e) {
        return (
          void 0 === t && (t = this.index),
          void 0 === e && (e = this.index),
          Z(it(t, this.slides, e, this.finite), 0, this.maxIndex)
        );
      },
      getValidIndex(t, e) {
        return (
          void 0 === t && (t = this.index),
          void 0 === e && (e = this.prevIndex),
          this.getIndex(t, e)
        );
      },
      _show(t, e, n) {
        if (
          ((this._transitioner = this._getTransitioner(
            t,
            e,
            this.dir,
            Y(
              {
                easing: n
                  ? e.offsetWidth < 600
                    ? "cubic-bezier(0.25, 0.46, 0.45, 0.94)"
                    : "cubic-bezier(0.165, 0.84, 0.44, 1)"
                  : this.easing,
              },
              this.transitionOptions
            )
          )),
          !n && !t)
        )
          return this._translate(1), ce.resolve();
        t = this.stack.length;
        return this._transitioner[1 < t ? "forward" : "show"](
          1 < t ? Math.min(this.duration, 75 + 75 / (t - 1)) : this.duration,
          this.percent
        );
      },
      _getDistance(t, e) {
        return this._getTransitioner(t, t !== e && e).getDistance();
      },
      _translate(t, e, n) {
        void 0 === e && (e = this.prevIndex), void 0 === n && (n = this.index);
        n = this._getTransitioner(e !== n && e, n);
        return n.translate(t), n;
      },
      _getTransitioner(t, e, n, i) {
        return (
          void 0 === t && (t = this.prevIndex),
          void 0 === e && (e = this.index),
          void 0 === n && (n = this.dir || 1),
          void 0 === i && (i = this.transitionOptions),
          new this.Transitioner(
            B(t) ? this.slides[t] : t,
            B(e) ? this.slides[e] : e,
            n * (lt ? -1 : 1),
            i
          )
        );
      },
    },
  };
  function Fr(t) {
    return 0.5 * t + 300;
  }
  var Ct = {
      mixins: [Mi],
      props: { animation: String },
      data: {
        animation: "slide",
        clsActivated: "mod-transition-active",
        Animations: Kn,
        Transitioner(r, o, s, t) {
          let e = t.animation,
            a = t.easing,
            n = e.percent,
            i = e.translate,
            u = (e = void 0 === (e = e.show) ? Q : e)(s),
            c = new ue();
          return {
            dir: s,
            show(t, e, n) {
              const i = this;
              void 0 === e && (e = 0);
              n = n ? "linear" : a;
              return (
                (t -= Math.round(t * Z(e, -1, 1))),
                this.translate(e),
                jr(o, "itemin", { percent: e, duration: t, timing: n, dir: s }),
                jr(r, "itemout", {
                  percent: 1 - e,
                  duration: t,
                  timing: n,
                  dir: s,
                }),
                ce
                  .all([Ke.start(o, u[1], t, n), Ke.start(r, u[0], t, n)])
                  .then(function () {
                    i.reset(), c.resolve();
                  }, Q),
                c.promise
              );
            },
            cancel() {
              Ke.cancel([o, r]);
            },
            reset() {
              for (const t in u[0]) We([o, r], t, "");
            },
            forward(t, e) {
              return (
                void 0 === e && (e = this.percent()),
                Ke.cancel([o, r]),
                this.show(t, e, !0)
              );
            },
            translate(t) {
              this.reset();
              const e = i(t, s);
              We(o, e[1]),
                We(r, e[0]),
                jr(o, "itemtranslatein", { percent: t, dir: s }),
                jr(r, "itemtranslateout", { percent: 1 - t, dir: s });
            },
            percent() {
              return n(r || o, o, s);
            },
            getDistance() {
              return r && r.offsetWidth;
            },
          };
        },
      },
      computed: {
        animation(t) {
          var e = t.animation,
            t = t.Animations;
          return Y(t[e] || t.slide, { name: e });
        },
        transitionOptions() {
          return { animation: this.animation };
        },
      },
      events: {
        "itemshow itemhide itemshown itemhidden"(t) {
          t = t.target;
          this.$update(t);
        },
        beforeitemshow(t) {
          ze(t.target, this.clsActive);
        },
        itemshown(t) {
          ze(t.target, this.clsActivated);
        },
        itemhidden(t) {
          Be(t.target, this.clsActive, this.clsActivated);
        },
      },
    },
    Wr = {
      mixins: [Yi, Xi, fi, Ct],
      functional: !0,
      props: {
        delayControls: Number,
        preload: Number,
        videoAutoplay: Boolean,
        template: String,
      },
      data() {
        return {
          preload: 1,
          videoAutoplay: !1,
          delayControls: 3e3,
          items: [],
          cls: "mod-open",
          clsPage: "mod-lightbox-page",
          selList: ".mod-lightbox-items",
          attrItem: "mod-lightbox-item",
          selClose: ".mod-close-large",
          selCaption: ".mod-lightbox-caption",
          pauseOnHover: !1,
          velocity: 2,
          Animations: Lr,
          template:
            '<div class="mod-lightbox mod-overflow-hidden"> <ul class="mod-lightbox-items"></ul> <div class="mod-lightbox-toolbar mod-position-top mod-text-right mod-transition-slide-top mod-transition-opaque"> <button class="mod-lightbox-toolbar-icon mod-close-large" type="button" mod-close></button> </div> <a class="mod-lightbox-button mod-position-center-left mod-position-medium mod-transition-fade" href mod-slidenav-previous mod-lightbox-item="previous"></a> <a class="mod-lightbox-button mod-position-center-right mod-position-medium mod-transition-fade" href mod-slidenav-next mod-lightbox-item="next"></a> <div class="mod-lightbox-toolbar mod-lightbox-caption mod-position-bottom mod-text-center mod-transition-slide-bottom mod-transition-opaque"></div> </div>',
        };
      },
      created() {
        const t = _e(this.template),
          e = _e(this.selList, t);
        this.items.forEach(function () {
          return we(e, "<li>");
        }),
          this.$mount(we(this.container, t));
      },
      computed: {
        caption(t, e) {
          return _e(t.selCaption, e);
        },
      },
      events: [
        { name: gt + " " + mt + " keydown", handler: "showControls" },
        {
          name: "click",
          self: !0,
          delegate() {
            return this.selSlides;
          },
          handler(t) {
            t.defaultPrevented || this.hide();
          },
        },
        {
          name: "shown",
          self: !0,
          handler() {
            this.showControls();
          },
        },
        {
          name: "hide",
          self: !0,
          handler() {
            this.hideControls(),
              Be(this.slides, this.clsActive),
              Ke.stop(this.slides);
          },
        },
        {
          name: "hidden",
          self: !0,
          handler() {
            this.$destroy(!0);
          },
        },
        {
          name: "keyup",
          el() {
            return document;
          },
          handler(t) {
            if (this.isToggled(this.$el) && this.draggable)
              switch (t.keyCode) {
                case 37:
                  this.show("previous");
                  break;
                case 39:
                  this.show("next");
              }
          },
        },
        {
          name: "beforeitemshow",
          handler(t) {
            this.isToggled() ||
              ((this.draggable = !1),
              t.preventDefault(),
              this.toggleElement(this.$el, !0, !1),
              (this.animation = Lr.scale),
              Be(t.target, this.clsActive),
              this.stack.splice(1, 0, this.index));
          },
        },
        {
          name: "itemshow",
          handler() {
            ve(this.caption, this.getItem().caption || "");
            for (let t = -this.preload; t <= this.preload; t++)
              this.loadItem(this.index + t);
          },
        },
        {
          name: "itemshown",
          handler() {
            this.draggable = this.$props.draggable;
          },
        },
        {
          name: "itemload",
          handler(t, n) {
            let i = this,
              r = n.source,
              e = n.type,
              o = n.alt;
            void 0 === o && (o = "");
            let s,
              a,
              u,
              c = n.poster,
              h = n.attrs;
            void 0 === h && (h = {}),
              this.setItem(n, "<span mod-spinner></span>"),
              r &&
                ((a = {
                  frameborder: "0",
                  allow: "autoplay",
                  allowfullscreen: "",
                  style: "max-width: 100%; box-sizing: border-box;",
                  "mod-responsive": "",
                  "mod-video": "" + this.videoAutoplay,
                }),
                "image" === e ||
                r.match(/\.(avif|jpe?g|a?png|gif|svg|webp)($|\?)/i)
                  ? me(r, h.srcset, h.size).then(
                      function (t) {
                        var e = t.width,
                          t = t.height;
                        return i.setItem(
                          n,
                          Vr(
                            "img",
                            Y({ src: r, width: e, height: t, alt: o }, h)
                          )
                        );
                      },
                      function () {
                        return i.setError(n);
                      }
                    )
                  : "video" === e || r.match(/\.(mp4|webm|ogv)($|\?)/i)
                  ? (Kt(
                      (u = Vr(
                        "video",
                        Y(
                          {
                            src: r,
                            poster: c,
                            controls: "",
                            playsinline: "",
                            "mod-video": "" + this.videoAutoplay,
                          },
                          h
                        )
                      )),
                      "loadedmetadata",
                      function () {
                        ot(u, { width: u.videoWidth, height: u.videoHeight }),
                          i.setItem(n, u);
                      }
                    ),
                    Kt(u, "error", function () {
                      return i.setError(n);
                    }))
                  : "iframe" === e || r.match(/\.(html|php)($|\?)/i)
                  ? this.setItem(
                      n,
                      Vr(
                        "iframe",
                        Y(
                          {
                            src: r,
                            frameborder: "0",
                            allowfullscreen: "",
                            class: "mod-lightbox-iframe",
                          },
                          h
                        )
                      )
                    )
                  : (s = r.match(
                      /\/\/(?:.*?youtube(-nocookie)?\..*?[?&]v=|youtu\.be\/)([\w-]{11})[&?]?(.*)?/
                    ))
                  ? this.setItem(
                      n,
                      Vr(
                        "iframe",
                        Y(
                          {
                            src:
                              "https://www.youtube" +
                              (s[1] || "") +
                              ".com/embed/" +
                              s[2] +
                              (s[3] ? "?" + s[3] : ""),
                            width: 1920,
                            height: 1080,
                          },
                          a,
                          h
                        )
                      )
                    )
                  : (s = r.match(/\/\/.*?vimeo\.[a-z]+\/(\d+)[&?]?(.*)?/)) &&
                    pe(
                      "https://vimeo.com/api/oembed.json?maxwidth=1920&url=" +
                        encodeURI(r),
                      { responseType: "json", withCredentials: !1 }
                    ).then(
                      function (t) {
                        var e = t.response,
                          t = e.height,
                          e = e.width;
                        return i.setItem(
                          n,
                          Vr(
                            "iframe",
                            Y(
                              {
                                src:
                                  "https://player.vimeo.com/video/" +
                                  s[1] +
                                  (s[2] ? "?" + s[2] : ""),
                                width: e,
                                height: t,
                              },
                              a,
                              h
                            )
                          )
                        );
                      },
                      function () {
                        return i.setError(n);
                      }
                    ));
          },
        },
      ],
      methods: {
        loadItem(t) {
          void 0 === t && (t = this.index);
          t = this.getItem(t);
          this.getSlide(t).childElementCount || Qt(this.$el, "itemload", [t]);
        },
        getItem(t) {
          return (
            void 0 === t && (t = this.index), this.items[it(t, this.slides)]
          );
        },
        setItem(t, e) {
          Qt(this.$el, "itemloaded", [this, ve(this.getSlide(t), e)]);
        },
        getSlide(t) {
          return this.slides[this.items.indexOf(t)];
        },
        setError(t) {
          this.setItem(t, '<span mod-icon="icon: bolt; ratio: 2"></span>');
        },
        showControls() {
          clearTimeout(this.controlsTimer),
            (this.controlsTimer = setTimeout(
              this.hideControls,
              this.delayControls
            )),
            ze(this.$el, "mod-active", "mod-transition-active");
        },
        hideControls() {
          Be(this.$el, "mod-active", "mod-transition-active");
        },
      },
    };
  function Vr(t, e) {
    t = Te("<" + t + ">");
    return ot(t, e), t;
  }
  fe = {
    install(t, e) {
      t.lightboxPanel || t.component("lightboxPanel", Wr);
      Y(e.props, t.component("lightboxPanel").options.props);
    },
    props: { toggle: String },
    data: { toggle: "a" },
    computed: {
      toggles: {
        get(t, e) {
          return Ae(t.toggle, e);
        },
        watch() {
          this.hide();
        },
      },
    },
    disconnected() {
      this.hide();
    },
    events: [
      {
        name: "click",
        delegate() {
          return this.toggle + ":not(.mod-disabled)";
        },
        handler(t) {
          t.preventDefault(), this.show(t.current);
        },
      },
    ],
    methods: {
      show(t) {
        let e,
          n = this,
          i = J(this.toggles.map(Rr), "source");
        return (
          _(t) &&
            ((e = Rr(t).source),
            (t = x(i, function (t) {
              t = t.source;
              return e === t;
            }))),
          (this.panel =
            this.panel ||
            this.$create("lightboxPanel", Y({}, this.$props, { items: i }))),
          Kt(this.panel.$el, "hidden", function () {
            return (n.panel = !1);
          }),
          this.panel.show(t)
        );
      },
      hide() {
        return this.panel && this.panel.hide();
      },
    },
  };
  function Rr(e) {
    const n = {};
    return (
      ["href", "caption", "type", "poster", "alt", "attrs"].forEach(function (
        t
      ) {
        n["href" === t ? "source" : t] = ut(e, t);
      }),
      (n.attrs = In(n.attrs)),
      n
    );
  }
  var qr = [
      "x",
      "y",
      "bgx",
      "bgy",
      "rotate",
      "scale",
      "color",
      "backgroundColor",
      "borderColor",
      "opacity",
      "blur",
      "hue",
      "grayscale",
      "invert",
      "saturate",
      "sepia",
      "fopacity",
      "stroke",
    ],
    ft = {
      mixins: [sr],
      props: qr.reduce(function (t, e) {
        return (t[e] = "list"), t;
      }, {}),
      data: qr.reduce(function (t, e) {
        return (t[e] = void 0), t;
      }, {}),
      computed: {
        props(f, p) {
          const m = this;
          return qr.reduce(function (t, e) {
            if (D(f[e])) return t;
            var n,
              i,
              r = e.match(/color/i),
              o = r || "opacity" === e,
              s = f[e].slice();
            o && We(p, e, ""),
              s.length < 2 &&
                s.unshift(("scale" === e ? 1 : o ? We(p, e) : 0) || 0);
            var a,
              u,
              c,
              h,
              l,
              o = s.reduce(function (t, e) {
                return (z(e) && e.replace(/-|\d/g, "").trim()) || t;
              }, "");
            if (
              (r
                ? ((r = p.style.color),
                  (s = s.map(function (t) {
                    return We(We(p, "color", t), "color")
                      .split(/[(),]/g)
                      .slice(1, -1)
                      .concat(1)
                      .slice(0, 4)
                      .map(L);
                  })),
                  (p.style.color = r))
                : g(e, "bg")
                ? ((a = "bgy" === e ? "height" : "width"),
                  (s = s.map(function (t) {
                    return dn(t, a, m.$el);
                  })),
                  We(p, "background-position-" + e[2], ""),
                  (i = We(p, "backgroundPosition").split(" ")[
                    "x" === e[2] ? 0 : 1
                  ]),
                  (n = m.covers
                    ? ((u = Math.min.apply(Math, s)),
                      (c = Math.max.apply(Math, s)),
                      (h = s.indexOf(u) < s.indexOf(c)),
                      (l = c - u),
                      (s = s.map(function (t) {
                        return t - (h ? u : c);
                      })),
                      (h ? -l : 0) + "px")
                    : i))
                : (s = s.map(L)),
              "stroke" === e)
            ) {
              if (
                !s.some(function (t) {
                  return t;
                })
              )
                return t;
              const d = dr(m.$el);
              We(p, "strokeDasharray", d),
                (s = (s =
                  "%" === o
                    ? s.map(function (t) {
                        return (t * d) / 100;
                      })
                    : s).reverse()),
                (e = "strokeDashoffset");
            }
            return (t[e] = { steps: s, unit: o, pos: n, bgPos: i, diff: l }), t;
          }, {});
        },
        bgProps() {
          const e = this;
          return ["bgx", "bgy"].filter(function (t) {
            return t in e.props;
          });
        },
        covers(t, e) {
          return (
            (i = (n = e).style.backgroundSize),
            (e = "cover" === We(We(n, "backgroundSize", ""), "backgroundSize")),
            (n.style.backgroundSize = i),
            e
          );
          let n, i;
        },
      },
      disconnected() {
        delete this._image;
      },
      update: {
        read(t) {
          let e,
            n,
            a,
            u,
            c,
            h = this;
          this.matchMedia &&
            (t.image ||
              !this.covers ||
              !this.bgProps.length ||
              ((e = We(this.$el, "backgroundImage").replace(
                /^none|url\(["']?(.+?)["']?\)$/,
                "$1"
              )) &&
                (((n = new Image()).src = e),
                (t.image = n).naturalWidth ||
                  (n.onload = function () {
                    return h.$update();
                  }))),
            (n = t.image) &&
              n.naturalWidth &&
              ((a = {
                width: this.$el.offsetWidth,
                height: this.$el.offsetHeight,
              }),
              (u = { width: n.naturalWidth, height: n.naturalHeight }),
              (c = nt.cover(u, a)),
              this.bgProps.forEach(function (t) {
                var e,
                  n = h.props[t],
                  i = n.diff,
                  r = n.bgPos,
                  o = n.steps,
                  n = "bgy" === t ? "height" : "width",
                  s = c[n] - a[n];
                s < i
                  ? (a[n] = c[n] + i - s)
                  : i < s &&
                    (e = a[n] / dn(r, n, h.$el)) &&
                    (h.props[t].steps = o.map(function (t) {
                      return t - (s - i) / e;
                    })),
                  (c = nt.cover(u, a));
              }),
              (t.dim = c)));
        },
        write(t) {
          t = t.dim;
          this.matchMedia
            ? t &&
              We(this.$el, {
                backgroundSize: t.width + "px " + t.height + "px",
                backgroundRepeat: "no-repeat",
              })
            : We(this.$el, { backgroundSize: "", backgroundRepeat: "" });
        },
        events: ["resize"],
      },
      methods: {
        reset() {
          const n = this;
          X(this.getCss(0), function (t, e) {
            return We(n.$el, e, "");
          });
        },
        getCss(l) {
          const d = this.props;
          return Object.keys(d).reduce(
            function (t, e) {
              let n = d[e],
                i = n.steps,
                r = n.unit,
                o = n.pos,
                s = (function (t, e, n) {
                  void 0 === n && (n = 2);
                  var i = Ur(t, e),
                    t = i[0],
                    e = i[1],
                    i = i[2];
                  return (B(t)
                    ? t + Math.abs(t - e) * i * (t < e ? 1 : -1)
                    : +e
                  ).toFixed(n);
                })(i, l);
              switch (e) {
                case "x":
                case "y":
                  (r = r || "px"),
                    (t.transform +=
                      " translate" +
                      p(e) +
                      "(" +
                      L(s).toFixed("px" === r ? 0 : 2) +
                      r +
                      ")");
                  break;
                case "rotate":
                  (r = r || "deg"), (t.transform += " rotate(" + (s + r) + ")");
                  break;
                case "scale":
                  t.transform += " scale(" + s + ")";
                  break;
                case "bgy":
                case "bgx":
                  t["background-position-" + e[2]] =
                    "calc(" + o + " + " + s + "px)";
                  break;
                case "color":
                case "backgroundColor":
                case "borderColor":
                  var a = Ur(i, l),
                    u = a[0],
                    c = a[1],
                    h = a[2];
                  t[e] =
                    "rgba(" +
                    u
                      .map(function (t, e) {
                        return (
                          (t += h * (c[e] - t)),
                          3 === e ? L(t) : parseInt(t, 10)
                        );
                      })
                      .join(",") +
                    ")";
                  break;
                case "blur":
                  (r = r || "px"), (t.filter += " blur(" + (s + r) + ")");
                  break;
                case "hue":
                  (r = r || "deg"),
                    (t.filter += " hue-rotate(" + (s + r) + ")");
                  break;
                case "fopacity":
                  (r = r || "%"), (t.filter += " opacity(" + (s + r) + ")");
                  break;
                case "grayscale":
                case "invert":
                case "saturate":
                case "sepia":
                  (r = r || "%"), (t.filter += " " + e + "(" + (s + r) + ")");
                  break;
                default:
                  t[e] = s;
              }
              return t;
            },
            { transform: "", filter: "" }
          );
        },
      },
    };
  function Ur(t, e) {
    var n = t.length - 1,
      i = Math.min(Math.floor(n * e), n - 1),
      i = t.slice(i, i + 2);
    return i.push(1 === e ? 1 : (e % (1 / n)) * n), i;
  }
  Xi = {
    mixins: [ft],
    props: { target: String, viewport: Number, easing: Number },
    data: { target: !1, viewport: 1, easing: 1 },
    computed: {
      target(t, e) {
        t = t.target;
        return (function t(e) {
          return e ? ("offsetTop" in e ? e : t(Et(e))) : document.body;
        })((t && Pt(t, e)) || e);
      },
    },
    update: {
      read(t, e) {
        let n = t.percent;
        if ((e.has("scroll") || (n = !1), this.matchMedia)) {
          const i = n;
          return (
            (t = jn(this.target) / (this.viewport || 1)),
            (e = this.easing),
            {
              percent: (n = Z(t * (1 - (e - e * t)))),
              style: i !== n && this.getCss(n),
            }
          );
        }
      },
      write(t) {
        t = t.style;
        this.matchMedia ? t && We(this.$el, t) : this.reset();
      },
      events: ["scroll", "resize"],
    },
  };
  sr = {
    update: {
      write() {
        let t;
        this.stack.length ||
          this.dragging ||
          ((t = this.getValidIndex(this.index)),
          (~this.prevIndex && this.index === t) || this.show(t));
      },
      events: ["resize"],
    },
  };
  function Yr(t, e, n) {
    const i = Kr(t, e);
    return n
      ? i - ((t = t), nn(e).width / 2 - nn(t).width / 2)
      : Math.min(i, Gr(e));
  }
  function Gr(t) {
    return Math.max(0, Xr(t) - nn(t).width);
  }
  function Xr(t) {
    return Ot(t).reduce(function (t, e) {
      return nn(e).width + t;
    }, 0);
  }
  function Kr(t, e) {
    return (
      (t &&
        (on(t).left + (lt ? nn(t).width - nn(e).width : 0)) * (lt ? -1 : 1)) ||
      0
    );
  }
  function Jr(t, e, n) {
    Qt(t, te(e, !1, !1, n));
  }
  Mi = {
    mixins: [di, Mi, sr],
    props: { center: Boolean, sets: Boolean },
    data: {
      center: !1,
      sets: !1,
      attrItem: "mod-slider-item",
      selList: ".mod-slider-items",
      selNav: ".mod-slider-nav",
      clsContainer: "mod-slider-container",
      Transitioner(i, r, o, t) {
        const e = t.center,
          s = t.easing,
          a = t.list,
          u = new ue(),
          n = i ? Yr(i, a, e) : Yr(r, a, e) + nn(r).width * o,
          c = r ? Yr(r, a, e) : n + nn(i).width * o * (lt ? -1 : 1);
        return {
          dir: o,
          show(t, e, n) {
            void 0 === e && (e = 0);
            n = n ? "linear" : s;
            return (
              (t -= Math.round(t * Z(e, -1, 1))),
              this.translate(e),
              i && this.updateTranslates(),
              (e = i ? e : Z(e, 0, 1)),
              Jr(this.getItemIn(), "itemin", {
                percent: e,
                duration: t,
                timing: n,
                dir: o,
              }),
              i &&
                Jr(this.getItemIn(!0), "itemout", {
                  percent: 1 - e,
                  duration: t,
                  timing: n,
                  dir: o,
                }),
              Ke.start(
                a,
                { transform: Pr(-c * (lt ? -1 : 1), "px") },
                t,
                n
              ).then(u.resolve, Q),
              u.promise
            );
          },
          cancel() {
            Ke.cancel(a);
          },
          reset() {
            We(a, "transform", "");
          },
          forward(t, e) {
            return (
              void 0 === e && (e = this.percent()),
              Ke.cancel(a),
              this.show(t, e, !0)
            );
          },
          translate(t) {
            const e = this.getDistance() * o * (lt ? -1 : 1);
            We(
              a,
              "transform",
              Pr(Z(e - e * t - c, -Xr(a), nn(a).width) * (lt ? -1 : 1), "px")
            ),
              this.updateTranslates(),
              i &&
                ((t = Z(t, -1, 1)),
                Jr(this.getItemIn(), "itemtranslatein", { percent: t, dir: o }),
                Jr(this.getItemIn(!0), "itemtranslateout", {
                  percent: 1 - t,
                  dir: o,
                }));
          },
          percent() {
            return Math.abs(
              (We(a, "transform").split(",")[4] * (lt ? -1 : 1) + n) / (c - n)
            );
          },
          getDistance() {
            return Math.abs(c - n);
          },
          getItemIn(t) {
            void 0 === t && (t = !1);
            var e = K(this.getActives(), "offsetLeft"),
              n = K(Ot(a), "offsetLeft"),
              e = Dt(n, e[0 < o * (t ? -1 : 1) ? e.length - 1 : 0]);
            return ~e && n[e + (i && !t ? o : 0)];
          },
          getActives() {
            return [i || r].concat(
              Ot(a).filter(function (t) {
                const e = Kr(t, a);
                return n < e && e + nn(t).width <= nn(a).width + n;
              })
            );
          },
          updateTranslates() {
            const n = this.getActives();
            Ot(a).forEach(function (t) {
              const e = w(n, t);
              Jr(t, "itemtranslate" + (e ? "in" : "out"), {
                percent: e ? 1 : 0,
                dir: t.offsetLeft <= r.offsetLeft ? 1 : -1,
              });
            });
          },
        };
      },
    },
    computed: {
      avgWidth() {
        return Xr(this.list) / this.length;
      },
      finite(t) {
        return (
          t.finite ||
          Math.ceil(Xr(this.list)) <
            nn(this.list).width +
              ((t = this.list),
              Math.max.apply(
                Math,
                [0].concat(
                  Ot(t).map(function (t) {
                    return nn(t).width;
                  })
                )
              )) +
              this.center
        );
      },
      maxIndex() {
        if (!this.finite || (this.center && !this.sets)) return this.length - 1;
        if (this.center) return G(this.sets);
        let e = 0,
          n = Gr(this.list),
          t = x(this.slides, function (t) {
            return n <= e || void (e += nn(t).width);
          });
        return ~t ? t : this.length - 1;
      },
      sets(t) {
        const r = this;
        if ((t = t.sets)) {
          let o = nn(this.list).width / (this.center ? 2 : 1),
            s = 0,
            a = o,
            u = 0;
          return (
            !O(
              (t = K(this.slides, "offsetLeft").reduce(function (t, e, n) {
                const i = nn(e).width;
                return (
                  s < u + i &&
                    (w(t, (n = !r.center && n > r.maxIndex ? r.maxIndex : n)) ||
                      ((e = r.slides[n + 1]),
                      r.center && e && i < a - nn(e).width / 2
                        ? (a -= i)
                        : ((a = o),
                          t.push(n),
                          (s = u + o + (r.center ? i / 2 : 0))))),
                  (u += i),
                  t
                );
              }, []))
            ) && t
          );
        }
      },
      transitionOptions() {
        return { center: this.center, list: this.list };
      },
    },
    connected() {
      Pe(this.$el, this.clsContainer, !_e("." + this.clsContainer, this.$el));
    },
    update: {
      write() {
        const n = this;
        this.navItems.forEach(function (t) {
          const e = H(ut(t, n.attrItem));
          !1 !== e &&
            (t.hidden =
              !n.maxIndex || e > n.maxIndex || (n.sets && !w(n.sets, e)));
        }),
          !this.length ||
            this.dragging ||
            this.stack.length ||
            (this.reorder(), this._translate(1));
        const e = this._getTransitioner(this.index).getActives();
        this.slides.forEach(function (t) {
          return Pe(t, n.clsActive, w(e, t));
        }),
          !this.clsActivated ||
            (this.sets && !w(this.sets, L(this.index))) ||
            this.slides.forEach(function (t) {
              return Pe(t, n.clsActivated || "", w(e, t));
            });
      },
      events: ["resize"],
    },
    events: {
      beforeitemshow(t) {
        !this.dragging &&
          this.sets &&
          this.stack.length < 2 &&
          !w(this.sets, this.index) &&
          (this.index = this.getValidIndex());
        const e = Math.abs(
          this.index -
            this.prevIndex +
            ((0 < this.dir && this.index < this.prevIndex) ||
            (this.dir < 0 && this.index > this.prevIndex)
              ? (this.maxIndex + 1) * this.dir
              : 0)
        );
        if (!this.dragging && 1 < e) {
          for (let n = 0; n < e; n++)
            this.stack.splice(1, 0, 0 < this.dir ? "next" : "previous");
          t.preventDefault();
        } else {
          t =
            this.dir < 0 || !this.slides[this.prevIndex]
              ? this.index
              : this.prevIndex;
          (this.duration =
            Fr(this.avgWidth / this.velocity) *
            (nn(this.slides[t]).width / this.avgWidth)),
            this.reorder();
        }
      },
      itemshow() {
        ~this.prevIndex &&
          ze(this._getTransitioner().getItemIn(), this.clsActive);
      },
    },
    methods: {
      reorder() {
        const n = this;
        if (this.finite) We(this.slides, "order", "");
        else {
          const i =
            0 < this.dir && this.slides[this.prevIndex]
              ? this.prevIndex
              : this.index;
          if (
            (this.slides.forEach(function (t, e) {
              return We(
                t,
                "order",
                0 < n.dir && e < i ? 1 : n.dir < 0 && e >= n.index ? -1 : ""
              );
            }),
            this.center)
          )
            for (
              let t = this.slides[i],
                e = nn(this.list).width / 2 - nn(t).width / 2,
                r = 0;
              0 < e;

            ) {
              const o = this.getIndex(--r + i, i),
                s = this.slides[o];
              We(s, "order", i < o ? -2 : -1), (e -= nn(s).width);
            }
        }
      },
      getValidIndex(t, e) {
        if (
          (void 0 === t && (t = this.index),
          void 0 === e && (e = this.prevIndex),
          (t = this.getIndex(t, e)),
          !this.sets)
        )
          return t;
        let n;
        do {
          if (w(this.sets, t)) return t;
        } while (((n = t), (t = this.getIndex(t + this.dir, e)) !== n));
        return t;
      },
    },
  };
  ft = {
    mixins: [ft],
    data: { selItem: "!li" },
    computed: {
      item(t, e) {
        return Pt(t.selItem, e);
      },
    },
    events: [
      {
        name: "itemin itemout",
        self: !0,
        el() {
          return this.item;
        },
        handler(t) {
          var n = this,
            i = t.type,
            t = t.detail,
            r = t.percent,
            o = t.duration,
            s = t.timing,
            a = t.dir;
          pn.read(function () {
            const t = n.getCss(Qr(i, a, r)),
              e = n.getCss(Zr(i) ? 0.5 : 0 < a ? 1 : 0);
            pn.write(function () {
              We(n.$el, t), Ke.start(n.$el, e, o, s).catch(Q);
            });
          });
        },
      },
      {
        name: "transitioncanceled transitionend",
        self: !0,
        el() {
          return this.item;
        },
        handler() {
          Ke.cancel(this.$el);
        },
      },
      {
        name: "itemtranslatein itemtranslateout",
        self: !0,
        el() {
          return this.item;
        },
        handler(t) {
          var e = this,
            n = t.type,
            t = t.detail,
            i = t.percent,
            r = t.dir;
          pn.read(function () {
            const t = e.getCss(Qr(n, r, i));
            pn.write(function () {
              return We(e.$el, t);
            });
          });
        },
      },
    ],
  };
  function Zr(t) {
    return u(t, "in");
  }
  function Qr(t, e, n) {
    return (n /= 2), Zr(t) ? (e < 0 ? 1 - n : n) : e < 0 ? n : 1 - n;
  }
  var to,
    Kn = Y({}, Kn, {
      fade: {
        show() {
          return [{ opacity: 0, zIndex: 0 }, { zIndex: -1 }];
        },
        percent(t) {
          return 1 - We(t, "opacity");
        },
        translate(t) {
          return [{ opacity: 1 - t, zIndex: 0 }, { zIndex: -1 }];
        },
      },
      scale: {
        show() {
          return [
            { opacity: 0, transform: Hr(1.5), zIndex: 0 },
            { zIndex: -1 },
          ];
        },
        percent(t) {
          return 1 - We(t, "opacity");
        },
        translate(t) {
          return [
            { opacity: 1 - t, transform: Hr(1 + 0.5 * t), zIndex: 0 },
            { zIndex: -1 },
          ];
        },
      },
      pull: {
        show(t) {
          return t < 0
            ? [
                { transform: Pr(30), zIndex: -1 },
                { transform: Pr(), zIndex: 0 },
              ]
            : [
                { transform: Pr(-100), zIndex: 0 },
                { transform: Pr(), zIndex: -1 },
              ];
        },
        percent(t, e, n) {
          return n < 0 ? 1 - Dr(e) : Dr(t);
        },
        translate(t, e) {
          return e < 0
            ? [
                { transform: Pr(30 * t), zIndex: -1 },
                { transform: Pr(-100 * (1 - t)), zIndex: 0 },
              ]
            : [
                { transform: Pr(100 * -t), zIndex: 0 },
                { transform: Pr(30 * (1 - t)), zIndex: -1 },
              ];
        },
      },
      push: {
        show(t) {
          return t < 0
            ? [
                { transform: Pr(100), zIndex: 0 },
                { transform: Pr(), zIndex: -1 },
              ]
            : [
                { transform: Pr(-30), zIndex: -1 },
                { transform: Pr(), zIndex: 0 },
              ];
        },
        percent(t, e, n) {
          return 0 < n ? 1 - Dr(e) : Dr(t);
        },
        translate(t, e) {
          return e < 0
            ? [
                { transform: Pr(100 * t), zIndex: 0 },
                { transform: Pr(-30 * (1 - t)), zIndex: -1 },
              ]
            : [
                { transform: Pr(-30 * t), zIndex: -1 },
                { transform: Pr(100 * (1 - t)), zIndex: 0 },
              ];
        },
      },
    }),
    Kn = {
      mixins: [di, Ct, sr],
      props: { ratio: String, minHeight: Number, maxHeight: Number },
      data: {
        ratio: "16:9",
        minHeight: !1,
        maxHeight: !1,
        selList: ".mod-slideshow-items",
        attrItem: "mod-slideshow-item",
        selNav: ".mod-slideshow-nav",
        Animations: Kn,
      },
      update: {
        read() {
          var t = this.ratio.split(":").map(Number),
            e = t[0],
            t = ((t = t[1]) * this.list.offsetWidth) / e || 0;
          return (
            this.minHeight && (t = Math.max(this.minHeight, t)),
            {
              height:
                (t = this.maxHeight ? Math.min(this.maxHeight, t) : t) -
                hn(this.list, "height", "content-box"),
            }
          );
        },
        write(t) {
          t = t.height;
          0 < t && We(this.list, "minHeight", t);
        },
        events: ["resize"],
      },
    },
    dt = {
      mixins: [di, dt],
      props: {
        group: String,
        threshold: Number,
        clsItem: String,
        clsPlaceholder: String,
        clsDrag: String,
        clsDragState: String,
        clsBase: String,
        clsNoDrag: String,
        clsEmpty: String,
        clsCustom: String,
        handle: String,
      },
      data: {
        group: !1,
        threshold: 5,
        clsItem: "mod-sortable-item",
        clsPlaceholder: "mod-sortable-placeholder",
        clsDrag: "mod-sortable-drag",
        clsDragState: "mod-drag",
        clsBase: "mod-sortable",
        clsNoDrag: "mod-sortable-nodrag",
        clsEmpty: "mod-sortable-empty",
        clsCustom: "",
        handle: !1,
        pos: {},
      },
      created() {
        const n = this;
        ["init", "start", "move", "end"].forEach(function (t) {
          const e = n[t];
          n[t] = function (t) {
            Y(n.pos, ae(t)), e(t);
          };
        });
      },
      events: { name: mt, passive: !1, handler: "init" },
      computed: {
        target() {
          return (this.$el.tBodies || [this.$el])[0];
        },
        items() {
          return Ot(this.target);
        },
        isEmpty: {
          get() {
            return O(this.items);
          },
          watch(t) {
            Pe(this.target, this.clsEmpty, t);
          },
          immediate: !0,
        },
        handles: {
          get(t, e) {
            t = t.handle;
            return t ? Ae(t, e) : this.items;
          },
          watch(t, e) {
            We(e, { touchAction: "", userSelect: "" }),
              We(t, { touchAction: pt ? "none" : "", userSelect: "none" });
          },
          immediate: !0,
        },
      },
      update: {
        write(t) {
          let e, n, i, r, o, s, a;
          this.drag &&
            Et(this.placeholder) &&
            ((e = (n = this.pos).x),
            (a = n.y),
            (s = (i = this.origin).offsetTop),
            (r = i.offsetLeft),
            (n = this.placeholder),
            We(this.drag, { top: a - s, left: e - r }),
            (i = this.getSortable(document.elementFromPoint(e, a))) &&
              ((s = i.items).some(Ke.inProgress) ||
                ((o = { x: e, y: a }),
                (r = (r = s)[
                  x(r, function (t) {
                    return et(o, t.getBoundingClientRect());
                  })
                ]),
                (!s.length || (r && r !== n)) &&
                  ((s = this.getSortable(n)),
                  !1 !==
                    (a = (function (t, e, n, i, r, o) {
                      if (!Ot(t).length) return;
                      const s = e.getBoundingClientRect();
                      if (!o)
                        return (function (t, e) {
                          const n = 1 === Ot(t).length;
                          n && we(t, e);
                          var i = Ot(t),
                            t = i.some(function (t, e) {
                              const n = t.getBoundingClientRect();
                              return i.slice(e + 1).some(function (t) {
                                t = t.getBoundingClientRect();
                                return !eo(
                                  [n.left, n.right],
                                  [t.left, t.right]
                                );
                              });
                            });
                          n && ke(e);
                          return t;
                        })(t, n) || r < s.top + s.height / 2
                          ? e
                          : e.nextElementSibling;
                      (o = n.getBoundingClientRect()),
                        (t = eo([s.top, s.bottom], [o.top, o.bottom])),
                        (n = t ? i : r),
                        (i = t ? "width" : "height"),
                        (r = t ? "left" : "top"),
                        (t = t ? "right" : "bottom"),
                        (i = o[i] < s[i] ? s[i] - o[i] : 0);
                      if (o[r] < s[r])
                        return !(i && n < s[r] + i) && e.nextElementSibling;
                      if (i && n > s[t] - i) return !1;
                      return e;
                    })(i.target, r, n, e, a, i === s && t.moved !== r)) &&
                    ((a && n === a) ||
                      (i !== s ? (s.remove(n), (t.moved = r)) : delete t.moved,
                      i.insert(n, a),
                      this.touched.add(i)))))));
        },
        events: ["move"],
      },
      methods: {
        init(t) {
          const e = t.target,
            n = t.button,
            i = t.defaultPrevented,
            r = this.items.filter(function (t) {
              return Bt(e, t);
            })[0];
          !r ||
            i ||
            0 < n ||
            It(e) ||
            Bt(e, "." + this.clsNoDrag) ||
            (this.handle && !Bt(e, this.handle)) ||
            (t.preventDefault(),
            (this.touched = new Set([this])),
            (this.placeholder = r),
            (this.origin = Y({ target: e, index: Dt(r) }, this.pos)),
            Kt(document, gt, this.move),
            Kt(document, vt, this.end),
            this.threshold || this.start(t));
        },
        start(t) {
          this.drag = (function (t, e) {
            t = we(
              t,
              e.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\/>$)/g, "$1div$2")
            );
            return (
              We(t, "margin", "0", "important"),
              We(
                t,
                Y(
                  {
                    boxSizing: "border-box",
                    width: e.offsetWidth,
                    height: e.offsetHeight,
                  },
                  We(e, [
                    "paddingLeft",
                    "paddingRight",
                    "paddingTop",
                    "paddingBottom",
                  ])
                )
              ),
              an(t.firstElementChild, an(e.firstElementChild)),
              t
            );
          })(this.$container, this.placeholder);
          var e,
            n,
            i = this.placeholder.getBoundingClientRect(),
            r = i.left,
            i = i.top;
          Y(this.origin, {
            offsetLeft: this.pos.x - r,
            offsetTop: this.pos.y - i,
          }),
            ze(this.drag, this.clsDrag, this.clsCustom),
            ze(this.placeholder, this.clsPlaceholder),
            ze(this.items, this.clsItem),
            ze(document.documentElement, this.clsDragState),
            Qt(this.$el, "start", [this, this.placeholder]),
            (e = this.pos),
            (n = Date.now()),
            (to = setInterval(function () {
              let t = e.x,
                s = e.y;
              s += window.pageYOffset;
              const a = 0.3 * (Date.now() - n);
              (n = Date.now()),
                Fn(document.elementFromPoint(t, e.y))
                  .reverse()
                  .some(function (t) {
                    var e = t.scrollTop,
                      n = t.scrollHeight,
                      i = rn(Wn(t)),
                      r = i.top,
                      o = i.bottom,
                      i = i.height;
                    if (r < s && s < r + 35) e -= a;
                    else {
                      if (!(s < o && o - 35 < s)) return;
                      e += a;
                    }
                    if (0 < e && e < n - i) return Hn(t, e), !0;
                  });
            }, 15)),
            this.move(t);
        },
        move(t) {
          this.drag
            ? this.$emit("move")
            : (Math.abs(this.pos.x - this.origin.x) > this.threshold ||
                Math.abs(this.pos.y - this.origin.y) > this.threshold) &&
              this.start(t);
        },
        end() {
          let t,
            i = this;
          Jt(document, gt, this.move),
            Jt(document, vt, this.end),
            Jt(window, "scroll", this.scroll),
            this.drag &&
              (clearInterval(to),
              (t = this.getSortable(this.placeholder)),
              this === t
                ? this.origin.index !== Dt(this.placeholder) &&
                  Qt(this.$el, "moved", [this, this.placeholder])
                : (Qt(t.$el, "added", [t, this.placeholder]),
                  Qt(this.$el, "removed", [this, this.placeholder])),
              Qt(this.$el, "stop", [this, this.placeholder]),
              ke(this.drag),
              (this.drag = null),
              this.touched.forEach(function (t) {
                const e = t.clsPlaceholder,
                  n = t.clsItem;
                return i.touched.forEach(function (t) {
                  return Be(t.items, e, n);
                });
              }),
              (this.touched = null),
              Be(document.documentElement, this.clsDragState));
        },
        insert(t, e) {
          const n = this;
          ze(this.items, this.clsItem);
          function i() {
            return e ? be(e, t) : we(n.target, t);
          }
          this.animation ? this.animate(i) : i();
        },
        remove(t) {
          Bt(t, this.target) &&
            (this.animation
              ? this.animate(function () {
                  return ke(t);
                })
              : ke(t));
        },
        getSortable(t) {
          do {
            const e = this.$getComponent(t, "sortable");
            if (
              e &&
              (e === this || (!1 !== this.group && e.group === this.group))
            )
              return e;
          } while ((t = Et(t)));
        },
      },
    };
  function eo(t, e) {
    return t[1] > e[0] && e[1] > t[0];
  }
  bt = {
    mixins: [Yi, fi, yi],
    args: "title",
    props: { delay: Number, title: String },
    data: {
      pos: "top",
      title: "",
      delay: 0,
      animation: ["mod-animation-scale-up"],
      duration: 100,
      cls: "mod-active",
      clsPos: "mod-tooltip",
    },
    beforeConnect() {
      let t;
      (this._hasTitle = st(this.$el, "title")),
        ot(this.$el, "title", ""),
        this.updateAria(!1),
        (function (t) {
          return It(t) || At(t, "a,button") || st(t, "tabindex");
        })((t = this.$el)) || ot(t, "tabindex", "0");
    },
    disconnected() {
      this.hide(), ot(this.$el, "title", this._hasTitle ? this.title : null);
    },
    methods: {
      show() {
        const e = this;
        !this.isToggled(this.tooltip) &&
          this.title &&
          ((this._unbind = Zt(
            document,
            "show keydown " + mt,
            this.hide,
            !1,
            function (t) {
              return (
                (t.type === mt && !Bt(t.target, e.$el)) ||
                ("keydown" === t.type && 27 === t.keyCode) ||
                ("show" === t.type &&
                  t.detail[0] !== e &&
                  t.detail[0].$name === e.$name)
              );
            }
          )),
          clearTimeout(this.showTimer),
          (this.showTimer = setTimeout(this._show, this.delay)));
      },
      hide() {
        const t = this;
        At(this.$el, "input:focus") ||
          (clearTimeout(this.showTimer),
          this.isToggled(this.tooltip) &&
            this.toggleElement(this.tooltip, !1, !1).then(function () {
              (t.tooltip = ke(t.tooltip)), t._unbind();
            }));
      },
      _show() {
        const n = this;
        (this.tooltip = we(
          this.container,
          '<div class="' +
            this.clsPos +
            '"> <div class="' +
            this.clsPos +
            '-inner">' +
            this.title +
            "</div> </div>"
        )),
          Kt(this.tooltip, "toggled", function (t, e) {
            n.updateAria(e),
              e &&
                (n.positionAt(n.tooltip, n.$el),
                (n.origin =
                  "y" === n.getAxis()
                    ? ln(n.dir) + "-" + n.align
                    : n.align + "-" + ln(n.dir)));
          }),
          this.toggleElement(this.tooltip, !0);
      },
      updateAria(t) {
        ot(this.$el, "aria-expanded", t);
      },
    },
    events:
      (((yi = { focus: "show", blur: "hide" })[wt + " " + bt] = function (t) {
        se(t) || this[t.type === wt ? "show" : "hide"]();
      }),
      (yi[mt] = function (t) {
        se(t) && this.show();
      }),
      yi),
  };
  yi = {
    props: {
      allow: String,
      clsDragover: String,
      concurrent: Number,
      maxSize: Number,
      method: String,
      mime: String,
      msgInvalidMime: String,
      msgInvalidName: String,
      msgInvalidSize: String,
      multiple: Boolean,
      name: String,
      params: Object,
      type: String,
      url: String,
    },
    data: {
      allow: !1,
      clsDragover: "mod-dragover",
      concurrent: 1,
      maxSize: 0,
      method: "POST",
      mime: !1,
      msgInvalidMime: "Invalid File Type: %s",
      msgInvalidName: "Invalid File Name: %s",
      msgInvalidSize: "Invalid File Size: %s Kilobytes Max",
      multiple: !1,
      name: "files[]",
      params: {},
      type: "",
      url: "",
      abort: Q,
      beforeAll: Q,
      beforeSend: Q,
      complete: Q,
      completeAll: Q,
      error: Q,
      fail: Q,
      load: Q,
      loadEnd: Q,
      loadStart: Q,
      progress: Q,
    },
    events: {
      change(t) {
        At(t.target, 'input[type="file"]') &&
          (t.preventDefault(),
          t.target.files && this.upload(t.target.files),
          (t.target.value = ""));
      },
      drop(t) {
        io(t);
        t = t.dataTransfer;
        t && t.files && (Be(this.$el, this.clsDragover), this.upload(t.files));
      },
      dragenter(t) {
        io(t);
      },
      dragover(t) {
        io(t), ze(this.$el, this.clsDragover);
      },
      dragleave(t) {
        io(t), Be(this.$el, this.clsDragover);
      },
    },
    methods: {
      upload(t) {
        const i = this;
        if (t.length) {
          Qt(this.$el, "upload", [t]);
          for (let e = 0; e < t.length; e++) {
            if (this.maxSize && 1e3 * this.maxSize < t[e].size)
              return void this.fail(
                this.msgInvalidSize.replace("%s", this.maxSize)
              );
            if (this.allow && !no(this.allow, t[e].name))
              return void this.fail(
                this.msgInvalidName.replace("%s", this.allow)
              );
            if (this.mime && !no(this.mime, t[e].type))
              return void this.fail(
                this.msgInvalidMime.replace("%s", this.mime)
              );
          }
          this.multiple || (t = [t[0]]), this.beforeAll(this, t);
          var r = (function (t, e) {
              for (var n = [], i = 0; i < t.length; i += e) {
                for (var r = [], o = 0; o < e; o++) r.push(t[i + o]);
                n.push(r);
              }
              return n;
            })(t, this.concurrent),
            o = function (t) {
              let e,
                n = new FormData();
              for (e in (t.forEach(function (t) {
                return n.append(i.name, t);
              }),
              i.params))
                n.append(e, i.params[e]);
              pe(i.url, {
                data: n,
                method: i.method,
                responseType: i.type,
                beforeSend(t) {
                  const e = t.xhr;
                  return (
                    e.upload && Kt(e.upload, "progress", i.progress),
                    ["loadStart", "load", "loadEnd", "abort"].forEach(function (
                      t
                    ) {
                      return Kt(e, t.toLowerCase(), i[t]);
                    }),
                    i.beforeSend(t)
                  );
                },
              }).then(
                function (t) {
                  i.complete(t), r.length ? o(r.shift()) : i.completeAll(t);
                },
                function (t) {
                  return i.error(t);
                }
              );
            };
          o(r.shift());
        }
      },
    },
  };
  function no(t, e) {
    return e.match(
      new RegExp(
        "^" +
          t
            .replace(/\//g, "\\/")
            .replace(/\*\*/g, "(\\/[^\\/]+)*")
            .replace(/\*/g, "[^\\/]+")
            .replace(/((?!\\))\?/g, "$1.") +
          "$",
        "i"
      )
    );
  }
  function io(t) {
    t.preventDefault(), t.stopPropagation();
  }
  return (
    X(
      Object.freeze({
        __proto__: null,
        Countdown: t,
        Filter: wi,
        Lightbox: fe,
        LightboxPanel: Wr,
        Parallax: Xi,
        Slider: Mi,
        SliderParallax: ft,
        Slideshow: Kn,
        SlideshowParallax: ft,
        Sortable: dt,
        Tooltip: bt,
        Upload: yi,
      }),
      function (t, e) {
        return Jn.component(e, t);
      }
    ),
    Jn
  );
});
